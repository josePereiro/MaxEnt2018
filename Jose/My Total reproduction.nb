(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    674950,      12623]
NotebookOptionsPosition[    669332,      12439]
NotebookOutlinePosition[    669689,      12455]
CellTagsIndexPosition[    669646,      12452]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graphics funtions", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242896782218*^9, 
   3.756242899800069*^9}, {3.7562429490631113`*^9, 3.756242949674492*^9}, {
   3.756487873784925*^9, 3.7564878756951303`*^9}, {3.757975803294304*^9, 
   3.7579758049194193`*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "vl", ",", "vo", ",", "polytope", ",", "cg", ",", "Vg", ",", "R", ",", 
    "\[Delta]lac", ",", "mE", ",", "y", ",", " ", "\[Lambda]", ",", "Nf", ",",
     " ", "Nr", ",", "vatpMinGlobal", ",", "vatpMaxGlobal", ",", 
    "vatpMinLocal", ",", "vatpMaxLocal", ",", "vgMinGlobal", ",", 
    "vgMaxGlobal", ",", "vgMinLocal", ",", "vgMaxLocal", ",", 
    "vgDistribution", ",", "vatpDistribution", ",", "totalIntegral", ",", 
    "normalizedDistribution", ",", "distributionOfCells", ",", "showPolytope",
     ",", "showDensityMap", ",", " ", "showDensityMaps", ",", " ", 
    "showVgDistribution", ",", " ", "showVatpDistribution", ",", "s", ",", 
    "showSubstrateConcentration", ",", "w", ",", "showWasteConcentration", 
    ",", "\[IndentingNewLine]", "showCellDensity", ",", " ", 
    "showDilutionRate"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.753718292374029*^9, 3.753718353918015*^9}, {
   3.753718424688546*^9, 3.753718454645062*^9}, {3.753718485062379*^9, 
   3.753718502093173*^9}, {3.7537186174234447`*^9, 3.753718667256631*^9}, {
   3.75597477642002*^9, 3.755974778304697*^9}, 3.756239601838296*^9, 
   3.756239758332052*^9, 3.756239816526243*^9, 3.7562399299044247`*^9, {
   3.7562399633746223`*^9, 3.75623998335929*^9}, {3.756488153738346*^9, 
   3.756488174430813*^9}, 3.7564928995560417`*^9, {3.7564932351735277`*^9, 
   3.7564932374087467`*^9}, {3.756563571901679*^9, 3.756563572792345*^9}, {
   3.7565648659096203`*^9, 3.756564867363846*^9}, {3.756567109853632*^9, 
   3.756567120867792*^9}, {3.756636517949595*^9, 3.756636527555641*^9}, {
   3.756644201447524*^9, 3.756644203341969*^9}, {3.756663960247656*^9, 
   3.756663963701057*^9}, {3.756681330623766*^9, 3.7566813458878613`*^9}, {
   3.757401110910009*^9, 3.7574011124696617`*^9}},
 ExpressionUUID -> "f62f2fac-b79b-4052-b912-e8f1d59b2f9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Polytope", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Ghaphics", "  ", "--"}], "--"}], "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "vertexes", ",", " ", "range", ",", " ", "style", ",", " ", "labels"}],
        "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Layout", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"vertexes", "[", "\[Xi]_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ">", 
           RowBox[{"Nr", " ", "*", " ", "R"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Nf", "*", 
               RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", "R"}], ",", 
              RowBox[{"R", "/", "2"}]}], "}"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Nf", "*", 
               RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "0.2"}], 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
             RowBox[{"1.2", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "0.2"}], 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
             RowBox[{"1.2", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}]}], "}"}]}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"style", " ", "=", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0, 0],
            Editable->False,
            Selectable->False], ",", 
           RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(v\), \(atp\)]\) (mmol/h/gDW)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(v\), \(glc\)]\) (mmol/h/gDW)\>\""}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Show", " ", "a", " ", "graph", " ", "of", " ", "the", " ", 
         "polytope"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showPolytope", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Polytope with \[Xi] = \>\"", ",", "25"}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\[Xi]", ",", "25"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Plot", " ", "vertexes"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"vertexes", "[", "\[Xi]", "]"}], ",", "style", ",", 
               RowBox[{"range", "[", "\[Xi]", "]"}], ",", " ", "labels", ",", 
               
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"Polytope", " ", "region"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"RegionPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"polytope", "[", "\[Xi]", "]"}], "[", 
                RowBox[{"vg", ",", "vatp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"vatp", ",", "0", ",", 
                 RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"vg", ",", "0", ",", 
                 RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Show", " ", "polytope", " ", "and", " ", "the", " ", "probability", 
         " ", "density", " ", "map"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showDensityMap", "[", 
         RowBox[{"\[Xi]_", ",", " ", "\[Beta]_"}], " ", "]"}], ":=", " ", 
        RowBox[{"Module", " ", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"Plot", " ", "vertexes"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"vertexes", "[", "\[Xi]", "]"}], ",", "style", ",", 
              RowBox[{"range", "[", "\[Xi]", "]"}], ",", " ", "labels", ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Density", " ", "*)"}], "\[IndentingNewLine]", 
            
            RowBox[{"DensityPlot", "[", 
             RowBox[{
              RowBox[{"distributionOfCells", "[", 
               RowBox[{"0", ",", " ", "\[Beta]", ",", " ", "vatp"}], "]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"vatp", ",", " ", "vatpMinGlobal", ",", " ", 
                RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"vg", ",", "vgMinGlobal", ",", " ", 
                RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
              RowBox[{"RegionFunction", "\[Rule]", " ", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", " ", 
                  RowBox[{"vatp", ",", " ", "vg", ",", " ", "z"}], "}"}], ",",
                  " ", 
                 RowBox[{
                  RowBox[{"0", "\[LessEqual]", "vg", "\[LessEqual]", 
                   RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "\[And]", 
                  RowBox[{
                   RowBox[{"vl", "[", 
                    RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "0"}],
                   "\[And]", 
                  RowBox[{"0", "\[LessEqual]", 
                   RowBox[{"vo", "[", 
                    RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", 
                   "R"}]}]}], "]"}]}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
              RowBox[{"BoundaryStyle", " ", "\[Rule]", " ", "Black"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Variant", " ", "\[Beta]", " ", "value", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ghrapics", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                  "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
           "--"}], "--"}], "--"}], "--"}], "--"}]}], "-"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]list", ",", " ", "plotLegend", ",", "linePoints"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]list", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"1.99", " ", "100"}], ",", 
         RowBox[{"1.99", " ", "1000"}], ",", "\[Infinity]"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"linePoints", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", " ", "^", "3"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", ".01", ",", " ", "6", ",", "0.1"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Show", " ", "density", " ", "maps", " ", "with", " ", "variable", " ",
         "\[Beta]s"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showDensityMaps", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", " ", "map", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Probability Density Maps\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Beta] values: \>\"", ",", " ", "\[Beta]list"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"showDensityMap", "[", 
             RowBox[{"2", ",", "\[Beta]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Beta]", ",", " ", "\[Beta]list"}], "}"}]}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showNormalizedDistribution", "[", "\[Xi]_", "]"}], " ", ":=", 
       " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vatp", ",", "funList"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"normalizedDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Normalized Probability Density Function\>\"", ",", "25"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", " ", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
                 RowBox[{
                  RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", 
                  "]"}]], 
                RowBox[{"funList", 
                 RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
              RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", 
            RowBox[{"{", 
             RowBox[{"vatp", ",", "vatpMinGlobal", ",", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<vatp\>\"", ",", " ", 
               "\"\<normalized probability density\>\""}], "}"}]}], ",", " ", 
            
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showVatpDistribution", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"funList", ",", " ", "integralsList", ",", "vatp"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"vatpDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Propbability Density of Vatp\>\"", ",", "25"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", " ", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{"funList", 
              RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", " ", 
            RowBox[{"{", 
             RowBox[{"vatp", ",", "vatpMinGlobal", ",", 
              RowBox[{"vatpMaxLocal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<vatp\>\"", ",", " ", "\"\<probability density\>\""}], 
              "}"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showVgDistribution", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vg", ",", "funList"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"vgDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vg", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Propbability Density of Vg\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vgMinGlobal", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{"funList", 
              RowBox[{"\[DifferentialD]", "vg"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", " ", 
            RowBox[{"{", 
             RowBox[{"vg", ",", "vgMinGlobal", ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<vg\>\"", ",", " ", "\"\<probability density\>\""}],
               "}"}]}], ",", "\[IndentingNewLine]", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"showSubstrateConcentration", " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Substrate Concentration\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<sg\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showWasteConcentration", " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"w", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Waste Concentration\>\"", ",", "25"}], "]"}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<sl\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showDilutionRate", " ", ":=", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Dilution Rate\>\"", ",", "25"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", "All"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "All"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<D\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showCellDensity", " ", ":=", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Cell Density\>\"", ",", "25"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", "All"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "All"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<X\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.752928209078321*^9, 3.752928305402968*^9}, {
   3.752928348654373*^9, 3.7529283675308027`*^9}, {3.7529284030693083`*^9, 
   3.7529284042987747`*^9}, {3.752928435395398*^9, 3.752928451242942*^9}, {
   3.75292848482683*^9, 3.752928741701948*^9}, {3.752928776274506*^9, 
   3.752928880741659*^9}, {3.752929023549862*^9, 3.752929090550639*^9}, {
   3.752931564894202*^9, 3.752931567232703*^9}, 3.753708349520419*^9, 
   3.753717464063126*^9, {3.755969226176236*^9, 3.7559692504393377`*^9}, {
   3.755974767824445*^9, 3.7559747689740677`*^9}, {3.756383360982769*^9, 
   3.7563833654107037`*^9}, {3.75638380298702*^9, 3.7563839654243193`*^9}, {
   3.756384001942895*^9, 3.7563840034945793`*^9}, {3.756384046259841*^9, 
   3.756384354810882*^9}, {3.7563843885605307`*^9, 3.756384394268344*^9}, {
   3.75638446027365*^9, 3.7563844845044727`*^9}, {3.756384587686953*^9, 
   3.756384592048854*^9}, {3.756384648028749*^9, 3.756384686627091*^9}, {
   3.756384738938074*^9, 3.756384741776095*^9}, {3.7563848088384323`*^9, 
   3.756384823777356*^9}, {3.756384865373763*^9, 3.756384865653556*^9}, {
   3.75638505161972*^9, 3.7563850635649633`*^9}, {3.7563851607713623`*^9, 
   3.756385171380831*^9}, {3.756385220036057*^9, 3.756385220853949*^9}, {
   3.756385336303493*^9, 3.756385360673058*^9}, {3.756385403941848*^9, 
   3.7563854324530497`*^9}, {3.75648687334697*^9, 3.7564868845470953`*^9}, {
   3.75648722257229*^9, 3.756487250278961*^9}, {3.756487881218576*^9, 
   3.756488004948703*^9}, {3.7564880552470627`*^9, 3.756488078659453*^9}, {
   3.756488146851499*^9, 3.756488147935232*^9}, {3.756488224560073*^9, 
   3.756488304388631*^9}, 3.756488382429356*^9, 3.756488457147736*^9, {
   3.7564885429302387`*^9, 3.756488543413705*^9}, {3.7564897878568897`*^9, 
   3.756489840269883*^9}, {3.756489920572956*^9, 3.756489923695932*^9}, {
   3.756489977536152*^9, 3.756489977934013*^9}, {3.756492899575634*^9, 
   3.756492899588882*^9}, {3.756563631289238*^9, 3.756563631645152*^9}, {
   3.756563674674748*^9, 3.756563675695652*^9}, {3.756563711670443*^9, 
   3.7565637157452803`*^9}, {3.756563827012253*^9, 3.756563849360919*^9}, {
   3.756563935824139*^9, 3.756563985175514*^9}, {3.756564124168364*^9, 
   3.756564125956658*^9}, {3.756564641124723*^9, 3.7565646462566557`*^9}, {
   3.756564885645451*^9, 3.7565648988008966`*^9}, {3.7565719318605957`*^9, 
   3.7565721083411016`*^9}, {3.7566361914014997`*^9, 
   3.7566362056069736`*^9}, {3.756636260788316*^9, 3.7566362613124447`*^9}, {
   3.7566363239337063`*^9, 3.756636350293502*^9}, {3.756636391804042*^9, 
   3.7566363931582737`*^9}, {3.756636428996161*^9, 3.7566364329616756`*^9}, {
   3.756636483798502*^9, 3.7566365004337807`*^9}, {3.756636545560912*^9, 
   3.756636549318511*^9}, {3.756636585086939*^9, 3.756636597825116*^9}, {
   3.75663663195111*^9, 3.7566367902944727`*^9}, {3.756636858964273*^9, 
   3.756636888398233*^9}, {3.756637047097364*^9, 3.756637069756897*^9}, {
   3.756637175689*^9, 3.756637177317712*^9}, {3.756637319267541*^9, 
   3.756637353135886*^9}, {3.75663740249034*^9, 3.7566374029631243`*^9}, {
   3.756637553603161*^9, 3.7566375582131863`*^9}, {3.7566375980121927`*^9, 
   3.75663761046568*^9}, {3.7566376682121477`*^9, 3.756637743374117*^9}, {
   3.7566377942792997`*^9, 3.756637853660326*^9}, {3.756637892577139*^9, 
   3.75663791980173*^9}, {3.756637966168478*^9, 3.75663800213597*^9}, {
   3.7566380348507*^9, 3.756638055236557*^9}, {3.756638125858852*^9, 
   3.756638205849927*^9}, {3.756638238600567*^9, 3.7566383094313*^9}, {
   3.756638414273731*^9, 3.756638463896637*^9}, {3.7566385877854*^9, 
   3.7566386087502947`*^9}, {3.756638649854166*^9, 3.756638676968068*^9}, {
   3.756638744086648*^9, 3.756638797845302*^9}, {3.75663886109798*^9, 
   3.756639016286113*^9}, {3.75663908812144*^9, 3.756639099022295*^9}, {
   3.756639175467708*^9, 3.756639219116564*^9}, {3.756639291454718*^9, 
   3.7566393145417957`*^9}, {3.756639370129339*^9, 3.7566393962367077`*^9}, {
   3.756639776647352*^9, 3.756639798192528*^9}, {3.756639835316206*^9, 
   3.7566398824822893`*^9}, {3.756639918672497*^9, 3.756639939813425*^9}, {
   3.756639973553761*^9, 3.75664000225972*^9}, {3.756640062559654*^9, 
   3.756640175716195*^9}, {3.756640228083507*^9, 3.756640232965291*^9}, {
   3.7566403114135113`*^9, 3.756640311976265*^9}, {3.756640384644977*^9, 
   3.756640387969548*^9}, {3.756640428278305*^9, 3.7566404306876507`*^9}, 
   3.756640477230114*^9, {3.756640578743664*^9, 3.756640612644683*^9}, {
   3.7566406642952747`*^9, 3.756640748593506*^9}, {3.75664249532071*^9, 
   3.756642532920892*^9}, {3.75664312295611*^9, 3.756643228923435*^9}, {
   3.7566432747550983`*^9, 3.756643278349079*^9}, {3.756644626410408*^9, 
   3.756644637515213*^9}, {3.75664950509158*^9, 3.756649573462968*^9}, {
   3.756649608077771*^9, 3.756649941009951*^9}, {3.756649976267125*^9, 
   3.756649988211164*^9}, {3.756650150260676*^9, 3.756650153576848*^9}, {
   3.756650232619513*^9, 3.7566502342309933`*^9}, {3.756650264423964*^9, 
   3.7566502663026648`*^9}, {3.756650389596559*^9, 3.75665040353318*^9}, {
   3.7566518987628937`*^9, 3.7566519983127527`*^9}, {3.756652038339013*^9, 
   3.756652116594262*^9}, {3.7566521509725122`*^9, 3.756652151775086*^9}, {
   3.7566521936082067`*^9, 3.7566522254984827`*^9}, 3.7566522623392572`*^9, {
   3.7566523003926277`*^9, 3.756652334622999*^9}, {3.756652993279009*^9, 
   3.7566530006010513`*^9}, 3.756662951105842*^9, {3.7566630225168552`*^9, 
   3.7566630272839518`*^9}, {3.756663123333406*^9, 3.7566631248322763`*^9}, 
   3.7566631752172318`*^9, {3.7566634964859533`*^9, 3.7566636158836937`*^9}, {
   3.7566636478900023`*^9, 3.756663706453771*^9}, {3.756663928404806*^9, 
   3.756663936817573*^9}, {3.7566639779595423`*^9, 3.75666397866961*^9}, {
   3.756664615005191*^9, 3.756664639637916*^9}, 3.756664827179878*^9, {
   3.7566648682342787`*^9, 3.756664886393805*^9}, {3.7566649208542233`*^9, 
   3.7566649297529697`*^9}, 3.756664966661028*^9, {3.7566650074645967`*^9, 
   3.7566650183455877`*^9}, {3.756665710894405*^9, 3.7566657350209208`*^9}, {
   3.756665811308867*^9, 3.7566658370955467`*^9}, {3.756666031445753*^9, 
   3.7566660456105347`*^9}, {3.7566660894401007`*^9, 3.756666118084015*^9}, {
   3.756666822298153*^9, 3.7566668737687387`*^9}, {3.75668008342187*^9, 
   3.756680087391893*^9}, {3.7566808507233973`*^9, 3.756680859302164*^9}, {
   3.756681186479781*^9, 3.756681236124996*^9}, {3.756681292362279*^9, 
   3.756681307012558*^9}, {3.75668135394235*^9, 3.756681367125931*^9}, {
   3.756681876273799*^9, 3.7566818941514797`*^9}, {3.757158056914877*^9, 
   3.757158076006866*^9}, 3.7571592526832733`*^9, 3.757160020095564*^9, {
   3.757401115158844*^9, 3.7574011542433567`*^9}, 3.757420478884816*^9, {
   3.757420597756323*^9, 3.757420617624136*^9}, {3.757420674614646*^9, 
   3.757420695054151*^9}, 3.75797629485891*^9},
 ExpressionUUID -> "6672b86a-fe49-4582-9ca5-25b2607aca44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Toy", " ", "Model"}]], "Title",
 CellChangeTimes->{{3.720537273139526*^9, 3.7205372740422792`*^9}, {
   3.752464304010475*^9, 3.7524643060778093`*^9}, {3.7524644903370953`*^9, 
   3.752464490339396*^9}, 3.7524645209425087`*^9, 3.7529279351789494`*^9, 
   3.753708349408224*^9, 3.753717463993252*^9, 3.7562429984795628`*^9},
 ExpressionUUID -> "33c906a0-8504-4a10-8c71-22e4f4765129"],

Cell[CellGroupData[{

Cell[BoxData["Introduction"], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464253827971*^9, 3.752464267146635*^9}, {3.7524643219350853`*^9, 
   3.7524643281657333`*^9}, {3.752464520954516*^9, 3.75246452095525*^9}, {
   3.752925172625963*^9, 3.752925173330151*^9}, 3.752927935185779*^9, {
   3.752929360481892*^9, 3.752929364810026*^9}, {3.752929494784725*^9, 
   3.752929514509107*^9}, 3.753708349426414*^9, 3.753717464002063*^9, {
   3.756242339979738*^9, 3.756242373031191*^9}, {3.7562430424747477`*^9, 
   3.7562430472823753`*^9}},
 ExpressionUUID -> "fa126ca0-6c5e-479d-8304-467a5ea62b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"--", 
  RowBox[{"--", 
   RowBox[{"--", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Parameters", " ", "--"}], "--"}], "--"}]}]}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242832144678*^9, 
   3.756242834915044*^9}, {3.7562429333851433`*^9, 3.756242935308424*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cg", " ", 
   RowBox[{"(", "Millimolar", ")"}]}], "->", " ", 
  RowBox[{
   RowBox[{"glc", " ", "in", " ", 
    RowBox[{"feed", ".", "\n", "Vg"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
   "\[Rule]", " ", 
   RowBox[{
    RowBox[{"max", " ", "glc", " ", 
     RowBox[{"uptake", ".", "\n", "R"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
    "\[Rule]", " ", 
    RowBox[{
     RowBox[{
     "max", " ", "uptake", " ", "of", " ", "pyruvate", " ", "by", " ", 
      "mitochondria", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"max", ".", "respiration"}], ")"}], ".", "\n", "mE"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
     "\[Rule]", " ", 
     RowBox[{
      RowBox[{"maintenance", " ", "ATP", " ", 
       RowBox[{"demand", ".", "\n", "\[Delta]lac"}], 
       RowBox[{"(", 
        RowBox[{"Millimolar", "/", "Hours"}], ")"}]}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"lac", " ", "death", " ", 
        RowBox[{"rate", ".", "\n", "y"}], 
        RowBox[{"(", 
         RowBox[{"Millimoles", "/", "Grams"}], ")"}]}], "\[Rule]", " ", 
       RowBox[{
       "units", " ", "of", " ", "metabolite", " ", "needed", " ", "per", " ", 
        "unit", " ", "of", " ", "biomass", " ", 
        RowBox[{"produced", "."}]}]}]}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.74919530497782*^9, 3.749195407327724*^9}, {
   3.749195467647613*^9, 3.749195646248128*^9}, {3.749196282476817*^9, 
   3.749196282876801*^9}, 3.749196605596325*^9, 3.7491976142772284`*^9, {
   3.7492000639817533`*^9, 3.749200263139267*^9}, {3.7492006299928217`*^9, 
   3.749200687794754*^9}, {3.749200747930554*^9, 3.749200795098422*^9}, {
   3.7492013169198303`*^9, 3.749201346071619*^9}, {3.7492013864247103`*^9, 
   3.74920149915821*^9}, {3.749201555077005*^9, 3.749201606283115*^9}, {
   3.7509851650732193`*^9, 3.750985186350546*^9}, {3.752464451782661*^9, 
   3.7524644574825583`*^9}, {3.752464520949976*^9, 3.752464644645865*^9}, 
   3.7529279351832542`*^9, {3.7537083494214993`*^9, 3.7537083494230223`*^9}, 
   3.753717463999422*^9},
 ExpressionUUID -> "9527f172-6472-4cea-9aa5-576f6dcb5ecc"],

Cell[CellGroupData[{

Cell["Values", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242896782218*^9, 
   3.756242899800069*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cg", " ", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]lac", " ", "=", " ", 
   RowBox[{"0.0022", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mE", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"1", "/", 
     RowBox[{"UnitConvert", "[", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{"0.24393939393939396`", ",", 
         RowBox[{"\"\<Moles\>\"", "/", "\"\<Grams\>\""}]}], "]"}], ",", 
       RowBox[{"\"\<Millimoles\>\"", "/", "\"\<Grams\>\""}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nf", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nr", " ", "=", " ", "19"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "cg", ",", "Vg", ",", "R", ",", "y", ",", "\[Delta]lac", ",", "mE"}], 
    "}"}], "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"{", 
     RowBox[{
     "cg", ",", "Vg", ",", "R", ",", "y", ",", "\[Delta]lac", ",", "mE"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7491964104600983`*^9, 3.749196537593293*^9}, {
   3.7491965749371147`*^9, 3.749196645609914*^9}, {3.749196698055991*^9, 
   3.7491967082410994`*^9}, {3.749201636492626*^9, 3.749201695571808*^9}, {
   3.752460775210764*^9, 3.7524608050838747`*^9}, 3.752464317807102*^9, 
   3.752464520953059*^9, {3.7525005723424597`*^9, 3.752500572467318*^9}, {
   3.7525006460379467`*^9, 3.752500646434787*^9}, 3.7525007451808367`*^9, 
   3.7525014362635*^9, {3.7525891521990843`*^9, 3.752589159019998*^9}, {
   3.752589815041995*^9, 3.752589815406968*^9}, 3.752927935185192*^9, {
   3.75292802706329*^9, 3.752928028237091*^9}, 3.75370834942562*^9, 
   3.753717464001478*^9, 3.7566434694720488`*^9, 3.75664354663006*^9, {
   3.7566441876455603`*^9, 3.756644197111684*^9}, {3.75664424235629*^9, 
   3.756644242701189*^9}, {3.7566665273253403`*^9, 3.756666531888381*^9}, {
   3.756680168175559*^9, 3.756680168400786*^9}, {3.756680217416677*^9, 
   3.756680224417522*^9}, {3.756680780533588*^9, 3.7566807940237103`*^9}, {
   3.7571573356699333`*^9, 3.7571573567191467`*^9}},
 ExpressionUUID -> "bd974370-c24c-4d80-b533-817a24a9be8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"--", 
  RowBox[{"--", 
   RowBox[{"--", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Functions", " ", "--"}], "--"}], "--"}]}]}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242832144678*^9, 
   3.756242834915044*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Balance equations and Constrains", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242844552231*^9, 
   3.7562428579111137`*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{"Balance", " ", "equation", " ", "for", " ", 
  "P"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nf", "*", "vg"}], " ", "+", " ", "vl", " ", "-", " ", "vo"}], 
   " ", "=", " ", 
   RowBox[{"0", " ", "\[Rule]", 
    RowBox[{"(", "6", ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Balance", " ", "equation", "  ", "for", " ", 
  "ATP"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nf", "*", "vg"}], " ", "+", " ", 
    RowBox[{"Nr", "*", "vo"}]}], "  ", "=", " ", 
   RowBox[{"vapt", "  ", "\[Rule]", " ", 
    RowBox[{"(", "7", ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Constraint", " ", "of", " ", "vg"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vg", " ", "\[LessEqual]", " ", 
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", " ", 
       RowBox[{"cg", " ", "*", " ", 
        RowBox[{"D", "/", "X"}]}]}], "}"}]}]}], "  ", "\[Rule]", " ", 
   RowBox[{"(", "8", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Constraint", " ", "of", " ", "vl"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vl", " ", "\[LessEqual]", " ", "0"}], " ", "\[Rule]", " ", 
   RowBox[{"(", "9", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Contraint", " ", "of", " ", "vo"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "0", " ", "\[LessEqual]", " ", "vo", " ", "\[LessEqual]", " ", "R"}], " ", 
   "\[Rule]", " ", 
   RowBox[{"(", "9", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Taking", " ", "the", " ", "upper", " ", "bound", " ", "of", " ", 
  "vg", " ", "you", " ", "get", " ", "Mg", " ", 
  RowBox[{"(", 
   RowBox[{"The", " ", "maximum", " ", "glucose", " ", "uptake"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mg", " ", "=", " ", 
  RowBox[{"min", 
   RowBox[{"{", 
    RowBox[{"Vg", ",", " ", 
     RowBox[{"cg", " ", "*", "\[Xi]"}]}], "}"}], " "}]}]}], "Text",
 CellChangeTimes->{{3.74919530497782*^9, 3.749195407327724*^9}, {
   3.749195467647613*^9, 3.749195646248128*^9}, {3.749196282476817*^9, 
   3.749196282876801*^9}, 3.749196605596325*^9, 3.7491976142772284`*^9, {
   3.7492000639817533`*^9, 3.749200263139267*^9}, {3.7492006299928217`*^9, 
   3.749200687794754*^9}, {3.749200747930554*^9, 3.749200795098422*^9}, {
   3.7492013169198303`*^9, 3.749201346071619*^9}, {3.7492013864247103`*^9, 
   3.74920149915821*^9}, {3.749201555077005*^9, 3.749201606283115*^9}, {
   3.7509851650732193`*^9, 3.750985186350546*^9}, {3.752464451782661*^9, 
   3.7524644574825583`*^9}, {3.752464520949976*^9, 3.752464644645865*^9}, {
   3.752465810682805*^9, 3.752465949644471*^9}, {3.752466005699912*^9, 
   3.752466117106015*^9}, {3.752466169514428*^9, 3.752466214852681*^9}, {
   3.752466295663093*^9, 3.752466297494977*^9}, {3.75292633203976*^9, 
   3.7529264435206003`*^9}, {3.752926489424343*^9, 3.75292648987319*^9}, {
   3.752926523712352*^9, 3.7529265239520607`*^9}, {3.752926555503914*^9, 
   3.7529265618082314`*^9}, 3.752927935186902*^9, {3.753708349433187*^9, 
   3.753708349434434*^9}, 3.753717464003072*^9, {3.756644236026182*^9, 
   3.756644283146344*^9}, {3.756650061441642*^9, 3.7566500644979153`*^9}, {
   3.756650202078431*^9, 3.7566502027410183`*^9}},
 ExpressionUUID -> "051bc624-7d61-4272-9c84-bae25e2c88c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Growth function", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242867424712*^9, 
   3.756242879922934*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{"Rate", " ", "of", " ", "biomass", " ", 
  "synthesis"}], "\[IndentingNewLine]", 
 RowBox[{"We", " ", "consider", " ", "the", " ", "ATP", " ", "requirement", 
  " ", "of", " ", "growth", " ", "and", " ", "maintinance", " ", "and", " ", 
  "ingnore", " ", "additional", " ", "biomass", " ", 
  "components"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", " ", "-", " ", "mE"}], ")"}], " ", "*", " ", "y"}]}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Death", " ", "rate"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "We", " ", "assume", " ", "that", " ", "the", " ", "secreted", " ", 
   "lactate", " ", "is", " ", "toxic"}], ",", " ", 
  RowBox[{
  "so", " ", "the", " ", "death", " ", "will", " ", "depend", " ", "of", " ", 
   "its", " ", "concentration", " ", "in", " ", "the", " ", "culture", " ", 
   RowBox[{"(", "sl", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", " ", "=", " ", 
   RowBox[{"\[Delta]lac", " ", "*", " ", "sl"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Net", " ", "growth", " ", "rate"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"z", " ", "-", " ", "\[Delta]"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Maximum", " ", "net", " ", "growth", " ", 
  "rate"}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "growth", " ", "rate", " ", "is", " ", "maximum", " ", 
  "when", " ", "vatp", " ", "is", " ", "maximum", " ", 
  "too"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]max", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "vatpmax", "]"}], " ", "-", " ", "\[Delta]"}], " ", 
   "\[Rule]", " ", 
   RowBox[{"(", "0.5", ")"}]}]}], "\[IndentingNewLine]"}], "Text",
 CellChangeTimes->{{3.752465053095471*^9, 3.752465319756385*^9}, {
   3.752465380732068*^9, 3.7524654367311583`*^9}, {3.752465517469027*^9, 
   3.75246553856374*^9}, {3.7524655873524837`*^9, 3.752465693783753*^9}, {
   3.752926477657195*^9, 3.752926540816968*^9}, 3.752927935187914*^9, {
   3.7536320525451937`*^9, 3.753632076879727*^9}, {3.753708349441621*^9, 
   3.753708349442939*^9}, 3.753717464004011*^9, {3.756644292962027*^9, 
   3.756644300656057*^9}, {3.756644392709746*^9, 3.756644395702445*^9}},
 ExpressionUUID -> "b23cd6b9-7cac-4d36-86c0-e036a181d135"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Model", " ", "Solution"}]], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464253827971*^9, 3.752464267146635*^9}, {3.7524643219350853`*^9, 
   3.7524643281657333`*^9}, {3.752464520954516*^9, 3.75246452095525*^9}, {
   3.752925172625963*^9, 3.752925173330151*^9}, 3.752927935185779*^9, {
   3.752929360481892*^9, 3.752929364810026*^9}, {3.752929494784725*^9, 
   3.752929514509107*^9}, 3.753708349426414*^9, 3.753717464002063*^9, {
   3.756242339979738*^9, 3.756242373031191*^9}},
 ExpressionUUID -> "fa126ca0-6c5e-479d-8304-467a5ea62b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"--", 
   RowBox[{"--", 
    RowBox[{"--", " ", "Polytope"}]}]}], " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["\[ScriptCapitalP]", "s"], ")"}], "--"}], "--"}], 
   "--"}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242410193131*^9, 
   3.756242421706142*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Definition", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.753708349448257*^9, 3.753708349449565*^9}, 3.753717464008903*^9, 
   3.756241953853486*^9},
 ExpressionUUID -> "b1ca67f6-c4c2-49d2-a72f-b1ff54ded0c0"],

Cell[BoxData[
 RowBox[{"\"\<The constraints and balance equations defined above define a \
polytope of feasible metabilic states that we denote (\!\(\*SubscriptBox[\(\
\[ScriptCapitalP]\), \(s\)]\)). Each point within this space, in the Toy \
model, consists of coordinates v = (vg,vatp), wich fully specify the \
metabolic state of a cell in the model. \>\"", " "}]], "Text",
 CellChangeTimes->{3.753058314518096*^9, 3.7537083494529676`*^9, 
  3.753717464011091*^9},
 ExpressionUUID -> "f215c142-f21a-4492-ad7b-61576f6d9208"],

Cell[BoxData["\"\<The constraints and balance equations defined above define \
a polytope of feasible metabilic states that we denote \
(\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalP]\\), \\(s\\)]\\)). Each point \
within this space, in the Toy model, consists of coordinates v = (vg,vatp), \
wich fully specify the metabolic state of a cell in the model. \>\""], "Text",\

 CellChangeTimes->{3.752933523249996*^9, 3.752933663056302*^9, 
  3.752933739769668*^9, 3.7529338109621277`*^9, 3.753058320072535*^9, 
  3.753708349454076*^9, 3.753717464011653*^9},
 ExpressionUUID -> "f7bb4b42-6860-4111-be7b-091882bdd78a"],

Cell[BoxData["\"\<To solve the model we put all the unknow variables in \
depende of vg and vatp (chosen for convenience)\>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, {3.752925338913213*^9, 3.7529253393771*^9}, {
   3.752925459879816*^9, 3.752925737639296*^9}, {3.752925818349126*^9, 
   3.752925847084935*^9}, {3.752926166011025*^9, 3.7529261661544647`*^9}, {
   3.752926216418215*^9, 3.752926263609626*^9}, {3.752926313569674*^9, 
   3.752926324842073*^9}, {3.752926589366989*^9, 3.7529267382226677`*^9}, {
   3.752927686879444*^9, 3.752927829069762*^9}, 3.752927935191126*^9, {
   3.752930493529579*^9, 3.752930504349216*^9}, 3.752930757538364*^9, 
   3.753708349454649*^9, 
   3.753717464012*^9},ExpressionUUID->"f3b79a30-3161-4122-981e-693de82e2e4a"],

Cell[BoxData["\"\<Clearing vo from Eq.6 and 7\>\""], "Text",
 CellChangeTimes->{{3.7530583415112553`*^9, 3.753058361652829*^9}, {
   3.7530584204725437`*^9, 3.753058430510653*^9}, 3.753058470119246*^9, 
   3.7537083494562473`*^9, 
   3.7537174640127983`*^9},ExpressionUUID->"1dd4d10d-a7a0-4510-a2b5-\
638b19533c8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vl", "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", "-", 
      RowBox[{"Nf", "*", "vg", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "Nr"}], ")"}]}]}], ")"}], "/", "Nr"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7530583415112553`*^9, {3.7530583774940557`*^9, 3.753058393269991*^9}, 
   3.753708349456704*^9, 3.753717464013319*^9, {3.756651750842675*^9, 
   3.756651761266405*^9}, {3.756651806354629*^9, 3.756651847178319*^9}},
 ExpressionUUID -> "b1eacfc6-efea-4aab-b059-abcf03c3b187"],

Cell[BoxData["\"\<Clearing vo from Eq.6\>\""], "Text",
 CellChangeTimes->{{3.7530583415112553`*^9, 3.753058361652829*^9}, {
   3.753058404816309*^9, 3.7530584279159737`*^9}, 3.7530584659719353`*^9, 
   3.7537083494571867`*^9, 
   3.753717464013646*^9},ExpressionUUID->"155cf895-4351-45df-bd2c-\
495292be0acc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vo", "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", "-", 
      RowBox[{"Nf", "*", "vg"}]}], ")"}], "/", "Nr"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7530583415112553`*^9, 3.7530583774940557`*^9, 3.753708349457632*^9, 
   3.753717464014125*^9, {3.75665176639321*^9, 3.756651777597395*^9}},
 ExpressionUUID -> "8e6d06c2-3719-42e5-9db3-20ca8fd8e2b8"],

Cell[BoxData[
 RowBox[{"\"\<All points in the polytope most solve the constraints 0 \
\[LessEqual] vg \[LessEqual] Mg  &&  vl \[LessEqual] 0  && 0 \[LessEqual] vo \
\[LessEqual] R\>\"", " "}]], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, {3.752925338913213*^9, 3.7529253393771*^9}, {
   3.752925459879816*^9, 3.752925737639296*^9}, {3.752925818349126*^9, 
   3.752925847084935*^9}, {3.752926166011025*^9, 3.7529261661544647`*^9}, {
   3.752926216418215*^9, 3.752926263609626*^9}, {3.752926313569674*^9, 
   3.752926324842073*^9}, {3.752926589366989*^9, 3.7529267382226677`*^9}, {
   3.752927686879444*^9, 3.752927829069762*^9}, 3.752927935191126*^9, {
   3.752930493529579*^9, 3.752930536169989*^9}, {3.753058446836197*^9, 
   3.753058460358975*^9}, 3.7537083494582567`*^9, 
   3.753717464014477*^9},ExpressionUUID->"8ac17d9b-26fb-42dd-adc3-\
90fa00ac2d58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"polytope", "[", "\[Xi]_", "]"}], "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"0", "\[LessEqual]", "vg", "\[LessEqual]", 
     RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "\[And]", 
    RowBox[{
     RowBox[{"vl", "[", 
      RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "0"}], "\[And]", 
    RowBox[{"0", "\[LessEqual]", 
     RowBox[{"vo", "[", 
      RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "R"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.749202140574168*^9, 3.749202199360901*^9}, {
   3.7492072696114264`*^9, 3.749207273259781*^9}, 3.7492120907596188`*^9, {
   3.749212137159401*^9, 3.749212147567031*^9}, {3.749212408381659*^9, 
   3.749212527253311*^9}, {3.749212752251713*^9, 3.749212796315857*^9}, {
   3.749212874858179*^9, 3.749212900282939*^9}, 3.749212941010502*^9, {
   3.74921333222438*^9, 3.749213420432701*^9}, {3.74921410105215*^9, 
   3.7492141018919573`*^9}, {3.749215097129808*^9, 3.749215229373934*^9}, {
   3.7492152746094913`*^9, 3.749215460892693*^9}, {3.749215893342661*^9, 
   3.749215900450272*^9}, {3.750985367075029*^9, 3.750985426051023*^9}, {
   3.750985485204116*^9, 3.7509855375614147`*^9}, {3.750985597490034*^9, 
   3.75098562403225*^9}, {3.750985673977062*^9, 3.7509856858565187`*^9}, {
   3.750985754967391*^9, 3.750985833766829*^9}, {3.75098589326208*^9, 
   3.750985913715073*^9}, {3.7510143709364223`*^9, 3.7510143874197474`*^9}, {
   3.751014467099848*^9, 3.751014534635768*^9}, {3.75101528883079*^9, 
   3.751015332407366*^9}, {3.751015401958969*^9, 3.7510154076861477`*^9}, {
   3.751222954518268*^9, 3.7512229958403673`*^9}, {3.7512232403402157`*^9, 
   3.75122334641395*^9}, 3.751223386118971*^9, {3.751223437803546*^9, 
   3.751223440698057*^9}, {3.751223492779727*^9, 3.751223492974498*^9}, {
   3.751223548044216*^9, 3.751223570889072*^9}, {3.751224152224432*^9, 
   3.7512241835642147`*^9}, 3.751825593849558*^9, {3.751825656734974*^9, 
   3.751825870283942*^9}, {3.751825929196954*^9, 3.751825950635355*^9}, {
   3.751825988953738*^9, 3.7518260738993607`*^9}, {3.751826139773387*^9, 
   3.751826145943561*^9}, {3.751826242776675*^9, 3.751826246561747*^9}, {
   3.7518262913874893`*^9, 3.7518263131682243`*^9}, {3.7518263467102003`*^9, 
   3.7518263555790577`*^9}, {3.751827640587096*^9, 3.751827727639947*^9}, {
   3.751827762555789*^9, 3.751827763880947*^9}, {3.751827916657777*^9, 
   3.7518279169868193`*^9}, {3.751828037348584*^9, 3.751828148228833*^9}, {
   3.7518282384429827`*^9, 3.75182827851226*^9}, {3.751828451815099*^9, 
   3.751828452059354*^9}, {3.7518294823623466`*^9, 3.751829506404498*^9}, {
   3.751830354536604*^9, 3.751830405377186*^9}, {3.7518304461303167`*^9, 
   3.751830447031962*^9}, 3.7518305566959047`*^9, {3.751906601564062*^9, 
   3.75190664637346*^9}, {3.751911104784292*^9, 3.75191114578225*^9}, {
   3.751911185981398*^9, 3.751911243979504*^9}, {3.751998812785035*^9, 
   3.751998813135584*^9}, {3.751998872671236*^9, 3.751998873158175*^9}, {
   3.751999010804852*^9, 3.751999020219652*^9}, {3.751999071482976*^9, 
   3.751999073476569*^9}, {3.7524324154690037`*^9, 3.75243242596104*^9}, {
   3.7524324584014177`*^9, 3.752432495027521*^9}, {3.7524326025941963`*^9, 
   3.7524326987935266`*^9}, {3.752432752441649*^9, 3.752432796746372*^9}, {
   3.752432846526588*^9, 3.752432898182074*^9}, 3.752433066561088*^9, {
   3.752433106574066*^9, 3.7524331742359753`*^9}, {3.7524332121421633`*^9, 
   3.752433218362021*^9}, {3.752460035464567*^9, 3.752460050337606*^9}, {
   3.752460116522315*^9, 3.7524601169995823`*^9}, 3.752460156405404*^9, {
   3.752460272384076*^9, 3.752460394559545*^9}, {3.752464192579155*^9, 
   3.752464198855771*^9}, 3.7524645209650106`*^9, {3.7524649136087093`*^9, 
   3.7524649173601027`*^9}, {3.7524649573804617`*^9, 3.752464957648262*^9}, {
   3.752466539037788*^9, 3.752466567131217*^9}, {3.7524691312848988`*^9, 
   3.7524691335700274`*^9}, {3.752471166527216*^9, 3.7524711674525642`*^9}, {
   3.752501401667347*^9, 3.752501418398407*^9}, 3.752587430667922*^9, {
   3.752861055909884*^9, 3.752861060761668*^9}, 3.752862708605536*^9, {
   3.752862803374445*^9, 3.752862822653764*^9}, {3.752862856475273*^9, 
   3.752862867956513*^9}, {3.75287481496216*^9, 3.7528748435125933`*^9}, {
   3.752876479065824*^9, 3.752876509071992*^9}, {3.752876813149148*^9, 
   3.752876830787569*^9}, {3.7528779835465593`*^9, 3.752878132237485*^9}, {
   3.752878168632679*^9, 3.752878261657584*^9}, {3.7528782937245398`*^9, 
   3.752878468365843*^9}, {3.752878524439631*^9, 3.75287853299188*^9}, {
   3.752878620598132*^9, 3.752878813616458*^9}, {3.752881254729713*^9, 
   3.7528812862361526`*^9}, {3.7528820041931067`*^9, 3.752882047199188*^9}, {
   3.752882788773197*^9, 3.752882838873505*^9}, {3.752882919181575*^9, 
   3.752883106786106*^9}, {3.752883187051491*^9, 3.752883421953068*^9}, {
   3.752883470808524*^9, 3.752883550238308*^9}, {3.7529225863053093`*^9, 
   3.752922756903014*^9}, {3.752922799976521*^9, 3.752922984011631*^9}, {
   3.7529230175447903`*^9, 3.752923020729622*^9}, 3.752923051146555*^9, {
   3.752923103213099*^9, 3.752923139115272*^9}, {3.7529232257704268`*^9, 
   3.752923229155459*^9}, {3.752923262517638*^9, 3.752923337289015*^9}, {
   3.752926680999213*^9, 3.752926689031809*^9}, {3.75292785109726*^9, 
   3.752927880623377*^9}, 3.752927935198411*^9, {3.752927993899378*^9, 
   3.752928000774272*^9}, {3.752928062468251*^9, 3.752928111071563*^9}, {
   3.7529282931520147`*^9, 3.752928326003873*^9}, {3.7529284634688187`*^9, 
   3.752928477735977*^9}, 3.752928766046103*^9, {3.7529289267548437`*^9, 
   3.7529290103571053`*^9}, 3.7529291147722597`*^9, {3.752930400926515*^9, 
   3.752930412690782*^9}, {3.7529304429575453`*^9, 3.752930480514982*^9}, {
   3.752930521675785*^9, 3.752930542056172*^9}, 3.753708349458797*^9, 
   3.753717464015049*^9, {3.755969334396475*^9, 3.755969348933741*^9}, {
   3.755969627316334*^9, 3.755969629854424*^9}, {3.7562425197578506`*^9, 
   3.75624252017439*^9}, {3.7563833462849197`*^9, 3.7563833504238253`*^9}, 
   3.757401170668236*^9},
 ExpressionUUID -> "bfe932a7-8a67-4864-b744-7eaa94e80d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polytope limits", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData["\"\< To calculate any integral through the polytope it is \
useful to defind its limits... \>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, {3.752929602153782*^9, 3.7529296486240387`*^9}, {
   3.752929793614394*^9, 3.752929850845911*^9}, 3.753708349475071*^9, 
   3.75371746402321*^9},ExpressionUUID->"ddf0a8b5-bf4f-4b90-b82e-\
75b9d5635ef5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "vo", ",", "vl", ",", "vatpMaxGlobal", ",", "vatpMaxLocal", ",", 
     "vatpMinGlobal", ",", "vatpMinLocal", ",", "vgMaxGlobal", ",", 
     "vgMaxLocal", ",", "vgMinGlobal", ",", "vgMinLocal"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vo", "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vatp", "-", 
        RowBox[{"Nf", "*", "vg"}]}], ")"}], "/", "Nr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vl", "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vatp", "-", 
        RowBox[{"Nf", "*", "vg", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "Nr"}], ")"}]}]}], ")"}], "/", "Nr"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vgMinGlobal", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vgMaxGlobal", "[", "\[Xi]_", "]"}], " ", ":=", "   ", 
     RowBox[{"Min", "[", 
      RowBox[{"Vg", ",", 
       RowBox[{"cg", "/", "\[Xi]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"vgMinLocal", "[", "vatp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"vatp", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", "Nr"}], ")"}]}], ",", 
        RowBox[{"vatp", "-", 
         RowBox[{"Nr", "*", "R"}]}]}], "]"}], "/", "Nf"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vgMaxLocal", "[", "\[Xi]_", "]"}], "[", "vatp_", "]"}], ":=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}], ",", 
       RowBox[{"vatp", "/", "Nf"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vatpMinGlobal", " ", "=", " ", 
     RowBox[{"vatpMinLocal", "[", "vgMinGlobal", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]_", "]"}], ":=", 
     RowBox[{"vatpMaxLocal", "[", 
      RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMinLocal", " ", "[", "vg_", "]"}], " ", ":=", " ", 
     RowBox[{"Nf", "*", "vg"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMaxLocal", "[", "vg_", "]"}], " ", ":=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"Nf", 
        RowBox[{"(", 
         RowBox[{"1", "+", "Nr"}], ")"}], "vg"}], ",", 
       RowBox[{
        RowBox[{"Nf", "*", "vg"}], "+", 
        RowBox[{"Nr", "*", "R"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"polytope", "[", "\[Xi]_", "]"}], "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"vgMinLocal", "[", "vatp", "]"}], "\[LessEqual]", "vg", 
       "\[LessEqual]", 
       RowBox[{
        RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]}], 
      "\[And]", 
      RowBox[{
       RowBox[{"vatpMinLocal", "[", "vg", "]"}], " ", "\[LessEqual]", " ", 
       "vatp", " ", "\[LessEqual]", " ", 
       RowBox[{"vatpMaxLocal", "[", "vg", "]"}]}]}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.749202140574168*^9, 3.749202199360901*^9}, {
   3.7492072696114264`*^9, 3.749207273259781*^9}, 3.7492120907596188`*^9, {
   3.749212137159401*^9, 3.749212147567031*^9}, {3.749212408381659*^9, 
   3.749212527253311*^9}, {3.749212752251713*^9, 3.749212796315857*^9}, {
   3.749212874858179*^9, 3.749212900282939*^9}, 3.749212941010502*^9, {
   3.74921333222438*^9, 3.749213420432701*^9}, {3.74921410105215*^9, 
   3.7492141018919573`*^9}, {3.749215097129808*^9, 3.749215229373934*^9}, {
   3.7492152746094913`*^9, 3.749215460892693*^9}, {3.749215893342661*^9, 
   3.749215900450272*^9}, {3.750985367075029*^9, 3.750985426051023*^9}, {
   3.750985485204116*^9, 3.7509855375614147`*^9}, {3.750985597490034*^9, 
   3.75098562403225*^9}, {3.750985673977062*^9, 3.7509856858565187`*^9}, {
   3.750985754967391*^9, 3.750985833766829*^9}, {3.75098589326208*^9, 
   3.750985913715073*^9}, {3.7510143709364223`*^9, 3.7510143874197474`*^9}, {
   3.751014467099848*^9, 3.751014534635768*^9}, {3.75101528883079*^9, 
   3.751015332407366*^9}, {3.751015401958969*^9, 3.7510154076861477`*^9}, {
   3.751222954518268*^9, 3.7512229958403673`*^9}, {3.7512232403402157`*^9, 
   3.75122334641395*^9}, 3.751223386118971*^9, {3.751223437803546*^9, 
   3.751223440698057*^9}, {3.751223492779727*^9, 3.751223492974498*^9}, {
   3.751223548044216*^9, 3.751223570889072*^9}, {3.751224152224432*^9, 
   3.7512241835642147`*^9}, 3.751825593849558*^9, {3.751825656734974*^9, 
   3.751825870283942*^9}, {3.751825929196954*^9, 3.751825950635355*^9}, {
   3.751825988953738*^9, 3.7518260738993607`*^9}, {3.751826139773387*^9, 
   3.751826145943561*^9}, {3.751826242776675*^9, 3.751826246561747*^9}, {
   3.7518262913874893`*^9, 3.7518263131682243`*^9}, {3.7518263467102003`*^9, 
   3.7518263555790577`*^9}, {3.751827640587096*^9, 3.751827727639947*^9}, {
   3.751827762555789*^9, 3.751827763880947*^9}, {3.751827916657777*^9, 
   3.7518279169868193`*^9}, {3.751828037348584*^9, 3.751828148228833*^9}, {
   3.7518282384429827`*^9, 3.75182827851226*^9}, {3.751828451815099*^9, 
   3.751828452059354*^9}, {3.7518294823623466`*^9, 3.751829506404498*^9}, {
   3.751830354536604*^9, 3.751830405377186*^9}, {3.7518304461303167`*^9, 
   3.751830447031962*^9}, 3.7518305566959047`*^9, {3.751906601564062*^9, 
   3.75190664637346*^9}, {3.751911104784292*^9, 3.75191114578225*^9}, {
   3.751911185981398*^9, 3.751911243979504*^9}, {3.751998812785035*^9, 
   3.751998813135584*^9}, {3.751998872671236*^9, 3.751998873158175*^9}, {
   3.751999010804852*^9, 3.751999020219652*^9}, {3.751999071482976*^9, 
   3.751999073476569*^9}, {3.7524324154690037`*^9, 3.75243242596104*^9}, {
   3.7524324584014177`*^9, 3.752432495027521*^9}, {3.7524326025941963`*^9, 
   3.7524326987935266`*^9}, {3.752432752441649*^9, 3.752432796746372*^9}, {
   3.752432846526588*^9, 3.752432898182074*^9}, 3.752433066561088*^9, {
   3.752433106574066*^9, 3.7524331742359753`*^9}, {3.7524332121421633`*^9, 
   3.752433218362021*^9}, {3.752460035464567*^9, 3.752460050337606*^9}, {
   3.752460116522315*^9, 3.7524601169995823`*^9}, 3.752460156405404*^9, {
   3.752460272384076*^9, 3.752460394559545*^9}, {3.752464192579155*^9, 
   3.752464198855771*^9}, 3.7524645209650106`*^9, {3.7524649136087093`*^9, 
   3.7524649173601027`*^9}, {3.7524649573804617`*^9, 3.752464957648262*^9}, {
   3.752466539037788*^9, 3.752466567131217*^9}, {3.7524691312848988`*^9, 
   3.7524691335700274`*^9}, {3.752471166527216*^9, 3.7524711674525642`*^9}, {
   3.752501401667347*^9, 3.752501418398407*^9}, 3.752587430667922*^9, {
   3.752861055909884*^9, 3.752861060761668*^9}, 3.752862708605536*^9, {
   3.752862803374445*^9, 3.752862822653764*^9}, {3.752862856475273*^9, 
   3.752862867956513*^9}, {3.75287481496216*^9, 3.7528748435125933`*^9}, {
   3.752876479065824*^9, 3.752876509071992*^9}, {3.752876813149148*^9, 
   3.752876830787569*^9}, {3.7528779835465593`*^9, 3.752878132237485*^9}, {
   3.752878168632679*^9, 3.752878261657584*^9}, {3.7528782937245398`*^9, 
   3.752878468365843*^9}, {3.752878524439631*^9, 3.75287853299188*^9}, {
   3.752878620598132*^9, 3.752878813616458*^9}, {3.752881254729713*^9, 
   3.7528812862361526`*^9}, {3.7528820041931067`*^9, 3.752882047199188*^9}, {
   3.752882788773197*^9, 3.752882838873505*^9}, {3.752882919181575*^9, 
   3.752883106786106*^9}, {3.752883187051491*^9, 3.752883421953068*^9}, {
   3.752883470808524*^9, 3.752883550238308*^9}, {3.7529225863053093`*^9, 
   3.752922756903014*^9}, {3.752922799976521*^9, 3.752922984011631*^9}, {
   3.7529230175447903`*^9, 3.752923020729622*^9}, 3.752923051146555*^9, {
   3.752923103213099*^9, 3.752923139115272*^9}, {3.7529232257704268`*^9, 
   3.752923229155459*^9}, {3.752923262517638*^9, 3.752923337289015*^9}, {
   3.752926680999213*^9, 3.752926689031809*^9}, {3.75292785109726*^9, 
   3.752927880623377*^9}, 3.752927935198411*^9, {3.752927993899378*^9, 
   3.752928000774272*^9}, {3.752928062468251*^9, 3.752928111071563*^9}, {
   3.7529282931520147`*^9, 3.752928326003873*^9}, {3.7529284634688187`*^9, 
   3.752928477735977*^9}, 3.752928766046103*^9, {3.7529289267548437`*^9, 
   3.752928987383675*^9}, {3.7529298654828176`*^9, 3.752929926642386*^9}, {
   3.752930161509399*^9, 3.752930182478071*^9}, {3.752930719246436*^9, 
   3.752930725327242*^9}, {3.753704543624488*^9, 3.753704562964754*^9}, {
   3.75370486813017*^9, 3.753704953329324*^9}, {3.753704994153006*^9, 
   3.753705119479807*^9}, {3.7537051665910892`*^9, 3.753705179870452*^9}, {
   3.753705248230303*^9, 3.753705343502005*^9}, {3.753705384778369*^9, 
   3.753705421453126*^9}, {3.753707168713571*^9, 3.753707169254553*^9}, 
   3.753708349476754*^9, 3.7537168551154413`*^9, 3.753717464024143*^9, {
   3.75371847946766*^9, 3.7537184803655357`*^9}, {3.753718516605296*^9, 
   3.7537185265732183`*^9}, {3.7566506034530363`*^9, 3.756650654928528*^9}, {
   3.756651557085034*^9, 3.7566515683656187`*^9}, {3.756651613485903*^9, 
   3.75665163758293*^9}, {3.756654713468211*^9, 3.756654717527791*^9}, {
   3.7566660016292048`*^9, 3.756666004400297*^9}, {3.757401053503894*^9, 
   3.757401082981196*^9}, {3.7574191373705378`*^9, 3.757419150694708*^9}, {
   3.757419318194989*^9, 3.757419363022629*^9}, {3.757419657321843*^9, 
   3.7574196577127028`*^9}, {3.757419907268776*^9, 3.757419908418324*^9}, {
   3.757420149840357*^9, 3.757420184283955*^9}, {3.757420258687552*^9, 
   3.7574202837652817`*^9}, {3.757420837629322*^9, 3.757420847627475*^9}, {
   3.757421662084166*^9, 3.757421663661031*^9}, {3.757421702241831*^9, 
   3.7574217023866787`*^9}, {3.757975924866295*^9, 3.757975941858878*^9}, {
   3.757975997901198*^9, 3.757976028815647*^9}},
 ExpressionUUID -> "2b5930b4-5404-40c4-9f61-9d2c75aad358"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPolytope", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.757159934790625*^9, 3.7571599450670853`*^9}, {
   3.757419165381269*^9, 3.757419194453476*^9}, 3.7574193242833633`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Polytope with \[Xi] = \"\>",
    StripOnInput->False,
    FontSize->25], "\[InvisibleSpace]", 
   StyleBox["2",
    StripOnInput->False,
    FontSize->25]}],
  SequenceForm[
   Style["Polytope with \[Xi] = ", 25], 
   Style[2, 25]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7571599413911657`*^9, 3.7571599570294333`*^9}, 
   3.757160035559016*^9, 3.7574013070785923`*^9, {3.7574191564193907`*^9, 
   3.7574191951282043`*^9}, 3.7574193251601*^9, 3.7574193686292887`*^9, 
   3.75741966246929*^9, 3.757420000578532*^9, 3.7574202873867407`*^9, 
   3.757420852095036*^9, 3.757975947151702*^9, 3.757976001550005*^9, 
   3.7579760318975573`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
   GraphicsComplexBox[CompressedData["
1:eJxlmntYzOn7x5MkMaFymk6TwixZp2pF2/2pSDZSaUmYyIaMJa1TCEslLGJb
kuPkWGhSOZQkHTUqlWo6FxqUnCYKi36z1/V9P11XP/+4Xtf9+Tw97/dzup/7
M6a+az381NXU1Ox6qqn99/9l8yNpI5ecttO6ckVHYr/Izv5gb/PWjlrKfmju
Hq6MpkVemhNedbQyRtw1a8jaPco4FgcXrNcQvkv5yHjV3dBbLR1fGeP9xRFF
3gqrZPY+GO+D8T5YY/fuc0q+OgeeO2raq7cpvRijfT0a+D1MmcraB6N9MNoH
o30w2gfHPNSY9NqrD+P3a3O2tHT0YyzQdnzyh8sAxuiPoj3WLVKewfoDRn/A
6A8Y/QGjP2D0B4z+gNEfsPMis1AlX5dxQHzPH9a16DFGfzlXl+EKq2zWXzD6
C0Z/wegvGP0Fo79g9BeM/oLRXzD6C45Sayp4mzKIcYZHdsCavUMYQ8+JC61t
VpF5TA8YesDQA4YeMPSAoQcMPWDoAUMPGHrA0AOGHvDL8+f1X3sNYzygI+S2
WGjAePJMv0UtHYaMob/964GcMKWM6QdDPxj6wdAPhn4w9IOhHwz9YOgHQz8Y
+sHQD4Z+MPSDoR+85MR0Nf88Y667fnfPccfkbkVMPxj6wdAPhn4w9IOhHwz9
YOgHQz8Y+sHQD4Z+MPSDoR8M/WDor/h1pWWkvJjpB0M/GPrB0A+GfjD0g6Ef
DP1g6AdDPxj6wdAPhn4w9IOhHwz9IT1sTqWFlTL9YOgHQz8Y+sHQD4Z+MPSD
oR8M/WDoB0M/GPrB0A+GfjD0g7PbdUv/cBEwhh8Tr/XRVFiVMT/A8AMMP8Dw
Aww/wPADDD/A8AMMP8DwAww/wPADDD/A8AMMP8DwAww/Gr2q1/AU5cwPMPwA
ww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADDj4MaV+RWkXLm
Bxh+gOEHGH6A4QcYfoDhBxh+gOEHGH6A4QcYfoDhBxh+gOEHGH6A4YdtwlZO
5FjF/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPxo
WTgrNkxZzfwAww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADD
DzD8iOptpCuV1DI/wPADDD/A8AMMP8DwAww/wPADDD/A8AMMP8DwAww/wPAD
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
qPK2uaI8kyKSov9cLxzy/+pXe1aPiZNHZJEk7MslP1FXvWrERM7RPsiI3Zdx
/g1f4VcpfplHsXWh9YaRJv+vnnU1dfMRpXfXfdpilVxX8bGALHzeP3sc01Xf
OqkZIjTd85TVp2wv60UaunbVp74eqW/Ssm5i5zvL1xbOMZaq8or4bet2hx3u
yq/Xj/ipc/3VrvzadcfD/j5Br1n9sqKgj9sU/yrSrvaeaeMZQuEXC7RLhJdV
4+7W4mMWRQvN12022HGaRlq/+cFz+0FKDvdpfO37hqrffNQYPSeKBKP3DC+0
/0Bh+tftdKzOUqqZZn6LThtNGVHm57H9NBX4J80btew72SQWed11vUxcWZ/v
YVmddHNNsN40/1jKXxGanZ7Sg3N/pPGP9aKr5JsZdnygrSbn76e1RZp/nTan
K3sv9ujD2QTlkoFDMkU5R5+K3jCAOzvv3Srpr6mkPXz86ISUgZyFX98+qxel
0Qab6S/mbR7I7b5/wlvWdofet7nda7bX54Za8hPklhl0bETYh+AL+pzsVqBC
HJJBywqfu3SGDuJEd0Z1Wk2+T6kD83pcKB3CFR08dkqpk0X3b+7xE3sM43Tj
0vTVHLKJ72u3J9XYiKtNFPVXm5VHR6KS9vzra8z1+LsyjDfnAXU2Oxu2WRhz
tbZPeGrmD+i9S3lG6Kga2nTmx5ww4UPijPit7cdqaaLD5cywowUk8Nt+J3Rs
PX19seaY3KKIdLj5vfLsBZzaX86Wkc3FVBFu0atjgYCblrDyVJq4lGb5lm79
QzUfntdfOZ2WXEIp0SVxn+JaSVibHyWJqyXhT2UvB4x9QxsOBHxosqgnJ++f
lhnve03J81c4Oe6ro7+WC321DUw5iw/ePWTB9RTzZeOFNjNTzv1ggojXr4G+
u2rqWzhmU+rgtQkHJgZQqUbjlEZhFM0rWhW/1CycjCdWtz8p66qXn+ZSLW7K
BZzZVnGOm3M1ed/c8jmxXsCNqa3xEt6upqbqM4HFb7vq6WH8whW27QLuta/M
2XF8LQ1v9A4uU/GWA7uSxVNqKW6335t0bVNWb38lHB+s0d+US7seYxSZVkcf
s+XLh09JZvtThvXWDaNH3CaT5sWlMrPLdPbnvSuant6k2oeBI35ouEj4/eZ4
XeGjPmMe2nlMswxI6Luf1Q/XeE36d2n/LGot5lcodZIoubT53rsEGQ0KOPos
LT6VXu6fFLD2gYD7uoyf5+ZZRSV+Tlc+PhdwuS5Bvzja1lC2rXP9S3VTrsEh
+ULYv6o8X/Dbqt97mXJ7LrrX8M3rWL6Hv6ebu9i53454tj60zUN7LBySSKMD
W3R9DGLoUfgPrd7j0sku8tXCGIt4Mrc2WaMjyCHPQxEnRSY3WH1AVG7ySCRa
QVHpSx6/8a2n7M7++WPmhLP9pX7tbmtP0R4aZPhPUlSugPNqer9bblVFNkVf
tyzL66pn79S8a7ngaVc9m91vq/5wdlxay/aXmzudMx6KD7N66Pna9ASDX86z
+qfXrr3T1c7eJo1Ncb3fzCli9U4tnyt+E4KLaP32pLEG29Pp01fxmznHVfN6
xyKZJKqr/lk2uW+mclU6TfPcty03tJTVNy+2jh+0pP9jwnqsslq3aqfqnF7z
NPZP4aks0vidPv7zrJzVNw9sNx+Vf7aC9EuDx8gkuay+Ga3nYazYkEurnGzF
GtOrWD0z/Vihaf7FKormp3/jX8ynxHnhJ2mogN0XYlL2Cg4bCbjTvzQWiWcV
0qbO2UN/nCRg35/E6j6C+1YC7sjMCDeRsJiCfr975t2d56zeeblvhEJW/5xy
m2caSlV5pn5PF/V23xe0dMELnsxXTmOr71RfWv2S1Ttt4u4e/THvJUWUXD4j
ya2kgEvnl0Q3vSRL95KnfEWlav0OPnbIoIXVO3tbfl4cvaKFNm547+K4oppe
KwPmbpK9YvXOjcX/nkhsfkVZI6MuhTXX0He9CvOEygx2n9o5nRs8R3WOda9f
tG5e8Kd7vZSm2hu4l31T5xrqTCa1+caz74NONb4lytQb9GdAXbyBfx/Oe7hg
tppnMrUcC48MPKrN/alWdjBo+g26HK2V7HO0H4f8c4zTVceAUSW07/XWv3mj
7pPr7t4Xf/pURoK7NtHK9uyu74mLbVLT+JlklDpBV1s4mFPfET9SkXKfpvYc
rvGzeSWVSr0NFGYPyKgxfe+4vEo6FdhyR5L7gH1vHJhh95uoZw7JVgb2G+0/
jJvxu1lvA89s2nKudMzGD8O4m7872kqzsqn2W+/+BZ18rsIv7deg4zmktu3w
1P3/fd/IWdtbTXU/BFc2bGu1UnHH1Lnx7mqN7Huk/7MvdkO219PS/JsvrLYX
0dxhYd4O8Q1UtbpB5Ch9RGqP7hvURDWSywjRKGlUMWndfbli06RGqtxqoeRP
KianwZv+vPCDgFt+w/G6pKiIll9KTvt3nICbpXXJQHb8Ec1/cG2VjfQJ+745
Y8AVt7WjntC2WVM28VQ+Oh4/NtrU+wklVB8aKltQQt5/GGzZobpvGxs5f+1U
5d1g3Yj7fRQqvuWpNcpU9IzVCxKsolfa1D6lb/ut1/NqS+nVwJljnqk3Uf0m
wQG5ehmpu1f17+vfVQ9WH7JgcupiAafT/vVk2uVS2pxr3vLVT8AlKgV/Ki0e
E99M12VgoIAbctkjkPfmMVnaKm5+Xi3gEnK1h0tPPqahT3yfafG6vr/2q27L
rVvcRMW7BTNFojIq+Gnv7sEhXfXllnfiP7htAq6qbqFAGlFG9v2/NFtsV91H
B9u38KVlxO9Q37huv4ALMH2WGBZSTp4Z5kY+LQo6U/rJSNpSTkcaXTs1znTV
m8NiG8bNOCrg8nXG3BNPqCD1kkHXO2JV+2EfB+ug1XJSiDyKMktfkH/qfImk
VE5ee/W3tqV01ZdnPb6XtDJewA3OKOFLk+SU6282x/NiM+ll3PMWqvaRWbwf
M+xSm2n0oPETg1KrSKATfO3TqFf0/FbsuCBhDdVdWbguJuYVffh68IY4poak
fUcWOAnfsu/H0Rdixuzb/oZq19ye5qiaV+IecR3z3qjyLYcYRefregqpGTvj
Rvxbcgr1zreSNpD802/6uwLfUjDl5lsFNtAX8+/Thqh11a/HZw3KMh5lyh2K
/UvZZNfQ9b1g7DfPnmoH6PnImhbNb3HsPlA52qfIzKOZBk/5sCjcIZLdr208
a1/5OB4ju00L+8SkvCdlXwv7c4tO0uZ2e6/7H1NZvYd97xu/NE3x8Sp92JHU
9n3lZ9rx17Aq2dzzJHPQXuNa/S9ZcOrDps28SDNaJTdbNn9j9aCIvNAXZ0Y+
pNNrJr+TCO+w+4zzVW8Xxcc0crpyzPnC+a56d8at0/Eml/pz3o+eGrh7pLD6
94GLvYTW+qnkYaVYdmHIQK6p7lsKb8EdCol4975GR4/DeWTTW/Nz/Rk9rrlx
5ED35ffIobz0fGdnV/176Ya2DOk2Q27yW/kLN1kuq4cntyo9gsbm0WPXvbNz
Moy47RsV1tLCPDpVXHrqsyoPswzue0MSV0ATbxSoL1HlMfhe9tcrl7N33OtZ
fXzUrp1/5ajuZ6ifYHywfs9uay/5e2HX71FfPr7SO2pj1+8xUS9/4/nDtbDM
SgovG3D6bEZX/TzyrqTQyf1N1++J6hKnfspvJ12zglrZ1Biaf/DtT7Eb1Lic
jOb2oF/jSFOxaOsMHS2u7f3td2l2SVTwS/K1U8Y8jtf/rYX1rFuUrbP1XepC
XS6wdaiXzOcuXWk8EfrhmT6X1nFWHnYzg7RktmeWJAzl1jy3eu2WkUVvTyy2
jJ5swClXyKKUuTk0K/T7bM1eJty5eT7xacUPqPpQ7Mm1vQScxssjQxQzZJRw
ctrymtmq9Wa/ZYQ0roQuLHfOrmtUkO5lLjGssZxK1//6ZZ74NUUZ79omF9ex
38+sHrp1lVI1301HDpkRYGHKvs8YfXBa1Rnai9v2Le4n68nX6ei7i7ouq4dw
Qh/haWVaJv0fksA+3Q==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgn8j8UWxmfmp6JFtClKWdpFhUhuqdC+KaHNUhJtV9stbYRWqRQtt4VK
G5GKyhLSIhRRyZIICVkqS1S653vP837m//k4npn3974z55k5M+9z5v3X6HR9
q+tSCGFhKQT7FxbEEOabVTCbaDbU7DKzU8wONdvRbJnZUrOdzH40286eq2C2
1cpbzNaafW421ayD2almdcx2NvvJbLnZLmY/RH9uV7NKamNHs8rCncx2E+5s
9rPdv8JsitnpZvXMdjW7Inobe5tNt/I0sy5mZ5rVN9vNrJrapb19hbub7Sfc
w6y6cE+zSfbMcLNOZmeYHWVW2axr9H5qme1TxvcDVa9qdpCQPg8W0uchQvo8
VEifhwn3N/vL2v/TbH30NirJ79riRx/XRO//SLOzzJqa/cvsaN2HL/WF+NJA
iC8NhfhyjBBfGgnxpbHwcLNjhXXMmgiPMFtlPqw0+8TsbLOGZnuY/Tu6X83M
TpSPR5mdJMTHk4X42NqsuVkL/V5LHFrKV3w8RYiPpwrx8TQhPp4uxMczhMeZ
nSlsqn7qazwmm5+jzK4zO8eskdlezG103881O68Mj1ZCeJwvhMcFwoJDA/n9
nNlDZv3Mnhc+bNZWfODRTgiPi4TwuFgIj0uE8LhUyJxfJjzbbJv5/LfZb2b7
RPe9g1nHMjw6CeFxuRAeVwjh0VnInFwpvNCsi7CN2W1mV5l1Nesh7CZrJx5X
C+FxjRAe1wrhcZ0QHtcL25tVi+77v9VPG43ZDeIDjxuF8LhJCI+bhfC4RQiP
/wjhcauw4NBWfl+o+SPubhcfeAw0623Wx+xO8YHHXUJ43C2ERyvz/wSzfc32
i86jl9lqK3c3vEftdRenPkI49RXC6V4hnO4Twul+IZweEMLpQSHz85Cwh8YP
TsTcHeIEh/6qw+kRIZweFcLpUfP5EbOeVv7McJxZdbOx0Xk8bvZEGU791Cfj
N0jc4PSkEE5PCeH0tBBOzwjh9F8hnJ4VwulhtX2Hxq+DYuIF/Qan7cy3DYYb
zYaIG5wG2PXHMMY1uu8vmw0tw+MVIXP+qhAerwnh8boQHm8I4TFMCI/hQni8
KYTHCCF7w0ghe8NbQnhMMRtl9jbPmZ/PmL1D/4YDzV5kzqP7PtpsTBke7wnh
8b4QHh8I4TFW+Lr6oc/BZuPFBx4ThPD4UAiPiUJ4TBLCY7IQHh8JCw6DNQ/j
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
TXGGOzHc1qy1uBOPxCf715fqk9y0pe4rr/67yLcl0XP4ilrX/aLPLfHyQPRY
YB94V/HxuNmY6GeMrPfRigm+u7HXsU6vVJtV1P7i6GcEM4Tk7pdHz/OJc3Jw
yuTdvaP/Vnxfo7yXlXtqbFlfcL1IXLjWQdfvjr6HV9BY9pEPrKfeapP11Ffc
WTf3RV835PL3Rj9b+C66XkJffBNd/6FdZ0XP98mhr4+er7LWyP8ok+vdH/03
rk9W+fjg640cnL2W9XFP9LU+1+xb9ceY9dJcMId3iwv73qWa8/bRz4XYizao
zPnPXfqN6xNV5lvt1RoLeD1l+F70s+KZig/4sG/11BjiD3oRrTsv+ligtyYI
5+o6Ogw9yX55l/pl77lf3GdqTGtq7b8fff2zP7O2ieXXzd6Ivl7IFwYorhjv
pzXmzCd7MesbTYiuZQ95TM/8P0eK/h2Ca0WdMufhT4nvAMUu7Q/Rs5TZS/pH
39t66lneUYzrUI0t+csT0XOuV3S9pDJ7DfvMS9HfK6xH3jvoW/Yt9mD2X/be
5TZIPyXfT4cZnpV8/DjDf068mJ9n5fOz+o3yBeqjtuqMA9r+I/W7g37jvYY+
eEbP0ib+viI/WbtPijs4SOWBKtP2GsNfoueZrEvO4Fib46PnnwMU/8Q3cT9K
ZeL8bdUpjzR8K/pex54zUmV+5769yjzP2nlTfbHeQeqVhSNUhutH4sl+wxkl
OoFzRcq7a2+ZJN/Zmxhv3m+srWHR37sdFX/EXsGfuHhbZcaBNcRaukz+viOf
WQvoD3KQYm1Qnq0xe1z+TxKXoWqnpLFlDHsFR8aU72U11Q7r66voew37BWXO
7zhjvC362mBt8j6bKv/hwruHfRCNi9Y9Qu1/pr5W6TqagX2Y900Vvbs43+T9
xbuC39ifyXe/VV+76R7mDpxeZk4p00axv9NmM/VbXW3MVTsd5DPvux76jTya
s4HZGjd8YF9i3+gu/owDewl7yjX6fabu4bk50WOSsWG/xvevVWYP6Sa+Xcs8
X0vrmmdvkn2t+4vnyfWnamwZZ85aOWNF75AP8W2AvZozebRgOfFiz/xEewjn
+ElxwnXeKeyd7KHFtXm6nxwErcmezzeHxWqfPXChri9Qmf2Q+CfH4J3L3C7S
/HK2z/Poz8Vqi7P5CvIHP+erLXy7XXPUQ/O4WPcXGpecZ2P0903x7QGkH35b
qmsbVS6n/pfrOmNOPNeTP0vEC//RDazbzrpO/2hnNPQu+o1vD0XOtEJ8V+hZ
yst1f3m9Y+mLd/QsxQ/9jlWMESd8N+F7CfqL3AitfI7ik+u8B8n5+Ful4t6t
us7fUfyu+zkj5Zy3vdYR3wwOCL53cmbK+RxIvZd8+EXXwTW6vk798K5pJH/2
ktEXeyN54Wa1z/2b5M8t0eOYuJ2jMhyJfWK4WMfgaN3DOBTxDhLn3eUrurqi
Yot99Sj1y957mWKgnOZ/g3zeoPgop7WwUXFyqPzkvUN8sn7Yl5ZZ0C1NrivH
aRzGiutvZfjyd058k7nF7m2VXMtfbXhi8r1loeFxyfVbI8O5yTUc7WxTW3+r
zHxVUZ1yE63nIndhXdfVOlolX++y9i5Nnh8UbTHXJ9u1v5JrgpYsoJLrle+s
fGzyPbih4bfJNeiv4sE7lO84lMkbKuu34m+6ftX8Ml7rNLZbVd5e63qt4na9
4o12Vspn/J9tfdZPri1PMvwzue5pYfhPcj10puHQ5Bp6luGRyef8T405Psy3
azsnXzvofvJEcsfr7dpw6ZZphuVKvn/MsPL2Jd/bkuEpyfXLdlbeO/n+9oDh
oSXXWQ9ZeZ/k782uxELyvKuC/V6+5DqxZFgl+btjP8PK+vvDfey/qiV/l+9r
2CP5e/a/9JlcO79jWK3kWuAlK7+cPKd6Gt+Ta+rqyZ/n2fOt/ELyvWdHu7ZT
yTVcB7vWoKTc3cqNS+5nZys3KnmetIth05JrE8ZmmManC/GYPN++0rB2ycuH
G9YpuSZ+zK4/nzynqWR4TMn3gIpWblhyTb0DMVjytbgduWfJc5rDrfxl8j34
Quax5Dkuz3VM/izxW7/kMcwaqlfydfSqlV9J/m4ZRbyUXO/sYbh7yc85Btr1
Qclz9OnJ55u5HkBMJc/jabu81shWwz+Sa224dhH3S2ij5Fpwk5Wbaf1Wt2v7
l1wXjrdr45K/5xmDK5KPQ10rn5t8L2EMLk4+DnsybyXXcIxH2+RjMtHww6Rv
nmDy3JfYuSF5/DCHXRVvuxrWSJ6fnWdYpeQ5yQgrD0meszBmUfvPW4ZVk59V
jDR8MflZBrFQOXk8/G74a/KchNjZKXn8vJ48zoixtYbHJz/P+CH5fDNfrLn9
te6Yz1LyOf0m+dzD8Q3aVsz0N3wkeX6wt93fJrm+rWnle5LrcF7yjCNjeEDy
37i+wso/J8/5pxjWSn6eN5l7kp8RnpDcV/zsY9g7+TnIBMat5HnA51aemlyf
LjZckvzsgPV9oNb4WMMPkuejYwxHJz8n2GzYLblmXGd4VfKc7BBr+5fkudlq
w1XJzxu4tkbX+3Et+ZkI+2775Hsv83y25vomOCWdBxnOS36O1jj5fs39xMsC
xcwTyeeVOf3ecFHyMwLmc6Pm9A7WQfLzo56GTZKfyfFe2qTYZk9ql3xv2UDs
lDwnrZZ872NM2BdrJ98bPwWTv8+/SL6fspfWS75Hsz9XtDYOSZ5vn558fbI2
2b9b6x762ZK8r7qGM5PrKMZ4vcaZPfi35PtwMvwq+Xkre8lhyfcTnjtCzxJT
gxVX2wybJ88d+yZfP6yd05LvC+wJcwy/Tn7GQQx2UhzeRzyU/F3yZvI1xvr6
H4sHkkk=
          "]], PolygonBox[CompressedData["
1:eJwllnmwT2UYx8/7HLmWtLi4ubr3uleEdKWyZEspS7Im2UqIMUmSiBHJWkKW
BpUtZGsqcUOlfZ+mP9qnhfZ9mpqWaU+fb98ZH/fznnN+Z3ne53net3zM5EHX
RpZl26Aa1GZwC/RLWXY2NMcfhlH4HJiGT4eWeAHXH59n2XWMezDeBlPwFjA0
+dhsfA6ciZdz/af457CEcUOogd8MFydf8zT+DFyPF0EXfBx0wAdAS3wnNMdr
w+n4LjgNrwNHYTfjS/nLv+xUfDI007PgZfwlmIHPhAvwf2ANvlbP43sGM67D
bw8zLsa3wjB8JPyInwsleDe4L/wM3Xs49MQT97gHXw8vMH4epuHT9U74jdAr
OYY5PhMu0rfAWHwB9Mf3QSt8L4zG58I3+HewDG8ETfBC6IJPhQq8LnRKjuEa
fC10xxvDrXg9fQM+CFbjd8L5eBlMwiP3ux/QHDB+JRyrKmJyDf5vOFb74WR8
OQzGL4dCfTvjy/CdsBHfEJ4LzUkD/MVwLLZmfne9k95F37AIX6j349w5jJ/F
nwt/WzE05f7jw+cGwlXhHFFutIc2+JBwLHtDR/zKcC73hc74E8oJxQKacb/F
4XtVwSblUji3lFOK3Z7w3CuG2/B1UJ6cE+3wAzABXwhL8NtgbuYY19e78oxD
+CqOrVCuh3NF8diMV4Zzt1I1h++Dsfh85QS/Xcr4EvxRWIarYCuSjx3BP4T6
+GLoj98APfEdcBb+NpyBnwBDw8/QvXWsSrWpmsfHQTX8TZiHt4a38DfCv9Wx
pvhrMBt/h+/5AH8fWuNTdAyvDkWMFzA+BX8VZqkWOFad7zkmt+seZZw7BJOS
77Eev1s9ITmHmoVzTLk1RPmeu0ZUG3uV07l7jHrLHtUL4wcYn4cfhM/Cc6y5
Vc85Gs5x5fY6+Fb1y/lHkmtKtdpdNZFcsxPUazi/HO8Kf4VrQLm/GgaEa1S1
2QJq5J4zzdVG1SheyvkGmee0nHFjxl0z5+DjeHtYlByDL8M9Ur3xdvg6XAPK
/aWwRb0iXMuq2U74R9AuOQdGh3Ncua1jdfDD4dxoCyfiHytHk3vqJ+Geq16r
Y93w38K9rVQ5w/uWMObP/2vAH/ifsApfmTl2X4TfVTE8iLcNz/3VyifO57l7
h3KgnHNPhXNFNT4iXEOqnTbwu3pROLZ6xvfhnqdepzn4Ff8l/OwVmhP8h/Dc
qCer930VjpV64E/4z+FrVZOqxYnhb1NNdmTcKJzLTzLupfrPnTsbYEw455Rr
mjP1atWIakM9+wrNfbi3VGZeOxVzxVprqHrFXeHcVc/oh9flftuTY1rAfzVz
50oT6KPfM96Cb4V7GfcO92bldE38MZiIV2TuBfoGvbt6wjDGJaqB5Jybxbgg
HNs+ybW1A0Yk19hw/KbwuQfVk8JroNa+4+B1fWvYW6kHhedYc6t3eA/vAIXq
Nclrea2wa02fr94R7s1a00Zprrj/keTfqFfsh/HJPePd8Dfq21QTWuvr5V5L
tOZPZZyFa0097o5wzBQrrUFayy8M17bWdK31PTQHyWt+Z+7VCQqSY3wsXgs2
4Zuhdu450Vzo2N/hHq7erZ5QxrmR4V7zUHKsFUPFTjHXpGqN09qmZ2ovoJxS
LmlPoLWiNPdvtWb0VWxz7620R9HeaWV4bdAeSnuFCMdeewbtTWaE1zbtUYpy
78m0F9utGgz3dPVyxVR7h/pcsyt5D9EAHxi+VseKGZ+Ue+25P3ktaJjbtSZs
D+/xtLdTzih3tcZobVEOay5VA8p9zel/sXkOPw==
          "]]}]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwl1HmclVMYB/B31mqaxiiaiswko5ImUkhJIUREJFFapCjNEMkaWqxZWyyh
hRZLCtmlmkqJIhQhu4oWlWVaZvF9Pv743t85z7ud+57n3kYDSroXpyRJ0tNH
FTF+JjVJnuVRmnEd13JAWpLMkrN5iqeZQh31g5hjfBRraM5ULuQFWvApRUyj
J/Vc04D6tDJfwBu8SSbracPbvMO71OArTuA93iefbL7hWz5gEY1izYzjbgZz
hGcNkoXyHnmk/EX+ys9s4jeaqP8ht/I729lGU/Wr5J90YAensJMhlNGRf+nE
UNq65mBZzmksYzkfUpfE8TPkClbyEXmkqaezyvjjWHu8MzLUMvnEeHV8F+rz
AIdwkmPF8kHGx7s3r04NqlGTLLKZZsMLKbOMPexlH/spp4JKqojmSCGVNNLJ
IJPplFKNdu7bnlqc4/kP8xCHxvvmSZ7geZ6jAfN5nMlM4mxmMI+JTOAxujCd
V5jL0Z7RnLOMU+SZMlUOk1V0poLTqeQa9nMqe9jH3uhb1/wt/2EXf7GbZur3
yfu5mhOj1+W91KExSyllC5upzeEsYTE/8SMHRt+6/kp5MgM53jxXjmEsV8Q9
1QbI0XEf44LoZblQtqc/bcxz5A+04zu+ZyO1uIuatHZev+gJ7uTy6Fu1vtGX
fB3fiQ1kcQfVOc45feQobqfAvLfMl4fxVqydy2gVfSVv5TYupaFaL3lL7Htc
E70pX481cQnHmmfIdfE8PudLviCdm0njGOddHOdzExfF+1PrEcf4jJasjb1n
ZPRC1JzTXd7ICPLML5B14/fIa9E/nE+ReSKv5wa6xT6qnSeHx94ZN5S58lXZ
lBzjc+VLvEwJTZhJVx7hxdT//1f/A2ffmQ4=
       "]]}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757159942285576*^9, 3.757159957188558*^9}, 
   3.757160035709195*^9, 3.757401307295856*^9, {3.757419156562833*^9, 
   3.757419195272182*^9}, 3.757419325322102*^9, 3.7574193687921143`*^9, 
   3.757419662631242*^9, 3.757420000764819*^9, 3.757420287549108*^9, 
   3.757420852255309*^9, 3.757975947421156*^9, 3.7579760017248096`*^9, 
   3.757976032081855*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvXd0Z1eV7/lDVVIFGzAGE5rQNKEZupvY0HSa5q2efjNr5nVPXtDdwCPT
GLAJTkRjGzAYG2fjiHMO5YqSSiWVVFKplENlqaTKVSpVOedU5Tvns8O5597f
lWH+mLdGa1XQ/Z3fveees88+e3/33t/zL188/etfPeWLp5/85S++83/63he/
8/WTv3zaO//Hb38vXJr3qlrtVV+v1WqPvbPG/7PwX/tLfk7mL/ul4v/3yT/z
shdeeCF74okn5Le24kc7duzIbrrppvSj2+Wf4+QbQ0ND2fbt27MDBw5kjzzy
SPbss89mmzdvzjZs2JBdfPHF2cjISDYxMVFbYLd76qmn5Jb89m75e372/PPP
Z+Pj49nAwEB2+PDh1yWd2rp1a/byyy/XTtcn3yb/vDp78cUXswsvvFA6dscd
d2Tf/e535UmrV6/Ofvazn2U9PT3Zd77zHfn8oosu4nqtyW576623Zq2trfLb
u+TvJh6R/e53v8vOO++87Prrr89+8pOf0MsT7CsvvfRS9tvf/jYbHBz0ntws
/7wu279/fzYzMyODSq94enNzc7Zz587s3HPPzSYnJ7P7778/W7dunVxjTPg5
ePBg9vOf/5yXDCPAvRbLGJ5zzjnZ008/Lfd97LHHYtuHH35Y/n/o0KEGfqmd
wH/l0qOPPipf5Ycp2bdvX/x/6HE2NjaWPfPMM3KN227atIlxbZCnvkGaP/74
4/IxM8jb7NmzR4aen6NHj8osb9myJZuens5uuOGG7Pbbb5fpYeY3btwot+Sz
MALzTDi47ezsbOY/TPzU1JQMNT989YILLuArtdN0TFXITsyOHTuW/eIXv8jO
PPNMGQt+kJm77rpLnn7WWWfJrR588EEZV/5/9dVXx8cwhkEOdVg/kS1dujS7
+WaZsOzyyy+Xr/BzzTXXyFTxg6CsWLEiW7VqlUt7tmbNmnhbxPmyyy6TsWba
uA+/M52MM/9nUK644grpPj981tvbK/9va2sTwWKQLrnkktimu7s7O/vss+X7
p512mvSTef36178uQ/CrX/0q+/GPfyzC7uKAmHHt0ksvrekkLshaWlqyr33t
aywfacPk0M8gfuXRZYX+9Kc/lXWxZMkSaX7vvffKUDApP/jBD2REWQ9ILvP+
7W9/W8Ro2bJlMmyh+zq6f59dddVVMlL88H+WHj+8rS0zWXLcnl7yf346Ojqy
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
ufuAHoy1/yAfoVPefSYcdMasU0EbgxeTykRxIQdZCPtn9o53SN+fWbA4O/X0
W7MzT702u+6/fD278V++ka24YUV2Y8vW7KI7BqXvvMO//nh59qWft2Q/vqYn
u3P1tmxo26HsocefqR3Tyag33NhwEV8mCBsCuQ06wLvt9j5YLS9vnnPVKlO9
9kZdPf/0T1k2f3529lcuzr55xh1Z6//6lWzt9Q9mbcN7s+Xrd2TNfTuzjuHd
2brRfdl9HRPZ+Tf3ZV/7VWv2bz9Zkf3b2Suyr/2yNfvZjRuyJZ2T2abpI9mT
z6hxXWXUOBoFCBJ8QkfvGU0u0XsDJyuNm//OVyBm+cbx7HfXrwlSsiK7Y+lI
1jqyL1uybjK7edWm7HcrxrPmDdPZurG9QXmsG9sXlOVN4fqVD4xkVy8Zy355
S1/2jV+vCa+wPPtskLJvXLgm+02Ymda+Xdnk3kez51946Znymn2H9QeZdiPP
gQLcCTcGXcsi5LjIpOH8mVx7a9az6aDM+iX3DmdLu3dkPRv3Z+v5s+lA1jqw
K+sc2ZMNbz8kw8j1DZsPhqEPu8na7dm9Hduy1v5d2RX3jWTn/a43+49frc4+
9aNluhouXZtdtzSshrH92d7ZJ4LBeaz2mPUD7AR5v/3226t2OmYEvFC7+MfZ
5p0PZZ8LWuLs63uyFeunwgLbxzBmg9tmsvEdh6Vbrf075V/v/prB3dmynh1Z
S9+0XOsJ3xnaPiOveE/79uxXt/Zlp1/emX3xZ81R6L9/1brslubNWf+Wmezw
o8+EKc9qD1m/sL9LK7dqE9Uuvyt77MnnZAbPvLJTRnBV71R2w/Lx8O90tn6c
7uxHBrIlXRPZNQ+OZre2bJIu0/Wu0b3ZA50T2W+XjMgo8/0Nmw/Ia9/Tvi27
8I7+7PL7hrKfBwE/9eL27HNBWniFr57fmp1zQ68sCIbl8aeeP1JetlXGzp+Z
1sD6/8Fv14V+t0lfVgZpfTBIL31cHSSBPrQP7ZYpoH8PhOvMPteZiv4tB+U6
n8f2QVKWdk9m94frq0T692UDWw/KfW9YvjEs0t7su0FS/j0sWqT+6xe0ZRfe
PhCmDal/JHv2+Zdmygu36h3+XP5+f3bp3cMyHjet3BjGbW/WEsSCPi8PfWKM
6ctYGJveIN30lzFtCcpkQ/h9ZGJWxn7j1OFsdXgvViefjUwcyrpCv8d3zMq7
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
tXgWevlUrLV2gqGfwhS64qdiOSnSTVZYZW9Q6Omo1mphRjobTd6LJjsVa59w
b8jZQqrhmwod2KsfG6JXPhR7XMknbm3ZJFJl52bXyqd/0Qs5/auuF8kJYRaR
aDEfp3w+N21g5KP8sTQWcm4XjLsrNsahKo0Fk7xcWGI2hxHdUeqFHWQ2tleU
2XUSqOBkaFosFCUFhTKzbjMpB38Q9Lni3hGXWTI7KcJeunRplFnhzJFPOIWU
9GbgdojNbr31Vg6YFI07MTFRBfyo0J4g55yQzU/fxY4Y2RvpPayURIJmSKJT
YXf7ofNTRfLe4fSc+XJ0c14s3lfkNqxxco62lts5Dcg++YPKEG2ggfpiOYzX
59jGVggkulfbZSvK6kmkTRq3dAbfdVbHYzTBOXXJwvQASxFId/gqSIdpxrbr
s2mR0dgrNvh4UlN/FWVIThPPH0xdZsVmpJaEdpsK4dZX6DaziFvSYdZCRbdR
Fz225tMu5bTLSooWo6H9Oy0aeiS/1QlyZ09L7bSSBubBMwO6RvbGzdVh/rOu
XBf+dGVHjx2rY/vwg98RcU6HuPfee6XAsr29vRK7+YSB9LzSZ85eKQzFDBLa
RM+dm1bS3olDsSDSKYIdpLcDnmrOb+fuJfcM8q+1dvNSmKby7Cb3vJ2VeKSA
jVbzBJfYDWopau+uZw6KVvJ2eLWWViZJN6qATKeQTrzPSiAT69YoAlMmgzSb
xp2vFBs1FLtM3uG1iCUCg5S8w+HLFHop1CYXPcvqI6pyAmP56mSBqKBIYOwN
HcmLmOj2EiaaYJdTxTpRp2HQtieUAExXokoCCFyN0HsaGYYMj4KMmKjS4Uef
qVsEpuaJuFKk1dLSIr4j5+eRMwbTDUcxHj16tMp9/ITh+4899by4jlCxYSKR
qGb2cVXeZYTeHGBPEJfoNxdpN9SZY6twrNEdpBKUGZGpiABvUHL4MplFEcuc
zRP+B3Z5+/R4MyGjigQDBa6LqsTLPDTgbxZzeYusG3n1c4tx3Y3PkcvsHc2z
0SLjwNwExVaumCSkjc1NUByrUjdUnOE+r4TEqA5xOtqEY7eWHkKTkwxESvkq
8g1/N3E7CkmaNmx/VIlkzg2SltKay/mkeQShjGQq7HOcXOLlxKS2BAbGyjnr
z71hvZjjW3c97ERSuX9q7IGUKFMLhjtAWk5wANKKgKJ3erxUBEB3D0bKJoah
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
NurQWJwvCXe1lZ6dUx+D45KYCklBcWxenSO2YWbgA+YtQU8imh4+x3gGjv3m
hW3BwtgQhQrlWErN+ECiI43d3eRtkex64ECQsTsd9bBhPAxLy4ad8VRmDRnv
Ev5eJ24Ia7QhE9ZyBc1YKO1DSjyL9BgsJypnfgIB0o4x5hleCjE6WQ8Bsg4B
Gj2uW4YJQRednLceMl0gOoLt6H6jQkjblPtDf73ffiJ1Y6kNQifo/LCCp2kb
+sf7st7iibilPjtAs8zYcvs2l/uj56pJDNs45Lyi3cax3G3SC/y0uOFSl4x0
U7rkCWpltHXUKrKWWbe769BWI/A1bl7fbIrT2hSf5fiy4WZubq80GPWsq7qy
b1/SkT317Iu1vzDJ9BOtEtczFVo3cz9pMP3e2SfkJGb4f7buekh6fmtYC+4Q
64kAh2NEnUCiowyD25Ich3pUb5010fqW6ciglcbqoxGseCLTE2xQSUlKkZg0
Uc8M7ZRmV+kf1KRw+uXxEhUvt/ctJkVe0h4LbBSur9+Y87uVAEbxG0f2xMd6
1D7PXJqXJTy8NU8YTHzJWhms9G51W5VZEaxMvMDREiyad0eM+ySjQW2ApM2w
drkMpaTmuMOUI84vkPt9aTNHKD2Q0xWThqzZ8dIsR7Y13V0GxFBZxvTiuwZF
8HbNPP7BstE6t8C+MXvhRS0LgEldwitG6CAnBhu42l6Ir+eIh5uDThDghNMl
/MlRRVU4moIaXbzJKt6I3PF3Dgq7VpjHCpijjCc6B5870wkWU6CMcKfO4Y0k
TzvNx0uhRM1YU2lMkuPqGGodxlDMPoc2xubEEpNzqkfqmX9zPogj0RQtofe1
Auq6ve5Ux7lIIYbtkCCHJctEHQ4kpplDabnnXECi+BVJhquJd1rPnNfhHom+
XcyJi904voBojCX1xY68MjK/W75RDNUwqv8vlsJb9dSl69ZnXz2/VQwsyRqw
c3gxmS6/b9hraSMqUA/+FeW2X1H2+FkZ/HOMwg/FTuG6OcA/P2Fn7UgJq8jp
Ph2rMHGvSpl2WIwF2S0VHbv/n+auPjivqsy/pHmT0ILVKf6zI4vOLosozMgf
O+swu1IV/1GH2f2DxcEZRQexjrLUbpexfLZUEbFQZ8uAXdtqd7dgKQPSVtM2
XyRpmyZt8iZtaE2gCV81tEhZpXSQCsfzez7Oec65900yq7tjZpK877nn3vvc
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
JKomUOGOEG9jRXoXT9UHYksqfahaozrlYRMGx7++qs3dtX7vJTMhGcgeybp6
NhkWn/NLsntWPuI6ftrmBg74t1EjOm9dDVcaRGYGxdgMgjlhlmtFME4QCYNc
8PQxVkZHOhV2kg1qkYMW2fKsSEcal2gFR9SWYNJRVJYS/ca49zI6Uuuw0ZeC
f8kaXji50CHEOsnpSIGx24VY5kvLe5YM0qlnqkKzdWAIs+ZSqM8CdF7TyjyL
cnyOtTAatdJm9fC5PkUdBnPIL+JzzEMUV2jWCdD6ROjt43KLw+AJ+j88RS26
9sma2zn4grvzR7vdv6zc5n676VHn+vY69+ablYtmD0Ego4WurVxnh3v+U1e5
L936uLvv2jtd96UL3ZZrFruH1++gsdp6xyUQBCsu9hBl40eephimnkMPgm2X
hakrstWfoQ81y0Ebl2CtfQn6EFbESay6gCQKP2DYtC6tKWinjFWTFrquyzpq
7HbrpTkdZrdHtqYMoBxpRFP4kHdYEvShNFxd1/QZ9JCAnJp9wGAP9dG6abhR
35v09OB/NPJC4n8UQc6il2mEv4+WsLoWk8rnNHm1NL44R+vUOwRbnjC8KDTS
v87u729w37vh++6623/mJt57AbqFcwsXgvpNGatBPopYAoNKcCzhOVQMTjhw
xwG8wA+ibo8fP06fUQYKFQTInDp1qizKVt2R/A2dW7DAveUFWPyvG92yrz/o
Wj96ldu88Fr340/f4Haufdz1j50o63SGmjOuzXbxvmdgvLQ9T99BjmxYgDpx
X43dS11G7DxVNben+WkgzE8VHRDKki2FpaTUV2++oTIEsOoCbC7d5IB5Otv7
9OmGxiIfneG1sN0vh79CVzFYZClPqeW5OBr2rIbG6vKU6nBgAi7sdGXdwWVG
q09VmqEjWSx/Fr8e+8pEdHEbrxO/rr600d/dklUUgEDu9WUYe6ELGgctBJlh
IbnLW5Db717vOj7ySffQPy5213y3w+275GOg0q4QmdH73++c9JK/ydcV75N5
Cp1TSUzB8rV582ZyDwC/EcrRA/EflPQgMUI93zvLqOiukGUJstm6q66ioeCd
s85yd96w2i1a9qj7+eX/5A7+9WVu94f/wQ3+/WdcW/fTrmeEFWXkGbaWRide
meMOHT3hbYdDR1/BJ/KQ2iXJYUd9GdCGobGpJqpGCSqopfoPHzOHvQGFw1WK
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
ZYGUdA==\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"--", 
   RowBox[{"--", 
    RowBox[{"--", " ", "Probability"}]}]}], " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Distribution", "--"}], "--"}], "--"}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242410193131*^9, 
   3.756242421706142*^9}, {3.756242567353114*^9, 3.756242586274626*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Maximum Entropy and Probabolity Distribution", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, {
   3.7562426049479437`*^9, 3.756242637924632*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData[{
 RowBox[{"\"\< Let P(v) be the probabilistic density of cells with metabolic \
fluxes v. To determine the form of P(v)dv, we adopt the Princile of Maximum \
Entropy (MaxEnt), which in this context can be  stated as follows:\>\"", 
  "\n"}], "\n", "\"\< Given the set of allowed metabolic states \
(\!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\)), the dependency of the \
cellular growth rate with metabolic fluxes (\!\(\*SubscriptBox[\(\[Lambda]\), \
\(s\)]\)(v)), and the average growth rate of the cell population \
\[LeftAngleBracket]\[Lambda]\[RightAngleBracket], the distribution of cells \
within \!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\) has the form \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \
\((\[Beta]*\[Lambda][v])\)]\),\>\""}], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349487423*^9, 3.753717464028084*^9, {
   3.756235756822732*^9, 3.7562357731281023`*^9}},
 ExpressionUUID -> "ad26a90e-9ad7-4f25-81e9-f492df604ccc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distributionOfCells", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_"}], "]"}], " ", ":=", " ", 
   
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[Beta]", "*", "vatp", "*", "y"}]]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7536210422173023`*^9, 3.753621060056937*^9}, {
   3.75362109751334*^9, 3.753621104145206*^9}, {3.7536212245560226`*^9, 
   3.7536212272113543`*^9}, 3.753621266472271*^9, {3.753621777542453*^9, 
   3.753621778467432*^9}, {3.753623215153349*^9, 3.753623216162744*^9}, {
   3.753623293562064*^9, 3.753623381509952*^9}, {3.753623534504046*^9, 
   3.753623536620682*^9}, 3.753708349488627*^9, 3.7537174640287333`*^9, {
   3.753718556315134*^9, 3.753718560452236*^9}, 3.7562396017980537`*^9, 
   3.7579760994798117`*^9, {3.7579761727601137`*^9, 3.7579761730968647`*^9}, 
   3.757976234704894*^9},
 ExpressionUUID -> "7a735811-24d7-47b9-9d0a-e4e34810d5f2"],

Cell[BoxData["\"\<where \[Beta] is chosen so that the expectation of \
\[Lambda] under (\!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\)) \
coincides with \[LeftAngleBracket]\[Lambda]\[RightAngleBracket].\>\""], "Text",\

 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349489089*^9, 3.753717464029531*^9, 
   3.755969981992999*^9, 3.7562358366788883`*^9, 3.756239520400701*^9},
 ExpressionUUID -> "1d19d643-9ca8-4848-b7f4-203e6fa12078"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showDensityMaps", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.756384011774404*^9, 3.7563840223553143`*^9}, {
   3.756384612185986*^9, 3.756384612312175*^9}, 3.756384763364163*^9, {
   3.75638483321093*^9, 3.7563848333394547`*^9}, {3.756384882813324*^9, 
   3.756384895224327*^9}, {3.75638493120504*^9, 3.75638494650436*^9}, {
   3.756385092735599*^9, 3.756385103917757*^9}, {3.75638517786574*^9, 
   3.756385198387044*^9}, {3.756385453971998*^9, 3.7563855243249273`*^9}, {
   3.756385717591535*^9, 3.75638582163024*^9}, 3.756486711064025*^9, 
   3.756636250119508*^9, {3.7566363329318733`*^9, 3.756636334585719*^9}, {
   3.7566384285838823`*^9, 3.7566384300973053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Probability Density Maps\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.757976238940669*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.75797623895057*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Beta] values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "1.`", ",", "3.`", ",", "10.`", ",", "50.`"}], "}"}]}],
  SequenceForm["\[Beta] values: ", {0., 1., 3., 10., 50.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.757976238960019*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlXAl0ldW1ZpAhkTkMQiDcID5BkckHfbZPz/V1UfqqrSyXRSur4mMBrfC0
ikqloIJjkdZCQGiLyBRABCRMNwwBMkMIITchNyHjBRJmwhSkWBHe/ffe3/7f
Oc1irawv5z/n32efPe/zkzzhd09PatGsWbOpdzVr5v1+/4dfxv7Vm5T+/x37
t8owbnIwxrc641tN7rOz8p6d9b0z3jJo43pTHXo59m+PzgfGfHu8ZRCYlklp
qziPnm+vOO3mJ5v/2L9z0J4PerMderMderMderP1fcB4H/DD9NM5aM9PUHz0
8T5lj/fp7ozXGyKvOl/pAQY99njLIDDoAQY9wKDHnp+gGPQA30vr3aP49TFt
3hzTJtGZX2+q6A+FSi8w6LXHWwaBQS8w6AUGvfb8BMWgFxj0AoNe4Bxav4/i
hPFXu42/2tdZv97cvuP9FOt+gLEfe7xlEBj7AcZ+gLEfe36CYuwHGPsBxn6A
sR9g7Mdev94sIMJKdT/A2I893jIIjP0AYz/A2I89P0Ex9gOM/QBjP8DYDzD2
49LP65Qp/cCgHxj0A4N+YNBvz09QDPqBQT8w6AcG/cCg316/yewg/SlX+oFB
PzDoBwb9wKDfnp+gGPQDg35g0A8M+oFBv71+kxlNBqtS6QcG/cCgHxj0A4N+
e36CYtAPDPqBQT8w6AcG/fb6TaaSDZjSDwz6gUE/MOgHBv32/ATFoB8Y9AOD
fmDQDwz67fWbzFRyYLVKPzDoBwb9wKAfGPTb8xMUg35g0A8M+oFBPzDot9dv
Ms3o57jSDwz6gUE/MOgHBv32/ATFoB8Y9AODfmDQDwz67fclB2ti27l9Jyrv
OyrxQYpiji82CP03FWOcjzNE+1kyuHnwFQ++s8GUEb2tgxjH8/z+TPMG0Xu3
jncn+joGMd42Nvrm7DKmZ0auvLeLjs8kBvYIMl255sYnm2/G5/cM/q/34Be5
JpEI6B38KS1QIHKVpJjPq1H8+VHFND8UMZMmT5689s8BthfrIjrO/qjCvOCR
+1kgCIzx+URQlY4DY7wf0Vuj4y5mftQ58VyKcz6rHLzViSd9/t9Hw1uc89zj
xFc+//nvu8yKDudXdHi+VONFWz4zVT7pvEP7VR5xHuA/L5+v8ujy3/Z/jeo/
YuyffGh5gM4zsaBcx2H/wC/bfjeq/cM4MPndLDnffbU6butzjvBnqcjnd4bo
TV1jZpG8tZH9bTe87w7Cv52G2PdZJ+HHXvOUN/2bHhIP55jLseFu0d5BEpc7
B4T/Z0WejvJ7GiAvdUoPz3+P3j/qeCC4ncS1Sp//CT3g08/nk+bMT9Hn+X3V
TO+yMn5+9mx9nvezVvQvV/Rvu/k6lm9knmd+jpxRrevZ9rtR5Q8Y8jqc5Ke5
yhsw5PfBfSdj/7qq/ADb+UujwTj0A5jHaw0vn2cKD3s/PVXegO38o9FgHOvZ
8lkr8eQhxz4U6fPAD8TofSxUR/LbGDrirF/irF+i9tTW9ybFzJ+rws+oygvk
05bXDaYrHegdPX/6c14cy9vy7boffj7HeOL5ZrizyisNj+oapNf0z9LnIa//
iNnXT4b0DIK/xM5ZNbyfNw6zHHdKYvvQ6aDaW/AH/gfYtsclOg78XzHrMefR
AMnD3NQwve/JpwKc3+SV6HzYbzv/Ocr6Oxr2tFQx9A385PdFFLP+lTv0Rxz6
I7oe5gNjPtZjeir0PKHfsD/wx9AnnDewLR85qk/0a/BV0d+lKj+2/b+h+mzL
21qhq0XQthctRR42q7/geTks5zO68fNDszQegf6t8ybs7h6EfME/Ay/3/MmU
Xio/ZMeu9eL15uc551lojLf8M8iXDjn50yHlt53fnVV/gnE7fzqr/gX8p32N
LDeeeR7/yDmW4x9UKr/gn8FfYJwn7C8w+Eti9m433T/OE+eN+MeNh+CfsR7s
tV0fCen5wR8h/oP9Ar+hv7BHsH/ghztu1zPAz8NO/FOs4/w7rPyCP4D82f6s
3vEPtcovO55ca3rTAu1kP7tUHlx6wD/b32Q79jLH2X9I6QEGPeAnxu31aw3s
pR2/Zyq9GAe9Nj9vanwIjPgE/MJ52/oaUgx/Cf3CeQO7/g3P2+e1XeMb6D/i
FeinXZ8L6fOYj3gP78d8yBPzb5u8f5ohd353svAnqtjOd1bL8xPMTc/f9E0O
ptP7o4rx/FkvQB3+PevVxHUaz/L62zQe47/v1vgV52PLX75it77G8d8B1UfI
NzDowfnx+itVPiC/f/9b7OdAR5bfabvUXtLzI7Mp3v70i+s8/50VhshuAP0Z
sv5pkR+p57xdKO+frvxmeZ+n9sa2X9s0nuT4L1f8x6sqL3x+SzQ+g3wgHmNx
yHT0JVfjK1t+ajWe4vi7VuLvIsde1ml+R/lKyl6KN98aFdB4APYc/h3y7Ppj
YC9+6HPlDL+3sULljdeLSjz/D3n/Kn4uDv4q2wz0Jqzqy/o0rsC0j5nT8xdv
M78yv+R86elOzJ/AbrPWY/A5ycev5Eg8dtkcowVq9f3w71coH4B9S1f55/GZ
Ku+8z6ijH9N0HPrkLf/gkZDqDz+/UNabyvQOTOZ4uiDK/u+XS+X5n+h5IL6A
/4I99fYTffsCy+ftz5z4APFlkcTfO8S/NhP6Nunz0D+Sl0HFxqs/hNrvl/Xv
5udv75B1j4l854p+dJX6QqY54e33HcT3eeac98AriO/cfL2a9O3HqRdIXpam
VsvzabzP8StUP1geFhtiT5dkXq/JPz+2e3XGY39Ci2TKxzY11jCf79sl8r5e
+cH838bymV6k+8f+mL/5Tn31MMUjy3tLPDmsyMl3wnJeJ2S+xMfh48azl43F
YdLvLe+eonglbnZE5ZH5uULs3DXD+rZM4xumbznHQ8O6yfllMb+OdBP99OM/
ri9kqX1i/pWp/EEen4uxo91wrjeFGqMqj7DvkG+mb4xp7bmTDsmc32bUOvHb
EeUHMPjB+yp28p2lipmeFOU/7KVtH1Mc+7VL5RcY58v2Ml2fR/6E54HJPB6O
U38ADP9K9ZYp8azv/XaYJZ6/6Jmk8S4w7Okcb/3fJok9Oajyz/uPqLza+UO9
8sM+r8WK+bwX6P6YH7vV3yA+xftw3oPohXdpPAqM+IPqNKmJGh8A2/63SPnr
6dfmttCP9/l3XLqTzxwz0H+cP/vHI7qeFd+1C2s8R/ZzSFwQ9srbfdkc9Dcz
zCbvgUN9ZD8HlT/I97B/N3/k9RdJ/Wyr2tPWlG9LvWPuRtKHWaPAnzSW40TE
67nm12SAEvl8G/P0/W69zM1/2P+VKD9wvtBvxJ+w9/y8Xz8DxjjladV+/RIY
7wtJfg0M/wx6eb2jTrxdqufD81I1/0N+gfgZ+m33b47oOOwhxoHtespatXd4
HzDOB/YM+QLsHc/PVuzmF6hn2PHZEae+UKLxDeIlYKxn77/C6X9WOPFPhT6P
88TzwHY8VOnI71GtD0NfOQ5sFYS/Qv0W+jrME4cm9J8P6Pr9RA+BIR+oV4Df
OC+cr6feN+MTtN7UX/Ib7BfnBwx5xPtQfwY/sR7Oz5bPtYpx3lgP/MT7Ib94
P7Adr5Yq/6GP2B/sgV3Piuj6dj2wSbGtjxLvtrmg/hrzEd9iPjDm433A0Ac7
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
ZcSHwLAP3va79fXzRVufSx3+lzj35Up4Xzdaij9Jc/pvOWzfBuP+er7yH/mv
fd9xpvAjS/br3n+YKuNbZHyyUz9MlXzgG7WvuI9hyftC3G/LdtafqfET0zvb
6V/6GPTw88tk/FXtjwLb/co9jr3NcOxthtpPxA/AsK+4zw37B3uH+Th/zt/C
HF+M9u+bAIMeu14YcfoREdVHPA/7D3sKDHtqn+8xR98qHPtV5TxfpfEb5AcY
9gzyCX8CeQQG/aiX2fai2umXlGh8BX2BvDP//e/NmH/b1f4zfdsUwz/AvqPe
BPuP+gEw/APkDfJux+8zVb4g78CQPzu/War2BvEZ0fc86jURrj8v6hq07K/6
h8XO/YUU576m39/DuH2/b7Hef4F8QH6Acd8I5wt6oJ+87Fnj1od5vm//+Dm/
fo37IcCo7xB5D/v7h/yEJH+24/U6x1/4mOmNqr8Apnr8mJPaPyF57n2S6U0s
5XroxDDj/8k0v4gt93FjkuRrB6ke3S5N/HtxBecXv7/I+39dvh/ZdJH9z1c1
9PyfYvG9R19DqI7i2ydm+fU4zq+/k3rsGrIHIzvcw+97TPqfr2Qyn8anyX2d
/XJfZzPFlxMKhZ8fV/J9rauCz1QbL3yqvC76m1Qj9dsqqd8e4vrQiXztz1M8
M0jsyaPFwo/jwo8wxcNTfij10T+EKf+If0HqQVtKJV4/I/F6Ba//Z8HzKvh8
l8r93iWVHP/fxvdZ4o9XSv/9KYnH703U+2wUf7UKqH2l9z/s9ycoXq85rf0z
2tfr1XqfkO7nvNxR7R/lGxW+PaO/P3ne/n6o+UW9v0T1i4EXef375d596gbV
Z6qn9EhWeaR6bHoGy9v6jdyv+Va+15hSI/W7iNb7uX9Tzuf7YT7Hv3GCv89j
fRx8nJ9/IMz55/2ntL/H9bdrUn/7Qupr0p/4KEv6UXKvPaNY6n8lej+G+BeW
+xlhuV+4Ml7OYwf3id5N4vOYfJDizHEf+vcvaN6x02pv+L7KHq1PUD78isQh
k7M4vv3ZJa3Xc7x7UvuZFA+0OK72hdtS53i8tpLo75t4nu73TU+sYn5PusT2
ZmId5fO/jflXb/7+l0u5vpAv+p5VSt+XTb52kvP1K6VUn/+PW/59Te6PyXc2
A+T7746Xef34KH+P8SPpJzwS5ftSq/k7p9TUQpbXoaIvXxVzPXGE2KPkMN9f
G8v9vE0PlZo/ePWdX4n+TS2leC/S9gzlUw/FVbC9/sEl3v/DdSLv5dp/o3nV
l7QfRnbm7xc1n2N7m6nxrxdfbbvm+1vv97sv+t9r0Prp57Tfwv2PKv0eh+z7
m2eM1Z9oPMH8OV9C9ubjRsn/9u2k8596uovYt31cX17v9zfGxsTt8yN+f4Pq
38/63xeUevX2dSJvT1bw/byD0l94rlL81+daPyT93ij7W1JB9uJSmPV9YnUl
938iMv4Q63+X+/z7qd5+Xpvt368ieXxV4qusEPuDu4TepEN0nmaW/H8Bi3OI
f/HxAY0Pvf5Tz4SA1kuSPHprG/S+HvUPeh80yKdYvyN6v4r7gWHN96ke98RF
zcfJnj6HflO+9Luieh+P7HlGieZz3vks+drPv6ifUernV970v7WX+1TBhWJf
Wki97mv7/k+XAjPPU6BmDdofZn8m98Ef22aGevI2Qu4DvHBAv5di+7de4w/G
IZKHW0OkPjggU79/4vvaubyfAY329x/xXdheRTOIXxlxydzPeqmW8qkdPQJ6
v5P6SfFler+V88d5ch4jWZ4fP8H2MXUe918+lf7EY1tYfi5IvXxsvnPfZhvZ
82iKH+9Q/y9Ur/ex2J59K/2HVOZHqAfL+7ec7/xzwVna39OxOI/7E9n6PQF/
/3WY6Xsjg+uhSztLfSqD48m2LZi+ho0Uz9z/770Y38iV85X+YXA19Y+aBnVg
/t27U+rDPaQ+7P9/Iuz3jnK965TfD6T85jcJQdwnJnsSEn39z2Ocz1a11vj7
j1SP7q3xNdm3Ee35/ePTJX78SM7jDdbnh5KDdJ9iY9T08h44KPXH3xU49fip
Tnw+TuvBnAfL93UdpJ70xEymf5F8Vzqd89MA7stejpr/A8Iujgg=
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAnYT8UXx++duQqJkn3Lkn0p+5J9SWQXqWwRQqGVVBItsqSQSvVHu0pp
RYuIRCulfbO0qlRSWlT/83nP9/e8nuedZ+bOnTlz7syZs//eKiMm9psQkiTZ
d0SSRKtfsofJVk7LkqRjmiQdrNxq/S2tbmFlobVrWF3UyvvWPtZKISuFrfxu
836zstHa7e29gUgKWmmTel3MyunW7m/lNCub7PkJK7dZaWiLd7a+TlbqW6ln
5UPrn2z1r1bvtnKM4LHeIVvnbyuvWrusYPN+s5WnrSyxcqnN/dnqz6ycYu0u
VmpbKS58j7JSTvP4jpr2rqSVj61dXn2MrWjlOCslrFSyNStaKWilgt7z7lPh
UMbKLtXVrDS3UttKHSu1Ep8DvOrCm/VrqC6vsbyvBD7qq6D59B1v5UvBPsnK
iYZvAytf8B22h98ZXlM4H6uPtnK+9Q+05wFWelo5Qbixdqvgzw2tNBZO4NJC
69W10lR4gHsz1eDYRGN51yhxOMxvqXn1rLQTbN63Ul99cLZ1a1v5BnjBx7S1
MsjwP8NKa8OzveaBVwfVrNlRNXh1Fk7scRfV4H6KanDpqpr1ewkWMHqr7mSl
avD1u1s5TbiAew/V4NJTNfP/Mfz+svpPvtvmVrOy3Np9BA+8zjgMXj/hB179
VYPX/fat/wLPSgODUd/KPdYeLPyA11fwmD9I8MDrTNXgdZZqvu9s1cyvFxyH
gcKrqfZryGGw2/HtwfEaqbHgXsP6MvvOaKWKtctbuc/6x1sZamWYlXLBx4+w
cq7mgeNYfQPrjFIf+I4RruB4nmrGjdZ73o3TPNboYPCPslI4+HNf7eWpqa85
wcpErQ/uk1SDy4WqWf8X+ICVB6x9kfpY8xLhBC4Xq4/nLVbWWFlq5VK955sm
Cz/24DL18dxW+IFbKzvTutwzK1cchuOVqsHxKtXgOE01eF2tGly+szLVyvVW
blAbeDOEE+vPVA1ey2zdpVamWPty+K2VvdaeLnh86zWqmT9L8MBrvuACb7bw
A685qsFrrmrgzVMNvBaSA8iOGwWP+ZusY6OVa619n405yspr1r7H6retfpn1
bd++tuftVm4SPPDI8UT4CXJmUeKyBFmEXDkycflRUP39JSuQC8gN5An8fau1
t6QuY1LDZbut1ylzGYNMKqo58HlkAPIBuQE/h+/WFB4X29yLosuVghoLr+9g
sPZZ/VjiMgYZUDpxGXJ34rz6WMHim5AVFfTMGhX1jCyhXUJw4c1ltE45PXe2
tQ5Y/WzishAZU1Xj4L3VNK66npFRyLFKWqOWvucuw+0SK/uTfD7YS+Pg+fB2
5EQd4T9AsgWejpzhTtQTLPhJkyRfNvCMTDlJ+IAHPLyh8Gqs5xqax/MbBvP1
1O/bETa3gJUXUsejueAyHz7cVnjAz1sIj1Z6Pqg28mWindWRBmdf6vPhn530
fS0EFzzaC25OxrRP8mVMB31PJz0jr5BVbZJ8edM5yZc3XZJ8ecMzMgG50i1x
OdFV+F1hOB1KXH7wPfBzePRB6//dytYkX/acpjXge32EE2fVU3j10flV1LnV
SvJlVQ/h1E/zc7KH53/UBqczDMerbN2QuvxBZgwQTvDzgcJjkJ6vtHFJ6nIr
J4cGJfmyJyeLztK7aqnzwKnCdbDGgRM8MyeLhugd95Z7wr1BNiF/kDVrE9+b
5YILrx4l/OD5I4TfuXqG3yMnLhB+o/QOvMZoPnIFXj4syZdJY4QLfH2scByv
58HqY1yOp8NDhxm9lZSsmqC+qYIFv704yZdJk4TLRXrOya2cHKOeoDUu1Xxk
Cft4uda/TO/Q7yYLvxGGQ6ngeh+4Tta40Vr/oiRf9oA3vBm+P1Ow4LvXJPly
aJrmTddzTt7MSPJlCe+QOTO1HnCRAcgWZA8y7DrtB33IMfgrfBRetzy63FqR
5MvCq1RmC1ZO9iCLNkeXKw9rfWTGPOE0X8/T1Tc3yZdhwBpr/PMz25sLbB9X
WD0JurSyyuC9ZPWjNuZPq1tZeYf9t/4xVlZae5X1XWTlaCvXWDnGSjErfa30
kHyaaDAfxFaycrGVY618ZP3Frf9YK++nTtvIJuyOh9DJDafbrX5KPLmElRlW
SlspZeVmzshKu+jyYon27RSbN9Xe/2Ltsga7kJW7oG0b96r1b7Zyu7Vvs9LM
Sj977iWZlKZ+l9AzS9i846x8mDovhbfDP2+yOfOstLDym737MfV7t9DGFrHy
PPRgfWWs7LT2c4IH33jB3n9l/e8hp1N/h964A3sJ3p74+sCDN26yMRs5B2t/
Ye+XWLnDygHsPivrgM0ZJU4ni+xdMSsvWnsn323lTitjbczpti9vQWfYetau
bvWb9rxBc4ukrndw1q9E74eWVtr8WfZuupWfrGxLnSZetTGFrS6Uuv3LPNgf
djF0gc5zrc0dZGW/9bW2NYvr7F+Gr1rpYX1/Wn0/+rOVOTZptmxd6AfdoYDo
4gnRxo3WP8bKyVZ2WRkKXonzFO4QOmEHg9HeyivW7md13+i27gKrh6VuB6+3
9jRrH5G6/o6+fo7196FO3a7mzNfo3KET9IvK7I+NmWalZ+b6/3M63/+gcysP
WNlj40cit3hnz8dLNsy0UoE1rVSSTOPMsXHW6tyPsfYfqdPXFMPzQ3v+ztqV
JYtYj3uGL4H7BW+DBtBv0eehI76lpGgBO/d7a7+H3LX3vQ1mr+jfvsPebUt8
/hPR7zx0cJaNPTd1Xfm9xPVTaKKmvd9j7z5JnUfRhx47ABqTft8u83PBh/Gy
eAl6LXcXnwR3rZON7Rj9LMdbGa5zmWp9Hxv871O/35t1t9tnvp/YH58Gh/e6
laI2ZjC2fOq4vCa63Rb8/j+T+D3eovOE32wSTfW0uT2sPGJ9XTP/Tu7Exwbr
ldTv30jrn2v1bCuro+8Ra4+Lzge5UxN1l1ZoH7epzf3bob7ONnZ3cNy/hg9Y
+dH6nwVHK4sNxjyrL7FSOji897Tnz9u7e3UODdEhoScrda1UtvIDtJ267+mD
xHnrh7o7hdSGv7az921T18VPUo2O/ILh9ryVu6PruujG6LdP2fP/ouvDC1P3
AX2SuF7/keCfEt0nxfPniev66PndovtfdtKXur+J9+eoZgzvvtCdqqs2vLZn
cN/WHuEMTOyRhqnjvcvajVSjSzMOvb+qxuwW/ANaA/i9U7fFsIlGCDbjm6Tu
M0IvrxOcn+N7uczan1v7RSvfWrux1V9Z/yirv09cdjdNfT7jl9uYZVZustI8
dRmPTvKS7cMFVh5NfQ5yHx4FjL2Cw/hmqb/rFdxG5T28lrOFdbB+I+EK7UE7
+BurWfsL0etjOps8npm6rOV5UeoyGliXG/zXUrf/Lre5d1p9nPb4Z+0zdxH5
iS4y0DbsapuzO/U7BS2UtHJJdNuPcTm/IfyZu3hQfI1z+FVnMdv6T7fyr737
28pfqdsl5xuM8dH3+JDe/QEf4A6kbgPdaO2+es88bAbshTbW1zK4L+ZUw/MR
qx/mu61vZep7fpnBvjT6nEVW17R3Bay/nNaHt0+ObnecmvhYbAD0/4o25j/1
Vw/efzo0H1zX/09zWQOb5Vnx9FQ8Gl6N7AfHFtLXsQ04UOBcpbGMaR98Dcaw
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
C/gl+hx8YNAyd5L7+H/tfOJj
            "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu9972UURWMoyWcJe1NkNspCFgobmSxMKVmYshJbWVjYjIWN
ZqVQ/gU7iQwSmYRoUkPkczFR+J2Oxa/7PM85733Pfe/blEgOTQfGmBbwcO6M
aUasEK5BOfqeLI4ehCzM4sPWmDvWT3D09JJvk1Wjj8n68RMwD6fkP2Td1Jbw
w3CF/+Z9l+g5dA09OdZHKKKvj3wKKrz2Sb88V+b1HbL3ALSiu2Ccegpfi75F
j6AXYJJ9e/C77JFnLaZuYTHQGTvQB+Sr1KOs3use8qzMsE9Wj19Gx+j5wL/B
DH7T6tkL+B2r30C+XRtsBfoNG7zOkP+fIYp/QqfJYqw3UEnWiA9Bp9eL2EPH
qX05nVFmk+yC9RWS6BOjZ4nAaKBnKkGHvM5aoKcK/e501jHqZ+gXeKZ+BBmn
M8ksG/hSdBadQyd4Joy/xv/i66z+C3InchfyT7SjH8gygZ5Z7uIQv270Tv4A
az5KNw==
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/GvRY5sjt0iKtaVu5REB5WIsmyE1DpyLialmEw3WtkcMSPj
SK5xTaXERjRNTQctkvssMkohK3ckPd7TH899vd6v9/vz+d6/zejzTKehRZIk
me3P+pQkSeXrFU2SQ+quxZLkNVkb+qK6Gp2s7knzzW3lW/Hv6g1HOlbivPX5
tArN0R/Ej8aT/DRrOtF1sV7/X3Uj9WU61syDfIr8Pf2G9Kjscdko/UPq69V7
+X14FZl639BV5p/ir/CLcR/f1+w5+Sb6j7UD5RvovXpjZP3pNllDelh+NW7h
S9NGuAm3qqvStvR9a+bH+SMPe+Vl5b/ScvSSY70Ux6Ll1TVQAT/pV6ZtrMnB
QxiDLvhRby2tr/85vayuiVrYoF5gr456GfbNill1zahxM5pjo3yj2V78AToT
c1BLvUOvOq2Du1AXf8gy0T7W2a+HbDvdGfeX30VPojS/0HGHxjnza/kFGKY+
ob+aVqI/0M34APXMfUg/xnGk6feTreBP4lr1SnoGI7DafkP0pzh+dtxvZMu6
ow5KYbLe25iEiZiA8XgLeRiHNzEWuehvTS97d8S4eKftXwbXYbP9r6JFkI4v
ze8y05pvEdeCivwmegc9To9hrj2nm+uOXLTDUXlxM8VQBQfjXps7ptc5vh3+
gOxG/meaRn+jXfXHo1s8X3xk7qw8A43NVIv3EKkogxayLGSjVHwfKIkSWK//
fbyr/Dx7zcVnWGbP5+M70TuDovoX6J1xDq65NT/STDl6Vn2N/Eh8A3Q3vYFm
Wt8v7g1GIyuen/yUflN6mv6FurhdPcs+7WiafTvLVqibqRP8rb6IJnwBPWhm
BpagS7x/9GX7T8AjqB33ErfFd0T34FN5PrbZch3toPdYfMN6lWIPWogr8R5j
kT33Y7BeffURfh6etfZP9SpaMe4fLcCSOK7ZpfFM8Asq6PeVLecLka7+hJ7G
EKzBw/H+2ncNTqkHqifxJ/gB/DC+rHVP00HqLc7/cDwb9Uj6Qlyz/Av6HXpj
q97dsqn0OaRiefyexfHjmlCcH0BHxfdi9h3rHqVf23+L3gV1D703cH88B9k0
0oD+Lusme93MPfE7pd7N78EraC/7Ku6D+d7x/PiFaMn3NFsoL6CX4hziN4d/
QK8B8vg+dJn8Cfqt2ao0R54b3yYupvz//+Y/lOrSPg==
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1:eJztyKENg1AUAMCX0hHQECb5EiwdoQkKEjy+iklqqqvZoQOgEFXoGjoBE5y6
5Kr7eOsuEdFfI7K/87D9nvuSyse3fRef1KxT/qrX5L333nvvvffee++99957
77333nvvvffee++9995777333nvvvffee++9995777333nvvvffee++99957
77333nvvz/8A2AGgow==
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlXAl0ldW1ZpAhkTkMQiDcID5BkckHfbZPz/V1UfqqrSyXRSur4mMBrfC0
ikqloIJjkdZCQGiLyBRABCRMNwwBMkMIITchNyHjBRJmwhSkWBHe/ffe3/7f
Oc1irawv5z/n32efPe/zkzzhd09PatGsWbOpdzVr5v1+/4dfxv7Vm5T+/x37
t8owbnIwxrc641tN7rOz8p6d9b0z3jJo43pTHXo59m+PzgfGfHu8ZRCYlklp
qziPnm+vOO3mJ5v/2L9z0J4PerMderMderMderP1fcB4H/DD9NM5aM9PUHz0
8T5lj/fp7ozXGyKvOl/pAQY99njLIDDoAQY9wKDHnp+gGPQA30vr3aP49TFt
3hzTJtGZX2+q6A+FSi8w6LXHWwaBQS8w6AUGvfb8BMWgFxj0AoNe4Bxav4/i
hPFXu42/2tdZv97cvuP9FOt+gLEfe7xlEBj7AcZ+gLEfe36CYuwHGPsBxn6A
sR9g7Mdev94sIMJKdT/A2I893jIIjP0AYz/A2I89P0Ex9gOM/QBjP8DYDzD2
49LP65Qp/cCgHxj0A4N+YNBvz09QDPqBQT8w6AcG/cCg316/yewg/SlX+oFB
PzDoBwb9wKDfnp+gGPQDg35g0A8M+oFBv71+kxlNBqtS6QcG/cCgHxj0A4N+
e36CYtAPDPqBQT8w6AcG/fb6TaaSDZjSDwz6gUE/MOgHBv32/ATFoB8Y9AOD
fmDQDwz67fWbzFRyYLVKPzDoBwb9wKAfGPTb8xMUg35g0A8M+oFBPzDot9dv
Ms3o57jSDwz6gUE/MOgHBv32/ATFoB8Y9AODfmDQDwz67fclB2ti27l9Jyrv
OyrxQYpiji82CP03FWOcjzNE+1kyuHnwFQ++s8GUEb2tgxjH8/z+TPMG0Xu3
jncn+joGMd42Nvrm7DKmZ0auvLeLjs8kBvYIMl255sYnm2/G5/cM/q/34Be5
JpEI6B38KS1QIHKVpJjPq1H8+VHFND8UMZMmT5689s8BthfrIjrO/qjCvOCR
+1kgCIzx+URQlY4DY7wf0Vuj4y5mftQ58VyKcz6rHLzViSd9/t9Hw1uc89zj
xFc+//nvu8yKDudXdHi+VONFWz4zVT7pvEP7VR5xHuA/L5+v8ujy3/Z/jeo/
YuyffGh5gM4zsaBcx2H/wC/bfjeq/cM4MPndLDnffbU6butzjvBnqcjnd4bo
TV1jZpG8tZH9bTe87w7Cv52G2PdZJ+HHXvOUN/2bHhIP55jLseFu0d5BEpc7
B4T/Z0WejvJ7GiAvdUoPz3+P3j/qeCC4ncS1Sp//CT3g08/nk+bMT9Hn+X3V
TO+yMn5+9mx9nvezVvQvV/Rvu/k6lm9knmd+jpxRrevZ9rtR5Q8Y8jqc5Ke5
yhsw5PfBfSdj/7qq/ADb+UujwTj0A5jHaw0vn2cKD3s/PVXegO38o9FgHOvZ
8lkr8eQhxz4U6fPAD8TofSxUR/LbGDrirF/irF+i9tTW9ybFzJ+rws+oygvk
05bXDaYrHegdPX/6c14cy9vy7boffj7HeOL5ZrizyisNj+oapNf0z9LnIa//
iNnXT4b0DIK/xM5ZNbyfNw6zHHdKYvvQ6aDaW/AH/gfYtsclOg78XzHrMefR
AMnD3NQwve/JpwKc3+SV6HzYbzv/Ocr6Oxr2tFQx9A385PdFFLP+lTv0Rxz6
I7oe5gNjPtZjeir0PKHfsD/wx9AnnDewLR85qk/0a/BV0d+lKj+2/b+h+mzL
21qhq0XQthctRR42q7/geTks5zO68fNDszQegf6t8ybs7h6EfME/Ay/3/MmU
Xio/ZMeu9eL15uc551lojLf8M8iXDjn50yHlt53fnVV/gnE7fzqr/gX8p32N
LDeeeR7/yDmW4x9UKr/gn8FfYJwn7C8w+Eti9m433T/OE+eN+MeNh+CfsR7s
tV0fCen5wR8h/oP9Ar+hv7BHsH/ghztu1zPAz8NO/FOs4/w7rPyCP4D82f6s
3vEPtcovO55ca3rTAu1kP7tUHlx6wD/b32Q79jLH2X9I6QEGPeAnxu31aw3s
pR2/Zyq9GAe9Nj9vanwIjPgE/MJ52/oaUgx/Cf3CeQO7/g3P2+e1XeMb6D/i
FeinXZ8L6fOYj3gP78d8yBPzb5u8f5ohd353svAnqtjOd1bL8xPMTc/f9E0O
ptP7o4rx/FkvQB3+PevVxHUaz/L62zQe47/v1vgV52PLX75it77G8d8B1UfI
NzDowfnx+itVPiC/f/9b7OdAR5bfabvUXtLzI7Mp3v70i+s8/50VhshuAP0Z
sv5pkR+p57xdKO+frvxmeZ+n9sa2X9s0nuT4L1f8x6sqL3x+SzQ+g3wgHmNx
yHT0JVfjK1t+ajWe4vi7VuLvIsde1ml+R/lKyl6KN98aFdB4APYc/h3y7Ppj
YC9+6HPlDL+3sULljdeLSjz/D3n/Kn4uDv4q2wz0Jqzqy/o0rsC0j5nT8xdv
M78yv+R86elOzJ/AbrPWY/A5ycev5Eg8dtkcowVq9f3w71coH4B9S1f55/GZ
Ku+8z6ijH9N0HPrkLf/gkZDqDz+/UNabyvQOTOZ4uiDK/u+XS+X5n+h5IL6A
/4I99fYTffsCy+ftz5z4APFlkcTfO8S/NhP6Nunz0D+Sl0HFxqs/hNrvl/Xv
5udv75B1j4l854p+dJX6QqY54e33HcT3eeac98AriO/cfL2a9O3HqRdIXpam
VsvzabzP8StUP1geFhtiT5dkXq/JPz+2e3XGY39Ci2TKxzY11jCf79sl8r5e
+cH838bymV6k+8f+mL/5Tn31MMUjy3tLPDmsyMl3wnJeJ2S+xMfh48azl43F
YdLvLe+eonglbnZE5ZH5uULs3DXD+rZM4xumbznHQ8O6yfllMb+OdBP99OM/
ri9kqX1i/pWp/EEen4uxo91wrjeFGqMqj7DvkG+mb4xp7bmTDsmc32bUOvHb
EeUHMPjB+yp28p2lipmeFOU/7KVtH1Mc+7VL5RcY58v2Ml2fR/6E54HJPB6O
U38ADP9K9ZYp8azv/XaYJZ6/6Jmk8S4w7Okcb/3fJok9Oajyz/uPqLza+UO9
8sM+r8WK+bwX6P6YH7vV3yA+xftw3oPohXdpPAqM+IPqNKmJGh8A2/63SPnr
6dfmttCP9/l3XLqTzxwz0H+cP/vHI7qeFd+1C2s8R/ZzSFwQ9srbfdkc9Dcz
zCbvgUN9ZD8HlT/I97B/N3/k9RdJ/Wyr2tPWlG9LvWPuRtKHWaPAnzSW40TE
67nm12SAEvl8G/P0/W69zM1/2P+VKD9wvtBvxJ+w9/y8Xz8DxjjladV+/RIY
7wtJfg0M/wx6eb2jTrxdqufD81I1/0N+gfgZ+m33b47oOOwhxoHtespatXd4
HzDOB/YM+QLsHc/PVuzmF6hn2PHZEae+UKLxDeIlYKxn77/C6X9WOPFPhT6P
88TzwHY8VOnI71GtD0NfOQ5sFYS/Qv0W+jrME4cm9J8P6Pr9RA+BIR+oV4Df
OC+cr6feN+MTtN7UX/Ib7BfnBwx5xPtQfwY/sR7Oz5bPtYpx3lgP/MT7Ib94
P7Adr5Yq/6GP2B/sgV3Piuj6dj2wSbGtjxLvtrmg/hrzEd9iPjDm433A0Ac7
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
ZcSHwLAP3va79fXzRVufSx3+lzj35Up4Xzdaij9Jc/pvOWzfBuP+er7yH/mv
fd9xpvAjS/br3n+YKuNbZHyyUz9MlXzgG7WvuI9hyftC3G/LdtafqfET0zvb
6V/6GPTw88tk/FXtjwLb/co9jr3NcOxthtpPxA/AsK+4zw37B3uH+Th/zt/C
HF+M9u+bAIMeu14YcfoREdVHPA/7D3sKDHtqn+8xR98qHPtV5TxfpfEb5AcY
9gzyCX8CeQQG/aiX2fai2umXlGh8BX2BvDP//e/NmH/b1f4zfdsUwz/AvqPe
BPuP+gEw/APkDfJux+8zVb4g78CQPzu/War2BvEZ0fc86jURrj8v6hq07K/6
h8XO/YUU576m39/DuH2/b7Hef4F8QH6Acd8I5wt6oJ+87Fnj1od5vm//+Dm/
fo37IcCo7xB5D/v7h/yEJH+24/U6x1/4mOmNqr8Apnr8mJPaPyF57n2S6U0s
5XroxDDj/8k0v4gt93FjkuRrB6ke3S5N/HtxBecXv7/I+39dvh/ZdJH9z1c1
9PyfYvG9R19DqI7i2ydm+fU4zq+/k3rsGrIHIzvcw+97TPqfr2Qyn8anyX2d
/XJfZzPFlxMKhZ8fV/J9rauCz1QbL3yqvC76m1Qj9dsqqd8e4vrQiXztz1M8
M0jsyaPFwo/jwo8wxcNTfij10T+EKf+If0HqQVtKJV4/I/F6Ba//Z8HzKvh8
l8r93iWVHP/fxvdZ4o9XSv/9KYnH703U+2wUf7UKqH2l9z/s9ycoXq85rf0z
2tfr1XqfkO7nvNxR7R/lGxW+PaO/P3ne/n6o+UW9v0T1i4EXef375d596gbV
Z6qn9EhWeaR6bHoGy9v6jdyv+Va+15hSI/W7iNb7uX9Tzuf7YT7Hv3GCv89j
fRx8nJ9/IMz55/2ntL/H9bdrUn/7Qupr0p/4KEv6UXKvPaNY6n8lej+G+BeW
+xlhuV+4Ml7OYwf3id5N4vOYfJDizHEf+vcvaN6x02pv+L7KHq1PUD78isQh
k7M4vv3ZJa3Xc7x7UvuZFA+0OK72hdtS53i8tpLo75t4nu73TU+sYn5PusT2
ZmId5fO/jflXb/7+l0u5vpAv+p5VSt+XTb52kvP1K6VUn/+PW/59Te6PyXc2
A+T7746Xef34KH+P8SPpJzwS5ftSq/k7p9TUQpbXoaIvXxVzPXGE2KPkMN9f
G8v9vE0PlZo/ePWdX4n+TS2leC/S9gzlUw/FVbC9/sEl3v/DdSLv5dp/o3nV
l7QfRnbm7xc1n2N7m6nxrxdfbbvm+1vv97sv+t9r0Prp57Tfwv2PKv0eh+z7
m2eM1Z9oPMH8OV9C9ubjRsn/9u2k8596uovYt31cX17v9zfGxsTt8yN+f4Pq
38/63xeUevX2dSJvT1bw/byD0l94rlL81+daPyT93ij7W1JB9uJSmPV9YnUl
938iMv4Q63+X+/z7qd5+Xpvt368ieXxV4qusEPuDu4TepEN0nmaW/H8Bi3OI
f/HxAY0Pvf5Tz4SA1kuSPHprG/S+HvUPeh80yKdYvyN6v4r7gWHN96ke98RF
zcfJnj6HflO+9Luieh+P7HlGieZz3vks+drPv6ifUernV970v7WX+1TBhWJf
Wki97mv7/k+XAjPPU6BmDdofZn8m98Ef22aGevI2Qu4DvHBAv5di+7de4w/G
IZKHW0OkPjggU79/4vvaubyfAY329x/xXdheRTOIXxlxydzPeqmW8qkdPQJ6
v5P6SfFler+V88d5ch4jWZ4fP8H2MXUe918+lf7EY1tYfi5IvXxsvnPfZhvZ
82iKH+9Q/y9Ur/ex2J59K/2HVOZHqAfL+7ec7/xzwVna39OxOI/7E9n6PQF/
/3WY6Xsjg+uhSztLfSqD48m2LZi+ho0Uz9z/770Y38iV85X+YXA19Y+aBnVg
/t27U+rDPaQ+7P9/Iuz3jnK965TfD6T85jcJQdwnJnsSEn39z2Ocz1a11vj7
j1SP7q3xNdm3Ee35/ePTJX78SM7jDdbnh5KDdJ9iY9T08h44KPXH3xU49fip
Tnw+TuvBnAfL93UdpJ70xEymf5F8Vzqd89MA7stejpr/A8Iujgg=
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAnYT8UXx++duQqJkn3Lkn0p+5J9SWQXqWwRQqGVVBItsqSQSvVHu0pp
RYuIRCulfbO0qlRSWlT/83nP9/e8nuedZ+bOnTlz7syZs//eKiMm9psQkiTZ
d0SSRKtfsofJVk7LkqRjmiQdrNxq/S2tbmFlobVrWF3UyvvWPtZKISuFrfxu
836zstHa7e29gUgKWmmTel3MyunW7m/lNCub7PkJK7dZaWiLd7a+TlbqW6ln
5UPrn2z1r1bvtnKM4LHeIVvnbyuvWrusYPN+s5WnrSyxcqnN/dnqz6ycYu0u
VmpbKS58j7JSTvP4jpr2rqSVj61dXn2MrWjlOCslrFSyNStaKWilgt7z7lPh
UMbKLtXVrDS3UttKHSu1Ep8DvOrCm/VrqC6vsbyvBD7qq6D59B1v5UvBPsnK
iYZvAytf8B22h98ZXlM4H6uPtnK+9Q+05wFWelo5Qbixdqvgzw2tNBZO4NJC
69W10lR4gHsz1eDYRGN51yhxOMxvqXn1rLQTbN63Ul99cLZ1a1v5BnjBx7S1
MsjwP8NKa8OzveaBVwfVrNlRNXh1Fk7scRfV4H6KanDpqpr1ewkWMHqr7mSl
avD1u1s5TbiAew/V4NJTNfP/Mfz+svpPvtvmVrOy3Np9BA+8zjgMXj/hB179
VYPX/fat/wLPSgODUd/KPdYeLPyA11fwmD9I8MDrTNXgdZZqvu9s1cyvFxyH
gcKrqfZryGGw2/HtwfEaqbHgXsP6MvvOaKWKtctbuc/6x1sZamWYlXLBx4+w
cq7mgeNYfQPrjFIf+I4RruB4nmrGjdZ73o3TPNboYPCPslI4+HNf7eWpqa85
wcpErQ/uk1SDy4WqWf8X+ICVB6x9kfpY8xLhBC4Xq4/nLVbWWFlq5VK955sm
Cz/24DL18dxW+IFbKzvTutwzK1cchuOVqsHxKtXgOE01eF2tGly+szLVyvVW
blAbeDOEE+vPVA1ey2zdpVamWPty+K2VvdaeLnh86zWqmT9L8MBrvuACb7bw
A685qsFrrmrgzVMNvBaSA8iOGwWP+ZusY6OVa619n405yspr1r7H6retfpn1
bd++tuftVm4SPPDI8UT4CXJmUeKyBFmEXDkycflRUP39JSuQC8gN5An8fau1
t6QuY1LDZbut1ylzGYNMKqo58HlkAPIBuQE/h+/WFB4X29yLosuVghoLr+9g
sPZZ/VjiMgYZUDpxGXJ34rz6WMHim5AVFfTMGhX1jCyhXUJw4c1ltE45PXe2
tQ5Y/WzishAZU1Xj4L3VNK66npFRyLFKWqOWvucuw+0SK/uTfD7YS+Pg+fB2
5EQd4T9AsgWejpzhTtQTLPhJkyRfNvCMTDlJ+IAHPLyh8Gqs5xqax/MbBvP1
1O/bETa3gJUXUsejueAyHz7cVnjAz1sIj1Z6Pqg28mWindWRBmdf6vPhn530
fS0EFzzaC25OxrRP8mVMB31PJz0jr5BVbZJ8edM5yZc3XZJ8ecMzMgG50i1x
OdFV+F1hOB1KXH7wPfBzePRB6//dytYkX/acpjXge32EE2fVU3j10flV1LnV
SvJlVQ/h1E/zc7KH53/UBqczDMerbN2QuvxBZgwQTvDzgcJjkJ6vtHFJ6nIr
J4cGJfmyJyeLztK7aqnzwKnCdbDGgRM8MyeLhugd95Z7wr1BNiF/kDVrE9+b
5YILrx4l/OD5I4TfuXqG3yMnLhB+o/QOvMZoPnIFXj4syZdJY4QLfH2scByv
58HqY1yOp8NDhxm9lZSsmqC+qYIFv704yZdJk4TLRXrOya2cHKOeoDUu1Xxk
Cft4uda/TO/Q7yYLvxGGQ6ngeh+4Tta40Vr/oiRf9oA3vBm+P1Ow4LvXJPly
aJrmTddzTt7MSPJlCe+QOTO1HnCRAcgWZA8y7DrtB33IMfgrfBRetzy63FqR
5MvCq1RmC1ZO9iCLNkeXKw9rfWTGPOE0X8/T1Tc3yZdhwBpr/PMz25sLbB9X
WD0JurSyyuC9ZPWjNuZPq1tZeYf9t/4xVlZae5X1XWTlaCvXWDnGSjErfa30
kHyaaDAfxFaycrGVY618ZP3Frf9YK++nTtvIJuyOh9DJDafbrX5KPLmElRlW
SlspZeVmzshKu+jyYon27RSbN9Xe/2Ltsga7kJW7oG0b96r1b7Zyu7Vvs9LM
Sj977iWZlKZ+l9AzS9i846x8mDovhbfDP2+yOfOstLDym737MfV7t9DGFrHy
PPRgfWWs7LT2c4IH33jB3n9l/e8hp1N/h964A3sJ3p74+sCDN26yMRs5B2t/
Ye+XWLnDygHsPivrgM0ZJU4ni+xdMSsvWnsn323lTitjbczpti9vQWfYetau
bvWb9rxBc4ukrndw1q9E74eWVtr8WfZuupWfrGxLnSZetTGFrS6Uuv3LPNgf
djF0gc5zrc0dZGW/9bW2NYvr7F+Gr1rpYX1/Wn0/+rOVOTZptmxd6AfdoYDo
4gnRxo3WP8bKyVZ2WRkKXonzFO4QOmEHg9HeyivW7md13+i27gKrh6VuB6+3
9jRrH5G6/o6+fo7196FO3a7mzNfo3KET9IvK7I+NmWalZ+b6/3M63/+gcysP
WNlj40cit3hnz8dLNsy0UoE1rVSSTOPMsXHW6tyPsfYfqdPXFMPzQ3v+ztqV
JYtYj3uGL4H7BW+DBtBv0eehI76lpGgBO/d7a7+H3LX3vQ1mr+jfvsPebUt8
/hPR7zx0cJaNPTd1Xfm9xPVTaKKmvd9j7z5JnUfRhx47ABqTft8u83PBh/Gy
eAl6LXcXnwR3rZON7Rj9LMdbGa5zmWp9Hxv871O/35t1t9tnvp/YH58Gh/e6
laI2ZjC2fOq4vCa63Rb8/j+T+D3eovOE32wSTfW0uT2sPGJ9XTP/Tu7Exwbr
ldTv30jrn2v1bCuro+8Ra4+Lzge5UxN1l1ZoH7epzf3bob7ONnZ3cNy/hg9Y
+dH6nwVHK4sNxjyrL7FSOji897Tnz9u7e3UODdEhoScrda1UtvIDtJ267+mD
xHnrh7o7hdSGv7az921T18VPUo2O/ILh9ryVu6PruujG6LdP2fP/ouvDC1P3
AX2SuF7/keCfEt0nxfPniev66PndovtfdtKXur+J9+eoZgzvvtCdqqs2vLZn
cN/WHuEMTOyRhqnjvcvajVSjSzMOvb+qxuwW/ANaA/i9U7fFsIlGCDbjm6Tu
M0IvrxOcn+N7uczan1v7RSvfWrux1V9Z/yirv09cdjdNfT7jl9uYZVZustI8
dRmPTvKS7cMFVh5NfQ5yHx4FjL2Cw/hmqb/rFdxG5T28lrOFdbB+I+EK7UE7
+BurWfsL0etjOps8npm6rOV5UeoyGliXG/zXUrf/Lre5d1p9nPb4Z+0zdxH5
iS4y0DbsapuzO/U7BS2UtHJJdNuPcTm/IfyZu3hQfI1z+FVnMdv6T7fyr737
28pfqdsl5xuM8dH3+JDe/QEf4A6kbgPdaO2+es88bAbshTbW1zK4L+ZUw/MR
qx/mu61vZep7fpnBvjT6nEVW17R3Bay/nNaHt0+ObnecmvhYbAD0/4o25j/1
Vw/efzo0H1zX/09zWQOb5Vnx9FQ8Gl6N7AfHFtLXsQ04UOBcpbGMaR98Dcaw
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
C/gl+hx8YNAyd5L7+H/tfOJj
            "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu9972UURWMoyWcJe1NkNspCFgobmSxMKVmYshJbWVjYjIWN
ZqVQ/gU7iQwSmYRoUkPkczFR+J2Oxa/7PM85733Pfe/blEgOTQfGmBbwcO6M
aUasEK5BOfqeLI4ehCzM4sPWmDvWT3D09JJvk1Wjj8n68RMwD6fkP2Td1Jbw
w3CF/+Z9l+g5dA09OdZHKKKvj3wKKrz2Sb88V+b1HbL3ALSiu2Ccegpfi75F
j6AXYJJ9e/C77JFnLaZuYTHQGTvQB+Sr1KOs3use8qzMsE9Wj19Gx+j5wL/B
DH7T6tkL+B2r30C+XRtsBfoNG7zOkP+fIYp/QqfJYqw3UEnWiA9Bp9eL2EPH
qX05nVFmk+yC9RWS6BOjZ4nAaKBnKkGHvM5aoKcK/e501jHqZ+gXeKZ+BBmn
M8ksG/hSdBadQyd4Joy/xv/i66z+C3InchfyT7SjH8gygZ5Z7uIQv270Tv4A
az5KNw==
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/GvRY5sjt0iKtaVu5REB5WIsmyE1DpyLialmEw3WtkcMSPj
SK5xTaXERjRNTQctkvssMkohK3ckPd7TH899vd6v9/vz+d6/zejzTKehRZIk
me3P+pQkSeXrFU2SQ+quxZLkNVkb+qK6Gp2s7knzzW3lW/Hv6g1HOlbivPX5
tArN0R/Ej8aT/DRrOtF1sV7/X3Uj9WU61syDfIr8Pf2G9Kjscdko/UPq69V7
+X14FZl639BV5p/ir/CLcR/f1+w5+Sb6j7UD5RvovXpjZP3pNllDelh+NW7h
S9NGuAm3qqvStvR9a+bH+SMPe+Vl5b/ScvSSY70Ux6Ll1TVQAT/pV6ZtrMnB
QxiDLvhRby2tr/85vayuiVrYoF5gr456GfbNill1zahxM5pjo3yj2V78AToT
c1BLvUOvOq2Du1AXf8gy0T7W2a+HbDvdGfeX30VPojS/0HGHxjnza/kFGKY+
ob+aVqI/0M34APXMfUg/xnGk6feTreBP4lr1SnoGI7DafkP0pzh+dtxvZMu6
ow5KYbLe25iEiZiA8XgLeRiHNzEWuehvTS97d8S4eKftXwbXYbP9r6JFkI4v
ze8y05pvEdeCivwmegc9To9hrj2nm+uOXLTDUXlxM8VQBQfjXps7ptc5vh3+
gOxG/meaRn+jXfXHo1s8X3xk7qw8A43NVIv3EKkogxayLGSjVHwfKIkSWK//
fbyr/Dx7zcVnWGbP5+M70TuDovoX6J1xDq65NT/STDl6Vn2N/Eh8A3Q3vYFm
Wt8v7g1GIyuen/yUflN6mv6FurhdPcs+7WiafTvLVqibqRP8rb6IJnwBPWhm
BpagS7x/9GX7T8AjqB33ErfFd0T34FN5PrbZch3toPdYfMN6lWIPWogr8R5j
kT33Y7BeffURfh6etfZP9SpaMe4fLcCSOK7ZpfFM8Asq6PeVLecLka7+hJ7G
EKzBw/H+2ncNTqkHqifxJ/gB/DC+rHVP00HqLc7/cDwb9Uj6Qlyz/Av6HXpj
q97dsqn0OaRiefyexfHjmlCcH0BHxfdi9h3rHqVf23+L3gV1D703cH88B9k0
0oD+Lusme93MPfE7pd7N78EraC/7Ku6D+d7x/PiFaMn3NFsoL6CX4hziN4d/
QK8B8vg+dJn8Cfqt2ao0R54b3yYupvz//+Y/lOrSPg==
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1: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
ru4aJYPQ8HrjnRIMSLqq13HiLhUGnj7V32/eAjvkcqY3PCkHH9OYBR36OCDZ
+g0Ne5BhTFx1WiGqHNqGTSvKDuFA6AdHa73zrDxcZsrkckS8tIVbZf7amfjX
d7Wn/HyI/Ii1+ZHAWzO4PNulJw2oXo4nK5iun1Uv8icXW//cz4KgYI3m1ZUz
eVi/aPzY3UMoP9UFPcl1fZjnGPmXawlmaB33hgeJgxZ0uM2pl1x1FA/CJp77
LRAeHnDdhYXwoPzo4AaE/37uX/wglr/G6stYONY857oKOro0KGA3v92VIklC
+uUou/XnblhNk3FTvkWBZh67cglA/DYRt5dyuxt03aQpZ1cPg8gbmqf0wwFw
LbEc4UR5t62JYhC3dRiqn6Xyz6sYAAIr/G5xMvb7Aiz8T/yfN1T63j4X1VG8
dvuFZ9i8px6xMNJXvhzid6v4sm3HAV9xSc0yE+z33Vj9HQvHWj/WOdtc9QaW
jsXijY3vgq8sSGqEgiNntIJF2uBFHN+e7ORZOuqLnhbejAX6/LerPfr7YPrg
slV30XpKwr6tKUPrueCcEXIWrYci8jbzS3cFaC5XEC9JRTw59DRQqpAMvNU8
W58KlMN6E2WX6g04yOL88v283izea5x8QkG8HbV/2UTN5z44ymNwqPZrOUhx
a2irn8RBZkLI4qbLZDh7sGbfBAXtS9hC8Xc2aH4hA5NtQWTQslgOB6bKoHKV
j1gm8i9T/C/2bjk063yyP/9r/wlUd0tiPp5FOj/nqN9OX3o7NJ/SiS6idsIx
Aa9BNj0K6NYlkz5Xd0CIZt0KQ/kukMAVXndbgP1dW9ZJAb4L7J1wWrgEH3Gg
C/jHyIyQSTJMyQsqrXCnwc4k1/ZXvSTIsdrB3GXXCVXXW1d6Dw0BHg9fiaFU
EDl5JUA7rgUUhHQ3HzRhgYVOzjr1nD5YOi3EJiXWCZVKh4/kOrGg/OVLXq2e
PvjK/Tr6yI1OzPt7PwKdA4dOsaCB+vO7MerHr3WUDvbd6QThA/ZX5HyGIRzn
Esl7ZRAib7S0HI4mQ28e3xn+oz1A3K5QLubZDe5iSxUa2RA/P1G8lufLBOsK
NpG6MDr85P1pGlGJh6c/nja45bFgXuLDigex/VCzLmHeRdNuyFJi6YX64KHY
h92YadQBZbml4a8QH6/e53ctHuE3hy2KPyM8c02LTC7CrwpBqR0dD4n0ibc4
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
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlXAl0ldW1ZpAhkTkMQiDcID5BkckHfbZPz/V1UfqqrSyXRSur4mMBrfC0
ikqloIJjkdZCQGiLyBRABCRMNwwBMkMIITchNyHjBRJmwhSkWBHe/ffe3/7f
Oc1irawv5z/n32efPe/zkzzhd09PatGsWbOpdzVr5v1+/4dfxv7Vm5T+/x37
t8owbnIwxrc641tN7rOz8p6d9b0z3jJo43pTHXo59m+PzgfGfHu8ZRCYlklp
qziPnm+vOO3mJ5v/2L9z0J4PerMderMderMderP1fcB4H/DD9NM5aM9PUHz0
8T5lj/fp7ozXGyKvOl/pAQY99njLIDDoAQY9wKDHnp+gGPQA30vr3aP49TFt
3hzTJtGZX2+q6A+FSi8w6LXHWwaBQS8w6AUGvfb8BMWgFxj0AoNe4Bxav4/i
hPFXu42/2tdZv97cvuP9FOt+gLEfe7xlEBj7AcZ+gLEfe36CYuwHGPsBxn6A
sR9g7Mdev94sIMJKdT/A2I893jIIjP0AYz/A2I89P0Ex9gOM/QBjP8DYDzD2
49LP65Qp/cCgHxj0A4N+YNBvz09QDPqBQT8w6AcG/cCg316/yewg/SlX+oFB
PzDoBwb9wKDfnp+gGPQDg35g0A8M+oFBv71+kxlNBqtS6QcG/cCgHxj0A4N+
e36CYtAPDPqBQT8w6AcG/fb6TaaSDZjSDwz6gUE/MOgHBv32/ATFoB8Y9AOD
fmDQDwz67fWbzFRyYLVKPzDoBwb9wKAfGPTb8xMUg35g0A8M+oFBPzDot9dv
Ms3o57jSDwz6gUE/MOgHBv32/ATFoB8Y9AODfmDQDwz67fclB2ti27l9Jyrv
OyrxQYpiji82CP03FWOcjzNE+1kyuHnwFQ++s8GUEb2tgxjH8/z+TPMG0Xu3
jncn+joGMd42Nvrm7DKmZ0auvLeLjs8kBvYIMl255sYnm2/G5/cM/q/34Be5
JpEI6B38KS1QIHKVpJjPq1H8+VHFND8UMZMmT5689s8BthfrIjrO/qjCvOCR
+1kgCIzx+URQlY4DY7wf0Vuj4y5mftQ58VyKcz6rHLzViSd9/t9Hw1uc89zj
xFc+//nvu8yKDudXdHi+VONFWz4zVT7pvEP7VR5xHuA/L5+v8ujy3/Z/jeo/
YuyffGh5gM4zsaBcx2H/wC/bfjeq/cM4MPndLDnffbU6butzjvBnqcjnd4bo
TV1jZpG8tZH9bTe87w7Cv52G2PdZJ+HHXvOUN/2bHhIP55jLseFu0d5BEpc7
B4T/Z0WejvJ7GiAvdUoPz3+P3j/qeCC4ncS1Sp//CT3g08/nk+bMT9Hn+X3V
TO+yMn5+9mx9nvezVvQvV/Rvu/k6lm9knmd+jpxRrevZ9rtR5Q8Y8jqc5Ke5
yhsw5PfBfSdj/7qq/ADb+UujwTj0A5jHaw0vn2cKD3s/PVXegO38o9FgHOvZ
8lkr8eQhxz4U6fPAD8TofSxUR/LbGDrirF/irF+i9tTW9ybFzJ+rws+oygvk
05bXDaYrHegdPX/6c14cy9vy7boffj7HeOL5ZrizyisNj+oapNf0z9LnIa//
iNnXT4b0DIK/xM5ZNbyfNw6zHHdKYvvQ6aDaW/AH/gfYtsclOg78XzHrMefR
AMnD3NQwve/JpwKc3+SV6HzYbzv/Ocr6Oxr2tFQx9A385PdFFLP+lTv0Rxz6
I7oe5gNjPtZjeir0PKHfsD/wx9AnnDewLR85qk/0a/BV0d+lKj+2/b+h+mzL
21qhq0XQthctRR42q7/geTks5zO68fNDszQegf6t8ybs7h6EfME/Ay/3/MmU
Xio/ZMeu9eL15uc551lojLf8M8iXDjn50yHlt53fnVV/gnE7fzqr/gX8p32N
LDeeeR7/yDmW4x9UKr/gn8FfYJwn7C8w+Eti9m433T/OE+eN+MeNh+CfsR7s
tV0fCen5wR8h/oP9Ar+hv7BHsH/ghztu1zPAz8NO/FOs4/w7rPyCP4D82f6s
3vEPtcovO55ca3rTAu1kP7tUHlx6wD/b32Q79jLH2X9I6QEGPeAnxu31aw3s
pR2/Zyq9GAe9Nj9vanwIjPgE/MJ52/oaUgx/Cf3CeQO7/g3P2+e1XeMb6D/i
FeinXZ8L6fOYj3gP78d8yBPzb5u8f5ohd353svAnqtjOd1bL8xPMTc/f9E0O
ptP7o4rx/FkvQB3+PevVxHUaz/L62zQe47/v1vgV52PLX75it77G8d8B1UfI
NzDowfnx+itVPiC/f/9b7OdAR5bfabvUXtLzI7Mp3v70i+s8/50VhshuAP0Z
sv5pkR+p57xdKO+frvxmeZ+n9sa2X9s0nuT4L1f8x6sqL3x+SzQ+g3wgHmNx
yHT0JVfjK1t+ajWe4vi7VuLvIsde1ml+R/lKyl6KN98aFdB4APYc/h3y7Ppj
YC9+6HPlDL+3sULljdeLSjz/D3n/Kn4uDv4q2wz0Jqzqy/o0rsC0j5nT8xdv
M78yv+R86elOzJ/AbrPWY/A5ycev5Eg8dtkcowVq9f3w71coH4B9S1f55/GZ
Ku+8z6ijH9N0HPrkLf/gkZDqDz+/UNabyvQOTOZ4uiDK/u+XS+X5n+h5IL6A
/4I99fYTffsCy+ftz5z4APFlkcTfO8S/NhP6Nunz0D+Sl0HFxqs/hNrvl/Xv
5udv75B1j4l854p+dJX6QqY54e33HcT3eeac98AriO/cfL2a9O3HqRdIXpam
VsvzabzP8StUP1geFhtiT5dkXq/JPz+2e3XGY39Ci2TKxzY11jCf79sl8r5e
+cH838bymV6k+8f+mL/5Tn31MMUjy3tLPDmsyMl3wnJeJ2S+xMfh48azl43F
YdLvLe+eonglbnZE5ZH5uULs3DXD+rZM4xumbznHQ8O6yfllMb+OdBP99OM/
ri9kqX1i/pWp/EEen4uxo91wrjeFGqMqj7DvkG+mb4xp7bmTDsmc32bUOvHb
EeUHMPjB+yp28p2lipmeFOU/7KVtH1Mc+7VL5RcY58v2Ml2fR/6E54HJPB6O
U38ADP9K9ZYp8azv/XaYJZ6/6Jmk8S4w7Okcb/3fJok9Oajyz/uPqLza+UO9
8sM+r8WK+bwX6P6YH7vV3yA+xftw3oPohXdpPAqM+IPqNKmJGh8A2/63SPnr
6dfmttCP9/l3XLqTzxwz0H+cP/vHI7qeFd+1C2s8R/ZzSFwQ9srbfdkc9Dcz
zCbvgUN9ZD8HlT/I97B/N3/k9RdJ/Wyr2tPWlG9LvWPuRtKHWaPAnzSW40TE
67nm12SAEvl8G/P0/W69zM1/2P+VKD9wvtBvxJ+w9/y8Xz8DxjjladV+/RIY
7wtJfg0M/wx6eb2jTrxdqufD81I1/0N+gfgZ+m33b47oOOwhxoHtespatXd4
HzDOB/YM+QLsHc/PVuzmF6hn2PHZEae+UKLxDeIlYKxn77/C6X9WOPFPhT6P
88TzwHY8VOnI71GtD0NfOQ5sFYS/Qv0W+jrME4cm9J8P6Pr9RA+BIR+oV4Df
OC+cr6feN+MTtN7UX/Ib7BfnBwx5xPtQfwY/sR7Oz5bPtYpx3lgP/MT7Ib94
P7Adr5Yq/6GP2B/sgV3Piuj6dj2wSbGtjxLvtrmg/hrzEd9iPjDm433A0Ac7
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
ZcSHwLAP3va79fXzRVufSx3+lzj35Up4Xzdaij9Jc/pvOWzfBuP+er7yH/mv
fd9xpvAjS/br3n+YKuNbZHyyUz9MlXzgG7WvuI9hyftC3G/LdtafqfET0zvb
6V/6GPTw88tk/FXtjwLb/co9jr3NcOxthtpPxA/AsK+4zw37B3uH+Th/zt/C
HF+M9u+bAIMeu14YcfoREdVHPA/7D3sKDHtqn+8xR98qHPtV5TxfpfEb5AcY
9gzyCX8CeQQG/aiX2fai2umXlGh8BX2BvDP//e/NmH/b1f4zfdsUwz/AvqPe
BPuP+gEw/APkDfJux+8zVb4g78CQPzu/War2BvEZ0fc86jURrj8v6hq07K/6
h8XO/YUU576m39/DuH2/b7Hef4F8QH6Acd8I5wt6oJ+87Fnj1od5vm//+Dm/
fo37IcCo7xB5D/v7h/yEJH+24/U6x1/4mOmNqr8Apnr8mJPaPyF57n2S6U0s
5XroxDDj/8k0v4gt93FjkuRrB6ke3S5N/HtxBecXv7/I+39dvh/ZdJH9z1c1
9PyfYvG9R19DqI7i2ydm+fU4zq+/k3rsGrIHIzvcw+97TPqfr2Qyn8anyX2d
/XJfZzPFlxMKhZ8fV/J9rauCz1QbL3yqvC76m1Qj9dsqqd8e4vrQiXztz1M8
M0jsyaPFwo/jwo8wxcNTfij10T+EKf+If0HqQVtKJV4/I/F6Ba//Z8HzKvh8
l8r93iWVHP/fxvdZ4o9XSv/9KYnH703U+2wUf7UKqH2l9z/s9ycoXq85rf0z
2tfr1XqfkO7nvNxR7R/lGxW+PaO/P3ne/n6o+UW9v0T1i4EXef375d596gbV
Z6qn9EhWeaR6bHoGy9v6jdyv+Va+15hSI/W7iNb7uX9Tzuf7YT7Hv3GCv89j
fRx8nJ9/IMz55/2ntL/H9bdrUn/7Qupr0p/4KEv6UXKvPaNY6n8lej+G+BeW
+xlhuV+4Ml7OYwf3id5N4vOYfJDizHEf+vcvaN6x02pv+L7KHq1PUD78isQh
k7M4vv3ZJa3Xc7x7UvuZFA+0OK72hdtS53i8tpLo75t4nu73TU+sYn5PusT2
ZmId5fO/jflXb/7+l0u5vpAv+p5VSt+XTb52kvP1K6VUn/+PW/59Te6PyXc2
A+T7746Xef34KH+P8SPpJzwS5ftSq/k7p9TUQpbXoaIvXxVzPXGE2KPkMN9f
G8v9vE0PlZo/ePWdX4n+TS2leC/S9gzlUw/FVbC9/sEl3v/DdSLv5dp/o3nV
l7QfRnbm7xc1n2N7m6nxrxdfbbvm+1vv97sv+t9r0Prp57Tfwv2PKv0eh+z7
m2eM1Z9oPMH8OV9C9ubjRsn/9u2k8596uovYt31cX17v9zfGxsTt8yN+f4Pq
38/63xeUevX2dSJvT1bw/byD0l94rlL81+daPyT93ij7W1JB9uJSmPV9YnUl
938iMv4Q63+X+/z7qd5+Xpvt368ieXxV4qusEPuDu4TepEN0nmaW/H8Bi3OI
f/HxAY0Pvf5Tz4SA1kuSPHprG/S+HvUPeh80yKdYvyN6v4r7gWHN96ke98RF
zcfJnj6HflO+9Luieh+P7HlGieZz3vks+drPv6ifUernV970v7WX+1TBhWJf
Wki97mv7/k+XAjPPU6BmDdofZn8m98Ef22aGevI2Qu4DvHBAv5di+7de4w/G
IZKHW0OkPjggU79/4vvaubyfAY329x/xXdheRTOIXxlxydzPeqmW8qkdPQJ6
v5P6SfFler+V88d5ch4jWZ4fP8H2MXUe918+lf7EY1tYfi5IvXxsvnPfZhvZ
82iKH+9Q/y9Ur/ex2J59K/2HVOZHqAfL+7ec7/xzwVna39OxOI/7E9n6PQF/
/3WY6Xsjg+uhSztLfSqD48m2LZi+ho0Uz9z/770Y38iV85X+YXA19Y+aBnVg
/t27U+rDPaQ+7P9/Iuz3jnK965TfD6T85jcJQdwnJnsSEn39z2Ocz1a11vj7
j1SP7q3xNdm3Ee35/ePTJX78SM7jDdbnh5KDdJ9iY9T08h44KPXH3xU49fip
Tnw+TuvBnAfL93UdpJ70xEymf5F8Vzqd89MA7stejpr/A8Iujgg=
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAnYT8UXx++duQqJkn3Lkn0p+5J9SWQXqWwRQqGVVBItsqSQSvVHu0pp
RYuIRCulfbO0qlRSWlT/83nP9/e8nuedZ+bOnTlz7syZs//eKiMm9psQkiTZ
d0SSRKtfsofJVk7LkqRjmiQdrNxq/S2tbmFlobVrWF3UyvvWPtZKISuFrfxu
836zstHa7e29gUgKWmmTel3MyunW7m/lNCub7PkJK7dZaWiLd7a+TlbqW6ln
5UPrn2z1r1bvtnKM4LHeIVvnbyuvWrusYPN+s5WnrSyxcqnN/dnqz6ycYu0u
VmpbKS58j7JSTvP4jpr2rqSVj61dXn2MrWjlOCslrFSyNStaKWilgt7z7lPh
UMbKLtXVrDS3UttKHSu1Ep8DvOrCm/VrqC6vsbyvBD7qq6D59B1v5UvBPsnK
iYZvAytf8B22h98ZXlM4H6uPtnK+9Q+05wFWelo5Qbixdqvgzw2tNBZO4NJC
69W10lR4gHsz1eDYRGN51yhxOMxvqXn1rLQTbN63Ul99cLZ1a1v5BnjBx7S1
MsjwP8NKa8OzveaBVwfVrNlRNXh1Fk7scRfV4H6KanDpqpr1ewkWMHqr7mSl
avD1u1s5TbiAew/V4NJTNfP/Mfz+svpPvtvmVrOy3Np9BA+8zjgMXj/hB179
VYPX/fat/wLPSgODUd/KPdYeLPyA11fwmD9I8MDrTNXgdZZqvu9s1cyvFxyH
gcKrqfZryGGw2/HtwfEaqbHgXsP6MvvOaKWKtctbuc/6x1sZamWYlXLBx4+w
cq7mgeNYfQPrjFIf+I4RruB4nmrGjdZ73o3TPNboYPCPslI4+HNf7eWpqa85
wcpErQ/uk1SDy4WqWf8X+ICVB6x9kfpY8xLhBC4Xq4/nLVbWWFlq5VK955sm
Cz/24DL18dxW+IFbKzvTutwzK1cchuOVqsHxKtXgOE01eF2tGly+szLVyvVW
blAbeDOEE+vPVA1ey2zdpVamWPty+K2VvdaeLnh86zWqmT9L8MBrvuACb7bw
A685qsFrrmrgzVMNvBaSA8iOGwWP+ZusY6OVa619n405yspr1r7H6retfpn1
bd++tuftVm4SPPDI8UT4CXJmUeKyBFmEXDkycflRUP39JSuQC8gN5An8fau1
t6QuY1LDZbut1ylzGYNMKqo58HlkAPIBuQE/h+/WFB4X29yLosuVghoLr+9g
sPZZ/VjiMgYZUDpxGXJ34rz6WMHim5AVFfTMGhX1jCyhXUJw4c1ltE45PXe2
tQ5Y/WzishAZU1Xj4L3VNK66npFRyLFKWqOWvucuw+0SK/uTfD7YS+Pg+fB2
5EQd4T9AsgWejpzhTtQTLPhJkyRfNvCMTDlJ+IAHPLyh8Gqs5xqax/MbBvP1
1O/bETa3gJUXUsejueAyHz7cVnjAz1sIj1Z6Pqg28mWindWRBmdf6vPhn530
fS0EFzzaC25OxrRP8mVMB31PJz0jr5BVbZJ8edM5yZc3XZJ8ecMzMgG50i1x
OdFV+F1hOB1KXH7wPfBzePRB6//dytYkX/acpjXge32EE2fVU3j10flV1LnV
SvJlVQ/h1E/zc7KH53/UBqczDMerbN2QuvxBZgwQTvDzgcJjkJ6vtHFJ6nIr
J4cGJfmyJyeLztK7aqnzwKnCdbDGgRM8MyeLhugd95Z7wr1BNiF/kDVrE9+b
5YILrx4l/OD5I4TfuXqG3yMnLhB+o/QOvMZoPnIFXj4syZdJY4QLfH2scByv
58HqY1yOp8NDhxm9lZSsmqC+qYIFv704yZdJk4TLRXrOya2cHKOeoDUu1Xxk
Cft4uda/TO/Q7yYLvxGGQ6ngeh+4Tta40Vr/oiRf9oA3vBm+P1Ow4LvXJPly
aJrmTddzTt7MSPJlCe+QOTO1HnCRAcgWZA8y7DrtB33IMfgrfBRetzy63FqR
5MvCq1RmC1ZO9iCLNkeXKw9rfWTGPOE0X8/T1Tc3yZdhwBpr/PMz25sLbB9X
WD0JurSyyuC9ZPWjNuZPq1tZeYf9t/4xVlZae5X1XWTlaCvXWDnGSjErfa30
kHyaaDAfxFaycrGVY618ZP3Frf9YK++nTtvIJuyOh9DJDafbrX5KPLmElRlW
SlspZeVmzshKu+jyYon27RSbN9Xe/2Ltsga7kJW7oG0b96r1b7Zyu7Vvs9LM
Sj977iWZlKZ+l9AzS9i846x8mDovhbfDP2+yOfOstLDym737MfV7t9DGFrHy
PPRgfWWs7LT2c4IH33jB3n9l/e8hp1N/h964A3sJ3p74+sCDN26yMRs5B2t/
Ye+XWLnDygHsPivrgM0ZJU4ni+xdMSsvWnsn323lTitjbczpti9vQWfYetau
bvWb9rxBc4ukrndw1q9E74eWVtr8WfZuupWfrGxLnSZetTGFrS6Uuv3LPNgf
djF0gc5zrc0dZGW/9bW2NYvr7F+Gr1rpYX1/Wn0/+rOVOTZptmxd6AfdoYDo
4gnRxo3WP8bKyVZ2WRkKXonzFO4QOmEHg9HeyivW7md13+i27gKrh6VuB6+3
9jRrH5G6/o6+fo7196FO3a7mzNfo3KET9IvK7I+NmWalZ+b6/3M63/+gcysP
WNlj40cit3hnz8dLNsy0UoE1rVSSTOPMsXHW6tyPsfYfqdPXFMPzQ3v+ztqV
JYtYj3uGL4H7BW+DBtBv0eehI76lpGgBO/d7a7+H3LX3vQ1mr+jfvsPebUt8
/hPR7zx0cJaNPTd1Xfm9xPVTaKKmvd9j7z5JnUfRhx47ABqTft8u83PBh/Gy
eAl6LXcXnwR3rZON7Rj9LMdbGa5zmWp9Hxv871O/35t1t9tnvp/YH58Gh/e6
laI2ZjC2fOq4vCa63Rb8/j+T+D3eovOE32wSTfW0uT2sPGJ9XTP/Tu7Exwbr
ldTv30jrn2v1bCuro+8Ra4+Lzge5UxN1l1ZoH7epzf3bob7ONnZ3cNy/hg9Y
+dH6nwVHK4sNxjyrL7FSOji897Tnz9u7e3UODdEhoScrda1UtvIDtJ267+mD
xHnrh7o7hdSGv7az921T18VPUo2O/ILh9ryVu6PruujG6LdP2fP/ouvDC1P3
AX2SuF7/keCfEt0nxfPniev66PndovtfdtKXur+J9+eoZgzvvtCdqqs2vLZn
cN/WHuEMTOyRhqnjvcvajVSjSzMOvb+qxuwW/ANaA/i9U7fFsIlGCDbjm6Tu
M0IvrxOcn+N7uczan1v7RSvfWrux1V9Z/yirv09cdjdNfT7jl9uYZVZustI8
dRmPTvKS7cMFVh5NfQ5yHx4FjL2Cw/hmqb/rFdxG5T28lrOFdbB+I+EK7UE7
+BurWfsL0etjOps8npm6rOV5UeoyGliXG/zXUrf/Lre5d1p9nPb4Z+0zdxH5
iS4y0DbsapuzO/U7BS2UtHJJdNuPcTm/IfyZu3hQfI1z+FVnMdv6T7fyr737
28pfqdsl5xuM8dH3+JDe/QEf4A6kbgPdaO2+es88bAbshTbW1zK4L+ZUw/MR
qx/mu61vZep7fpnBvjT6nEVW17R3Bay/nNaHt0+ObnecmvhYbAD0/4o25j/1
Vw/efzo0H1zX/09zWQOb5Vnx9FQ8Gl6N7AfHFtLXsQ04UOBcpbGMaR98Dcaw
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
C/gl+hx8YNAyd5L7+H/tfOJj
            "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu9972UURWMoyWcJe1NkNspCFgobmSxMKVmYshJbWVjYjIWN
ZqVQ/gU7iQwSmYRoUkPkczFR+J2Oxa/7PM85733Pfe/blEgOTQfGmBbwcO6M
aUasEK5BOfqeLI4ehCzM4sPWmDvWT3D09JJvk1Wjj8n68RMwD6fkP2Td1Jbw
w3CF/+Z9l+g5dA09OdZHKKKvj3wKKrz2Sb88V+b1HbL3ALSiu2Ccegpfi75F
j6AXYJJ9e/C77JFnLaZuYTHQGTvQB+Sr1KOs3use8qzMsE9Wj19Gx+j5wL/B
DH7T6tkL+B2r30C+XRtsBfoNG7zOkP+fIYp/QqfJYqw3UEnWiA9Bp9eL2EPH
qX05nVFmk+yC9RWS6BOjZ4nAaKBnKkGHvM5aoKcK/e501jHqZ+gXeKZ+BBmn
M8ksG/hSdBadQyd4Joy/xv/i66z+C3InchfyT7SjH8gygZ5Z7uIQv270Tv4A
az5KNw==
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/GvRY5sjt0iKtaVu5REB5WIsmyE1DpyLialmEw3WtkcMSPj
SK5xTaXERjRNTQctkvssMkohK3ckPd7TH899vd6v9/vz+d6/zejzTKehRZIk
me3P+pQkSeXrFU2SQ+quxZLkNVkb+qK6Gp2s7knzzW3lW/Hv6g1HOlbivPX5
tArN0R/Ej8aT/DRrOtF1sV7/X3Uj9WU61syDfIr8Pf2G9Kjscdko/UPq69V7
+X14FZl639BV5p/ir/CLcR/f1+w5+Sb6j7UD5RvovXpjZP3pNllDelh+NW7h
S9NGuAm3qqvStvR9a+bH+SMPe+Vl5b/ScvSSY70Ux6Ll1TVQAT/pV6ZtrMnB
QxiDLvhRby2tr/85vayuiVrYoF5gr456GfbNill1zahxM5pjo3yj2V78AToT
c1BLvUOvOq2Du1AXf8gy0T7W2a+HbDvdGfeX30VPojS/0HGHxjnza/kFGKY+
ob+aVqI/0M34APXMfUg/xnGk6feTreBP4lr1SnoGI7DafkP0pzh+dtxvZMu6
ow5KYbLe25iEiZiA8XgLeRiHNzEWuehvTS97d8S4eKftXwbXYbP9r6JFkI4v
ze8y05pvEdeCivwmegc9To9hrj2nm+uOXLTDUXlxM8VQBQfjXps7ptc5vh3+
gOxG/meaRn+jXfXHo1s8X3xk7qw8A43NVIv3EKkogxayLGSjVHwfKIkSWK//
fbyr/Dx7zcVnWGbP5+M70TuDovoX6J1xDq65NT/STDl6Vn2N/Eh8A3Q3vYFm
Wt8v7g1GIyuen/yUflN6mv6FurhdPcs+7WiafTvLVqibqRP8rb6IJnwBPWhm
BpagS7x/9GX7T8AjqB33ErfFd0T34FN5PrbZch3toPdYfMN6lWIPWogr8R5j
kT33Y7BeffURfh6etfZP9SpaMe4fLcCSOK7ZpfFM8Asq6PeVLecLka7+hJ7G
EKzBw/H+2ncNTqkHqifxJ/gB/DC+rHVP00HqLc7/cDwb9Uj6Qlyz/Av6HXpj
q97dsqn0OaRiefyexfHjmlCcH0BHxfdi9h3rHqVf23+L3gV1D703cH88B9k0
0oD+Lusme93MPfE7pd7N78EraC/7Ku6D+d7x/PiFaMn3NFsoL6CX4hziN4d/
QK8B8vg+dJn8Cfqt2ao0R54b3yYupvz//+Y/lOrSPg==
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1: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

       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlXAl0ldW1ZpAhkTkMQiDcID5BkckHfbZPz/V1UfqqrSyXRSur4mMBrfC0
ikqloIJjkdZCQGiLyBRABCRMNwwBMkMIITchNyHjBRJmwhSkWBHe/ffe3/7f
Oc1irawv5z/n32efPe/zkzzhd09PatGsWbOpdzVr5v1+/4dfxv7Vm5T+/x37
t8owbnIwxrc641tN7rOz8p6d9b0z3jJo43pTHXo59m+PzgfGfHu8ZRCYlklp
qziPnm+vOO3mJ5v/2L9z0J4PerMderMderMderP1fcB4H/DD9NM5aM9PUHz0
8T5lj/fp7ozXGyKvOl/pAQY99njLIDDoAQY9wKDHnp+gGPQA30vr3aP49TFt
3hzTJtGZX2+q6A+FSi8w6LXHWwaBQS8w6AUGvfb8BMWgFxj0AoNe4Bxav4/i
hPFXu42/2tdZv97cvuP9FOt+gLEfe7xlEBj7AcZ+gLEfe36CYuwHGPsBxn6A
sR9g7Mdev94sIMJKdT/A2I893jIIjP0AYz/A2I89P0Ex9gOM/QBjP8DYDzD2
49LP65Qp/cCgHxj0A4N+YNBvz09QDPqBQT8w6AcG/cCg316/yewg/SlX+oFB
PzDoBwb9wKDfnp+gGPQDg35g0A8M+oFBv71+kxlNBqtS6QcG/cCgHxj0A4N+
e36CYtAPDPqBQT8w6AcG/fb6TaaSDZjSDwz6gUE/MOgHBv32/ATFoB8Y9AOD
fmDQDwz67fWbzFRyYLVKPzDoBwb9wKAfGPTb8xMUg35g0A8M+oFBPzDot9dv
Ms3o57jSDwz6gUE/MOgHBv32/ATFoB8Y9AODfmDQDwz67fclB2ti27l9Jyrv
OyrxQYpiji82CP03FWOcjzNE+1kyuHnwFQ++s8GUEb2tgxjH8/z+TPMG0Xu3
jncn+joGMd42Nvrm7DKmZ0auvLeLjs8kBvYIMl255sYnm2/G5/cM/q/34Be5
JpEI6B38KS1QIHKVpJjPq1H8+VHFND8UMZMmT5689s8BthfrIjrO/qjCvOCR
+1kgCIzx+URQlY4DY7wf0Vuj4y5mftQ58VyKcz6rHLzViSd9/t9Hw1uc89zj
xFc+//nvu8yKDudXdHi+VONFWz4zVT7pvEP7VR5xHuA/L5+v8ujy3/Z/jeo/
YuyffGh5gM4zsaBcx2H/wC/bfjeq/cM4MPndLDnffbU6butzjvBnqcjnd4bo
TV1jZpG8tZH9bTe87w7Cv52G2PdZJ+HHXvOUN/2bHhIP55jLseFu0d5BEpc7
B4T/Z0WejvJ7GiAvdUoPz3+P3j/qeCC4ncS1Sp//CT3g08/nk+bMT9Hn+X3V
TO+yMn5+9mx9nvezVvQvV/Rvu/k6lm9knmd+jpxRrevZ9rtR5Q8Y8jqc5Ke5
yhsw5PfBfSdj/7qq/ADb+UujwTj0A5jHaw0vn2cKD3s/PVXegO38o9FgHOvZ
8lkr8eQhxz4U6fPAD8TofSxUR/LbGDrirF/irF+i9tTW9ybFzJ+rws+oygvk
05bXDaYrHegdPX/6c14cy9vy7boffj7HeOL5ZrizyisNj+oapNf0z9LnIa//
iNnXT4b0DIK/xM5ZNbyfNw6zHHdKYvvQ6aDaW/AH/gfYtsclOg78XzHrMefR
AMnD3NQwve/JpwKc3+SV6HzYbzv/Ocr6Oxr2tFQx9A385PdFFLP+lTv0Rxz6
I7oe5gNjPtZjeir0PKHfsD/wx9AnnDewLR85qk/0a/BV0d+lKj+2/b+h+mzL
21qhq0XQthctRR42q7/geTks5zO68fNDszQegf6t8ybs7h6EfME/Ay/3/MmU
Xio/ZMeu9eL15uc551lojLf8M8iXDjn50yHlt53fnVV/gnE7fzqr/gX8p32N
LDeeeR7/yDmW4x9UKr/gn8FfYJwn7C8w+Eti9m433T/OE+eN+MeNh+CfsR7s
tV0fCen5wR8h/oP9Ar+hv7BHsH/ghztu1zPAz8NO/FOs4/w7rPyCP4D82f6s
3vEPtcovO55ca3rTAu1kP7tUHlx6wD/b32Q79jLH2X9I6QEGPeAnxu31aw3s
pR2/Zyq9GAe9Nj9vanwIjPgE/MJ52/oaUgx/Cf3CeQO7/g3P2+e1XeMb6D/i
FeinXZ8L6fOYj3gP78d8yBPzb5u8f5ohd353svAnqtjOd1bL8xPMTc/f9E0O
ptP7o4rx/FkvQB3+PevVxHUaz/L62zQe47/v1vgV52PLX75it77G8d8B1UfI
NzDowfnx+itVPiC/f/9b7OdAR5bfabvUXtLzI7Mp3v70i+s8/50VhshuAP0Z
sv5pkR+p57xdKO+frvxmeZ+n9sa2X9s0nuT4L1f8x6sqL3x+SzQ+g3wgHmNx
yHT0JVfjK1t+ajWe4vi7VuLvIsde1ml+R/lKyl6KN98aFdB4APYc/h3y7Ppj
YC9+6HPlDL+3sULljdeLSjz/D3n/Kn4uDv4q2wz0Jqzqy/o0rsC0j5nT8xdv
M78yv+R86elOzJ/AbrPWY/A5ycev5Eg8dtkcowVq9f3w71coH4B9S1f55/GZ
Ku+8z6ijH9N0HPrkLf/gkZDqDz+/UNabyvQOTOZ4uiDK/u+XS+X5n+h5IL6A
/4I99fYTffsCy+ftz5z4APFlkcTfO8S/NhP6Nunz0D+Sl0HFxqs/hNrvl/Xv
5udv75B1j4l854p+dJX6QqY54e33HcT3eeac98AriO/cfL2a9O3HqRdIXpam
VsvzabzP8StUP1geFhtiT5dkXq/JPz+2e3XGY39Ci2TKxzY11jCf79sl8r5e
+cH838bymV6k+8f+mL/5Tn31MMUjy3tLPDmsyMl3wnJeJ2S+xMfh48azl43F
YdLvLe+eonglbnZE5ZH5uULs3DXD+rZM4xumbznHQ8O6yfllMb+OdBP99OM/
ri9kqX1i/pWp/EEen4uxo91wrjeFGqMqj7DvkG+mb4xp7bmTDsmc32bUOvHb
EeUHMPjB+yp28p2lipmeFOU/7KVtH1Mc+7VL5RcY58v2Ml2fR/6E54HJPB6O
U38ADP9K9ZYp8azv/XaYJZ6/6Jmk8S4w7Okcb/3fJok9Oajyz/uPqLza+UO9
8sM+r8WK+bwX6P6YH7vV3yA+xftw3oPohXdpPAqM+IPqNKmJGh8A2/63SPnr
6dfmttCP9/l3XLqTzxwz0H+cP/vHI7qeFd+1C2s8R/ZzSFwQ9srbfdkc9Dcz
zCbvgUN9ZD8HlT/I97B/N3/k9RdJ/Wyr2tPWlG9LvWPuRtKHWaPAnzSW40TE
67nm12SAEvl8G/P0/W69zM1/2P+VKD9wvtBvxJ+w9/y8Xz8DxjjladV+/RIY
7wtJfg0M/wx6eb2jTrxdqufD81I1/0N+gfgZ+m33b47oOOwhxoHtespatXd4
HzDOB/YM+QLsHc/PVuzmF6hn2PHZEae+UKLxDeIlYKxn77/C6X9WOPFPhT6P
88TzwHY8VOnI71GtD0NfOQ5sFYS/Qv0W+jrME4cm9J8P6Pr9RA+BIR+oV4Df
OC+cr6feN+MTtN7UX/Ib7BfnBwx5xPtQfwY/sR7Oz5bPtYpx3lgP/MT7Ib94
P7Adr5Yq/6GP2B/sgV3Piuj6dj2wSbGtjxLvtrmg/hrzEd9iPjDm433A0Ac7
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
ZcSHwLAP3va79fXzRVufSx3+lzj35Up4Xzdaij9Jc/pvOWzfBuP+er7yH/mv
fd9xpvAjS/br3n+YKuNbZHyyUz9MlXzgG7WvuI9hyftC3G/LdtafqfET0zvb
6V/6GPTw88tk/FXtjwLb/co9jr3NcOxthtpPxA/AsK+4zw37B3uH+Th/zt/C
HF+M9u+bAIMeu14YcfoREdVHPA/7D3sKDHtqn+8xR98qHPtV5TxfpfEb5AcY
9gzyCX8CeQQG/aiX2fai2umXlGh8BX2BvDP//e/NmH/b1f4zfdsUwz/AvqPe
BPuP+gEw/APkDfJux+8zVb4g78CQPzu/War2BvEZ0fc86jURrj8v6hq07K/6
h8XO/YUU576m39/DuH2/b7Hef4F8QH6Acd8I5wt6oJ+87Fnj1od5vm//+Dm/
fo37IcCo7xB5D/v7h/yEJH+24/U6x1/4mOmNqr8Apnr8mJPaPyF57n2S6U0s
5XroxDDj/8k0v4gt93FjkuRrB6ke3S5N/HtxBecXv7/I+39dvh/ZdJH9z1c1
9PyfYvG9R19DqI7i2ydm+fU4zq+/k3rsGrIHIzvcw+97TPqfr2Qyn8anyX2d
/XJfZzPFlxMKhZ8fV/J9rauCz1QbL3yqvC76m1Qj9dsqqd8e4vrQiXztz1M8
M0jsyaPFwo/jwo8wxcNTfij10T+EKf+If0HqQVtKJV4/I/F6Ba//Z8HzKvh8
l8r93iWVHP/fxvdZ4o9XSv/9KYnH703U+2wUf7UKqH2l9z/s9ycoXq85rf0z
2tfr1XqfkO7nvNxR7R/lGxW+PaO/P3ne/n6o+UW9v0T1i4EXef375d596gbV
Z6qn9EhWeaR6bHoGy9v6jdyv+Va+15hSI/W7iNb7uX9Tzuf7YT7Hv3GCv89j
fRx8nJ9/IMz55/2ntL/H9bdrUn/7Qupr0p/4KEv6UXKvPaNY6n8lej+G+BeW
+xlhuV+4Ml7OYwf3id5N4vOYfJDizHEf+vcvaN6x02pv+L7KHq1PUD78isQh
k7M4vv3ZJa3Xc7x7UvuZFA+0OK72hdtS53i8tpLo75t4nu73TU+sYn5PusT2
ZmId5fO/jflXb/7+l0u5vpAv+p5VSt+XTb52kvP1K6VUn/+PW/59Te6PyXc2
A+T7746Xef34KH+P8SPpJzwS5ftSq/k7p9TUQpbXoaIvXxVzPXGE2KPkMN9f
G8v9vE0PlZo/ePWdX4n+TS2leC/S9gzlUw/FVbC9/sEl3v/DdSLv5dp/o3nV
l7QfRnbm7xc1n2N7m6nxrxdfbbvm+1vv97sv+t9r0Prp57Tfwv2PKv0eh+z7
m2eM1Z9oPMH8OV9C9ubjRsn/9u2k8596uovYt31cX17v9zfGxsTt8yN+f4Pq
38/63xeUevX2dSJvT1bw/byD0l94rlL81+daPyT93ij7W1JB9uJSmPV9YnUl
938iMv4Q63+X+/z7qd5+Xpvt368ieXxV4qusEPuDu4TepEN0nmaW/H8Bi3OI
f/HxAY0Pvf5Tz4SA1kuSPHprG/S+HvUPeh80yKdYvyN6v4r7gWHN96ke98RF
zcfJnj6HflO+9Luieh+P7HlGieZz3vks+drPv6ifUernV970v7WX+1TBhWJf
Wki97mv7/k+XAjPPU6BmDdofZn8m98Ef22aGevI2Qu4DvHBAv5di+7de4w/G
IZKHW0OkPjggU79/4vvaubyfAY329x/xXdheRTOIXxlxydzPeqmW8qkdPQJ6
v5P6SfFler+V88d5ch4jWZ4fP8H2MXUe918+lf7EY1tYfi5IvXxsvnPfZhvZ
82iKH+9Q/y9Ur/ex2J59K/2HVOZHqAfL+7ec7/xzwVna39OxOI/7E9n6PQF/
/3WY6Xsjg+uhSztLfSqD48m2LZi+ho0Uz9z/770Y38iV85X+YXA19Y+aBnVg
/t27U+rDPaQ+7P9/Iuz3jnK965TfD6T85jcJQdwnJnsSEn39z2Ocz1a11vj7
j1SP7q3xNdm3Ee35/ePTJX78SM7jDdbnh5KDdJ9iY9T08h44KPXH3xU49fip
Tnw+TuvBnAfL93UdpJ70xEymf5F8Vzqd89MA7stejpr/A8Iujgg=
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAnYT8UXx++duQqJkn3Lkn0p+5J9SWQXqWwRQqGVVBItsqSQSvVHu0pp
RYuIRCulfbO0qlRSWlT/83nP9/e8nuedZ+bOnTlz7syZs//eKiMm9psQkiTZ
d0SSRKtfsofJVk7LkqRjmiQdrNxq/S2tbmFlobVrWF3UyvvWPtZKISuFrfxu
836zstHa7e29gUgKWmmTel3MyunW7m/lNCub7PkJK7dZaWiLd7a+TlbqW6ln
5UPrn2z1r1bvtnKM4LHeIVvnbyuvWrusYPN+s5WnrSyxcqnN/dnqz6ycYu0u
VmpbKS58j7JSTvP4jpr2rqSVj61dXn2MrWjlOCslrFSyNStaKWilgt7z7lPh
UMbKLtXVrDS3UttKHSu1Ep8DvOrCm/VrqC6vsbyvBD7qq6D59B1v5UvBPsnK
iYZvAytf8B22h98ZXlM4H6uPtnK+9Q+05wFWelo5Qbixdqvgzw2tNBZO4NJC
69W10lR4gHsz1eDYRGN51yhxOMxvqXn1rLQTbN63Ul99cLZ1a1v5BnjBx7S1
MsjwP8NKa8OzveaBVwfVrNlRNXh1Fk7scRfV4H6KanDpqpr1ewkWMHqr7mSl
avD1u1s5TbiAew/V4NJTNfP/Mfz+svpPvtvmVrOy3Np9BA+8zjgMXj/hB179
VYPX/fat/wLPSgODUd/KPdYeLPyA11fwmD9I8MDrTNXgdZZqvu9s1cyvFxyH
gcKrqfZryGGw2/HtwfEaqbHgXsP6MvvOaKWKtctbuc/6x1sZamWYlXLBx4+w
cq7mgeNYfQPrjFIf+I4RruB4nmrGjdZ73o3TPNboYPCPslI4+HNf7eWpqa85
wcpErQ/uk1SDy4WqWf8X+ICVB6x9kfpY8xLhBC4Xq4/nLVbWWFlq5VK955sm
Cz/24DL18dxW+IFbKzvTutwzK1cchuOVqsHxKtXgOE01eF2tGly+szLVyvVW
blAbeDOEE+vPVA1ey2zdpVamWPty+K2VvdaeLnh86zWqmT9L8MBrvuACb7bw
A685qsFrrmrgzVMNvBaSA8iOGwWP+ZusY6OVa619n405yspr1r7H6retfpn1
bd++tuftVm4SPPDI8UT4CXJmUeKyBFmEXDkycflRUP39JSuQC8gN5An8fau1
t6QuY1LDZbut1ylzGYNMKqo58HlkAPIBuQE/h+/WFB4X29yLosuVghoLr+9g
sPZZ/VjiMgYZUDpxGXJ34rz6WMHim5AVFfTMGhX1jCyhXUJw4c1ltE45PXe2
tQ5Y/WzishAZU1Xj4L3VNK66npFRyLFKWqOWvucuw+0SK/uTfD7YS+Pg+fB2
5EQd4T9AsgWejpzhTtQTLPhJkyRfNvCMTDlJ+IAHPLyh8Gqs5xqax/MbBvP1
1O/bETa3gJUXUsejueAyHz7cVnjAz1sIj1Z6Pqg28mWindWRBmdf6vPhn530
fS0EFzzaC25OxrRP8mVMB31PJz0jr5BVbZJ8edM5yZc3XZJ8ecMzMgG50i1x
OdFV+F1hOB1KXH7wPfBzePRB6//dytYkX/acpjXge32EE2fVU3j10flV1LnV
SvJlVQ/h1E/zc7KH53/UBqczDMerbN2QuvxBZgwQTvDzgcJjkJ6vtHFJ6nIr
J4cGJfmyJyeLztK7aqnzwKnCdbDGgRM8MyeLhugd95Z7wr1BNiF/kDVrE9+b
5YILrx4l/OD5I4TfuXqG3yMnLhB+o/QOvMZoPnIFXj4syZdJY4QLfH2scByv
58HqY1yOp8NDhxm9lZSsmqC+qYIFv704yZdJk4TLRXrOya2cHKOeoDUu1Xxk
Cft4uda/TO/Q7yYLvxGGQ6ngeh+4Tta40Vr/oiRf9oA3vBm+P1Ow4LvXJPly
aJrmTddzTt7MSPJlCe+QOTO1HnCRAcgWZA8y7DrtB33IMfgrfBRetzy63FqR
5MvCq1RmC1ZO9iCLNkeXKw9rfWTGPOE0X8/T1Tc3yZdhwBpr/PMz25sLbB9X
WD0JurSyyuC9ZPWjNuZPq1tZeYf9t/4xVlZae5X1XWTlaCvXWDnGSjErfa30
kHyaaDAfxFaycrGVY618ZP3Frf9YK++nTtvIJuyOh9DJDafbrX5KPLmElRlW
SlspZeVmzshKu+jyYon27RSbN9Xe/2Ltsga7kJW7oG0b96r1b7Zyu7Vvs9LM
Sj977iWZlKZ+l9AzS9i846x8mDovhbfDP2+yOfOstLDym737MfV7t9DGFrHy
PPRgfWWs7LT2c4IH33jB3n9l/e8hp1N/h964A3sJ3p74+sCDN26yMRs5B2t/
Ye+XWLnDygHsPivrgM0ZJU4ni+xdMSsvWnsn323lTitjbczpti9vQWfYetau
bvWb9rxBc4ukrndw1q9E74eWVtr8WfZuupWfrGxLnSZetTGFrS6Uuv3LPNgf
djF0gc5zrc0dZGW/9bW2NYvr7F+Gr1rpYX1/Wn0/+rOVOTZptmxd6AfdoYDo
4gnRxo3WP8bKyVZ2WRkKXonzFO4QOmEHg9HeyivW7md13+i27gKrh6VuB6+3
9jRrH5G6/o6+fo7196FO3a7mzNfo3KET9IvK7I+NmWalZ+b6/3M63/+gcysP
WNlj40cit3hnz8dLNsy0UoE1rVSSTOPMsXHW6tyPsfYfqdPXFMPzQ3v+ztqV
JYtYj3uGL4H7BW+DBtBv0eehI76lpGgBO/d7a7+H3LX3vQ1mr+jfvsPebUt8
/hPR7zx0cJaNPTd1Xfm9xPVTaKKmvd9j7z5JnUfRhx47ABqTft8u83PBh/Gy
eAl6LXcXnwR3rZON7Rj9LMdbGa5zmWp9Hxv871O/35t1t9tnvp/YH58Gh/e6
laI2ZjC2fOq4vCa63Rb8/j+T+D3eovOE32wSTfW0uT2sPGJ9XTP/Tu7Exwbr
ldTv30jrn2v1bCuro+8Ra4+Lzge5UxN1l1ZoH7epzf3bob7ONnZ3cNy/hg9Y
+dH6nwVHK4sNxjyrL7FSOji897Tnz9u7e3UODdEhoScrda1UtvIDtJ267+mD
xHnrh7o7hdSGv7az921T18VPUo2O/ILh9ryVu6PruujG6LdP2fP/ouvDC1P3
AX2SuF7/keCfEt0nxfPniev66PndovtfdtKXur+J9+eoZgzvvtCdqqs2vLZn
cN/WHuEMTOyRhqnjvcvajVSjSzMOvb+qxuwW/ANaA/i9U7fFsIlGCDbjm6Tu
M0IvrxOcn+N7uczan1v7RSvfWrux1V9Z/yirv09cdjdNfT7jl9uYZVZustI8
dRmPTvKS7cMFVh5NfQ5yHx4FjL2Cw/hmqb/rFdxG5T28lrOFdbB+I+EK7UE7
+BurWfsL0etjOps8npm6rOV5UeoyGliXG/zXUrf/Lre5d1p9nPb4Z+0zdxH5
iS4y0DbsapuzO/U7BS2UtHJJdNuPcTm/IfyZu3hQfI1z+FVnMdv6T7fyr737
28pfqdsl5xuM8dH3+JDe/QEf4A6kbgPdaO2+es88bAbshTbW1zK4L+ZUw/MR
qx/mu61vZep7fpnBvjT6nEVW17R3Bay/nNaHt0+ObnecmvhYbAD0/4o25j/1
Vw/efzo0H1zX/09zWQOb5Vnx9FQ8Gl6N7AfHFtLXsQ04UOBcpbGMaR98Dcaw
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
C/gl+hx8YNAyd5L7+H/tfOJj
            "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu9972UURWMoyWcJe1NkNspCFgobmSxMKVmYshJbWVjYjIWN
ZqVQ/gU7iQwSmYRoUkPkczFR+J2Oxa/7PM85733Pfe/blEgOTQfGmBbwcO6M
aUasEK5BOfqeLI4ehCzM4sPWmDvWT3D09JJvk1Wjj8n68RMwD6fkP2Td1Jbw
w3CF/+Z9l+g5dA09OdZHKKKvj3wKKrz2Sb88V+b1HbL3ALSiu2Ccegpfi75F
j6AXYJJ9e/C77JFnLaZuYTHQGTvQB+Sr1KOs3use8qzMsE9Wj19Gx+j5wL/B
DH7T6tkL+B2r30C+XRtsBfoNG7zOkP+fIYp/QqfJYqw3UEnWiA9Bp9eL2EPH
qX05nVFmk+yC9RWS6BOjZ4nAaKBnKkGHvM5aoKcK/e501jHqZ+gXeKZ+BBmn
M8ksG/hSdBadQyd4Joy/xv/i66z+C3InchfyT7SjH8gygZ5Z7uIQv270Tv4A
az5KNw==
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/GvRY5sjt0iKtaVu5REB5WIsmyE1DpyLialmEw3WtkcMSPj
SK5xTaXERjRNTQctkvssMkohK3ckPd7TH899vd6v9/vz+d6/zejzTKehRZIk
me3P+pQkSeXrFU2SQ+quxZLkNVkb+qK6Gp2s7knzzW3lW/Hv6g1HOlbivPX5
tArN0R/Ej8aT/DRrOtF1sV7/X3Uj9WU61syDfIr8Pf2G9Kjscdko/UPq69V7
+X14FZl639BV5p/ir/CLcR/f1+w5+Sb6j7UD5RvovXpjZP3pNllDelh+NW7h
S9NGuAm3qqvStvR9a+bH+SMPe+Vl5b/ScvSSY70Ux6Ll1TVQAT/pV6ZtrMnB
QxiDLvhRby2tr/85vayuiVrYoF5gr456GfbNill1zahxM5pjo3yj2V78AToT
c1BLvUOvOq2Du1AXf8gy0T7W2a+HbDvdGfeX30VPojS/0HGHxjnza/kFGKY+
ob+aVqI/0M34APXMfUg/xnGk6feTreBP4lr1SnoGI7DafkP0pzh+dtxvZMu6
ow5KYbLe25iEiZiA8XgLeRiHNzEWuehvTS97d8S4eKftXwbXYbP9r6JFkI4v
ze8y05pvEdeCivwmegc9To9hrj2nm+uOXLTDUXlxM8VQBQfjXps7ptc5vh3+
gOxG/meaRn+jXfXHo1s8X3xk7qw8A43NVIv3EKkogxayLGSjVHwfKIkSWK//
fbyr/Dx7zcVnWGbP5+M70TuDovoX6J1xDq65NT/STDl6Vn2N/Eh8A3Q3vYFm
Wt8v7g1GIyuen/yUflN6mv6FurhdPcs+7WiafTvLVqibqRP8rb6IJnwBPWhm
BpagS7x/9GX7T8AjqB33ErfFd0T34FN5PrbZch3toPdYfMN6lWIPWogr8R5j
kT33Y7BeffURfh6etfZP9SpaMe4fLcCSOK7ZpfFM8Asq6PeVLecLka7+hJ7G
EKzBw/H+2ncNTqkHqifxJ/gB/DC+rHVP00HqLc7/cDwb9Uj6Qlyz/Av6HXpj
q97dsqn0OaRiefyexfHjmlCcH0BHxfdi9h3rHqVf23+L3gV1D703cH88B9k0
0oD+Lusme93MPfE7pd7N78EraC/7Ku6D+d7x/PiFaMn3NFsoL6CX4hziN4d/
QK8B8vg+dJn8Cfqt2ao0R54b3yYupvz//+Y/lOrSPg==
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1:eJztvHdQVNvWPQoIZgExoJgAERFRAREwDoKCJBEECQIqYEBQUFGJggQlmTCB
OQCKCVQMoKLknOlApgO5uwEVieLb99U7X5+6Vfv5+H7ne6ku/1hn1Dprrz3X
nHONMdfcLePobr5PSEBAwFVYQGAc8e+H7frxSnHFEFM467ytnAYp5bBZbVEs
DF3U3nbncxWkV2878n13LXT0WFuPHmRjrOMFJucZ1M2pRbvnk/VVt+px7t7O
8iURTHxOeWhUvK0ZS3+7eW1tbcSekw6Ux/ea/8fnjx63UPxYAgtOLiIraoj/
Hr+s9rCpWQO0AvfVdcxog4bPV+211QxwF6+JeWxQA0b3dYf4oE5oShdLTZnE
ghHDXyFYi/L/unU65O+XybzRCbdFtyNOirOgNin3RfJSCs47s+q+iXChsWiZ
U8c+NsooZ86+7K1CYMiQy8I7XMzudtSjNrXg9cHN2d03af+/fa9MpkiTnCYP
n2x/H9rv1Aa2v1yJpF0dFPt4+xbRePg6Ue8TvacdQj2rnmWuafqPHf4POxSv
45Ys9elG9Tvtr4fDOvH0drTK1qsMCPzvfz0Y9Nqx9os2B9VBfpF6w6z/2O0/
dvu/1W7/sc9/7PMf+/zHPv+xz3/s8/9F+/yFO+3/1x8PQ7//9deGFMmmY5fT
8/BUzUVslicV0zWKTPYfYJLii5/5TV3QSsXE9RFBs/3q4DNa/LPYh0U6frXd
uyyGaQMOx0toTP/cgM6Qw8c2xDBw/NnVZG4/A0/vxjhHTWxGYGusio9RE+k8
QetWsQ7ZtkAs5Fiq+FoG0p2jq9O21+FsVCZLoKodqTbD022OMtH6OO2xwAYa
WA8l3un+yMM8E5dTv4OoUB/Oej5wnInMKpMfcORgxkChdMwrFvwu54k9nFoF
aujXD3KdXBz5ZjZl//1W5G7U1fP3qsEBl6+aR0J5sH5mVnRHrh3JX08Mbl7f
AIV803XSCt1YN0ezzPZjB3w5l878utaMDS6TT6wt6Qbn6WTmXOsurNW7/77o
GhMTxUtFKcXliLxJ3dSrXIOt4b6sRe/YpPhf+3XJeO14ri4XF9yfudoR/vKn
8cYbE99Ym3PRY96wff/Q//x4MpyMZ47V38jid6z+QxbXZP4jJKBdaOeWh22f
bMxhT4XWnqMrl1owxxzvZHFN5j9kcf3f9Z83JtLaV524SL48f+itVOv/uD/Y
hB49aNtYjg91JvNerKsB9wVvuUU6+fjxLmZ5T8xysCTELeJWHgU3EytUJlAZ
8Ihv7gg/Tcf0kpaP96bUI+H81pivQiysNy44FFTKhMUskaq+Hc1wnrzqq7Jp
IyzEh7/SvrXhrNGSnMuyTKgs53qc16Uj+ICp5LOUDljvcXn9+CsTsQU/Fyep
UuGsscZ40nQetr/s830g2IZDVslT7rvUQm7h6n4hs24ou3s8vizTiYfiH5w/
zWSAXryJ3TW/DGYbpD9PD6TjyuNHH6fI8N9rWfHlHT11XJQ6vLrtONJK+l5/
jbeZWTXxUDUXCrmR5Xq81jHP86f5/32ebU9jV18fzoP+9UCFiaFUMD8sj0w6
wSS3f0By7k63HKTsXpwlXEbBE0eRrXr1/PkLMovrKlu5WMddZFck3kb63LH6
7dSYO1qDlg1IEVmmv+ZLA7o6lKcfu84gxc988agUNeMiNijCKEmmBSHUcy27
siikONlzyfKVXrN6375VhZh644xbvAwNZ7J3eyQPMtF+RmWC7Dkebh50M21S
aMehJfsHK7c0kOL/1HPHOo8Jt+Q0zb8QrCff7rtr0HA44OZ00amsMc9Ddu6T
8S6pvQmxiisqEXplcqtGFZEHQiUOLGlkk8YRmR/KbVqqPv9dHaJmFdWKrmjA
oU22Mi/FmZg8qVP4sQ8bpYInxx3ubIY1jXK+3Kqe1G4VJ5pNt/p1Ifxmo0vu
HhZUFz67KDSvGtI6U646LudCviAqKTCLjZz9TdcKaqpJ57FWrrwXvJuH1/NH
jaty2pC2XFJCeXs9evsGd/d0F2D6gmlZwuI0yL+sb6/uZKJF2C7I6EE3ZiTv
HKff2YnoE9v170xjkvIEMv421vF/4cpR6zKffuCgNneFklYtP199vagw8wyN
g7BpxSISM1v+2/Nr/TKUuVvAAf2m2+mJQ2xSnGzfyfD/p9ZD5rd/4j//nvfG
ms9LF/emiSpWQkBdabV0ZQ1678+zFGtik8bX3qcDbje2U0DxV/aP5tbCTN2m
abSXPE4HXux4cHKgEQl7HUb0zRvx7YOdo8c8BqkOIuNRaHdr8DvBhWe7wIFM
P4LnuVHt1sZTSXXNfq2XYUFZXFA3y10pRyvE7TTn/wyjk/LtkuQpfgJJPNAa
zh+PjGqHwtZZguM2NmJ2bqNhUQUPolfueJ1ltSNtX4x66swmUj95U6m8YGl/
N66/PjSe87ULl74nT8uVZI3Zf/507o91/L/7T7NKw1L/o2Wo8rR1u3iDjqgd
vIN0NfY/lm/J8KRC7kD/SS6iFmYtPxnYgiNvFaoPvKSS+i2Z/iLDyZ5L5m9k
/kmmf8n8hOxcI9uX/+nxZPtIFr9j5QNkcVosv93fS70Vi12p3vvPMtAVAluh
bbWkcTFWnjZW+4z1vcY6nqw+M1Y7kO3XWPdxrPOQ5UMyfKz7siJLylCV0FNi
bWd7Agk91c+Mt6kl9JTujAgHEUIHjVYVJN4gdJDG5sjkc4QOItPdZPOQ6Vyy
+Q+uedvxdH42tKIbinOPUrBws+b2pPN8fTG/T8VLTIaH68/sBX/5t5HiHqpi
2uFBWQi3bt/5U48CHqtnTawLfx6B2Ybf3+jyoNWheLA3vY0Uf1tT7vuxvQaG
Z2uvd0TU40jH4QHDGPK6wZ5XtlIL3nbgdw01q4zQlR2ZanOWEbqSrD6grjZj
6m6VQti/7E9VkaXh+pvEV/JDTFKcrA5gGB+n57ayEiuFrn17QuTVqY+1a3Mb
2KT4PFPzEylmFLR9EU78SfgnY3O+5DPCP8niZZ3HRXfNt+0YkkmNYuxnYnrz
hUbh3TQ0Xqq8f484x4VEA0znarUiZ96b00/D6fiVlf/VdVc1arcz+w/eqEVE
n+iw6Do2fkjuuq0u3wnWl6CFF9uZcHRpbF/1goJ80azNUc0lUFatEldWIHhA
17WDg1QWouuf+U4zyMVJVZe+HVOpxP/fP/u7GBNXxl9SX7ogG8Xtv3Z0EH4y
vMLqUPHf/KSmYsL53fVceCUeUVj9q5V0/GjVq8VD7jn4UnvIe0I5BaPWSTul
G8jrKmPVm2T7SKYHyca/vvmozlOnEKI2wc975GnwzLr1QX6USbq/ZPXMv+xD
tRFTrM3l4Fh+vWjNDz4PWbzr9M8phRwwO5WOUAnecuTD0b1dC8uwfe/LintE
3nhTf8YvWIZ8/NfkqfXU4lKsbOoTrHKh487E3SwjUf54g7kjdsuJOD2UZL1N
5XQbumYxnKvnUcHOmHHkt1oduK91xum8Y6F9/qBuE5ULKbfdBzQ9WnF77kO6
oGDNf83zOXp254bRLsju6FR/7cdCzEF9i9+T6zD1S6sip6ced9JLkwZ1mDjK
UOh7s6MDQXN9Oq7cZWLW96uKyXFUFK/pPzxswoPFU9vy0dg27JRy0vVn1eFd
pfqgyOEKTLT7MdgdXoOwQwxvWcEW0vWPPp7DOB7fihU31UwPvGBAjZMXebao
BtmcDP0nRP6pcVfvGyXyz0bfCO/7f8s/WSuMu9OIPFNKeRk4SuSZsY6PWbs6
eum2bAycXNsUGkCBLcXGaUssA1u7jhy/sSYLo5Xr066rULCkaL/bNSv+PKs3
0ZWmWfJw33NWildTG4bOZrTF78iCjIb7jJ61FJR+km6760CeTwQfrrk7+xQX
NR9+5mcS/PDuotbqJUlUcJMnayQYlWPyx5kXlDrouFBebvnQm03KQw5ozVmw
ICwXh+o7jekLqLD2KP3ybiETC10dP04+W4+H04bEZU82QOHqlrmXqhik85w6
TJ3n/TkXsVes058qURHMXMNRW87E9Uf54xxetOCpkleUxk4GHJaeNFTrrsWv
4ckpwz/zUbevb2NDIRUF/rN2RyYzsSTdcXGqFherA9pm1QywIVn6y3OWAwXS
NWeqzI/zkKCzZptNfxuin6SHChbV/5c99Rb4HBqexgX7Z9wBDR/yuqhPjtRp
e8tyFM5btyeaR4eM5NZxq06zEWRc/iO8MwuWWWKStU4UfJh1J+fbGcYf8xsn
/NzUc0o83JY9reF/pY3UP/9rnW+EdFrEeJATz6krsW9D8KTT+82OZ2N5icpN
ejgFp1nTKAMPGKT74tEhRXO6mAvfSu/UhkWEHrCXbTgkzSS155/0lEuM1Vx6
AIfgLSGr3rqT88DAOTApcCnChabg9kEvGkyGvmca6bLwrOTxyl2aRXgSLNy8
yZWGGiVNyVQNFopX9ZQbXy7B+P0RiUoSdKyaF3bZNZtFGtchA9+/O/VVYruT
0tNrc2sxt3XIyugRub6esyVp3zhnLqLLEz5KmLVgaAu9nqFJRcxST5UpEVxU
jp+xVj65BTMuqhc/k6OR6l+y8+5P8Zv8+XGvvTMPT4OlliiPtJHG9Z/4z/YD
HwavyPPwLmOtp2VYG2meH+u+jJXPkPkPmf+TzTPWPDPWeabdS/A+EshG2s/1
3z05zWjUU5cRMasnxdPubK+dySV0nuXVgUcSDIzMad6oX1EHkUrfB8mPusFS
lq/Q7enEiaOxPybNYpLiE7Da1PlDNw5meIwTkeuCo25on7olkzT/kOUBsn0k
80MynMyeZDyNbJ3zk+eN2i1mQGth2f1k3yaUpsw69Vq2mRRPdFhUfu83D/7i
X3Lm7uzApmNXXd3nkONk6xRe1TmzvDof3uKN1rszqJjmoGIW+YSJ87pHfVeY
ZyO4y7rvUSBx/q6/H6J+k0Hqn2T+T/bc29MZ467W5qLB9arHVzUqZK+F7hVR
ZWKTUL7HnBlsFOfZq07MbYbccHDE5Yp6yNYKbZ8/meA3w+9vJGiycG3Sba9N
D6pR+jjOt+5CN2z1o76t/NSJG0dOq54geDrZfpHZn0wPDqz8fuvpxGycvLTn
tKYbBRlT5gQLhBPn5441CheXNkL27b6tDRMbobBv8Q2aNQNLHdi/0z80wy9h
tu1X5SZkuE0M2L23GW8Uu7fOukXosQu5x7/YtkPa3bk/OKMBQj8CDEy7eKgP
VT6xfXEH4t4GXO163US6frdNyWdqy8sRoWOxbMXqGnw0uc0T/EDOS8/ovKDn
HCrC2q5NYlreNNT2xrDO6pLXx8h4Dtk5PtbxZOskw8nsQBa/ZP6WImq+8mtJ
N2LyN746ZNOFFXnOdodvMMGJbxY06O9GnI5splZGF37ccl20ag55/XOs48ns
THbOPpE6Xij8sxKJN48qlxJ4/Mno6fMJnOzcJDtntWfMCZEi8MGq5+eMCXz5
5mvFk5fQSO0cEWI3LopRghebpeadIuzsPF7EYA2NRTp+x7y0qKX7OMhYf8/z
zmsWZikcLdGYVEWKk9n/T7zo3/XUPzUP2fuS9UuUrrC2iifO29IVAm+dc5sw
4Qnzont+E2l/gssVDZHmGd2wv+prmBbWAYek6JPqVs2k6yHDye5BHnuFOEQR
fuhV8XFZB+GHrvUlvb8JP1x5n6PY0MyBodpXhdWT2DCd+fFRxpQqTDYRNt7Q
RcVEi2ELln8dGN9uRxl5jz0PkPVveJsfuTiHwYHIMeG4POK5O34/a1KZVjXm
eCd77j+1/n8qD/xT61nz8WRg/IpyuLoO+5+h0+Eac7Hsmus/975jzc/SJ7N2
L1lZDp6/Tlg+sZ5fr0eTKv5P1hPEky1xs6Dgalbc3i5eLS7P/3qosYfcPv/U
+LHuI9n8Y30umT8MS/JiHxF5oLBJd9OjTx3YaXgt6+oN8j4lMn5LFtdkOFkd
lezcv0DNTKgm+JvN1W7nSoK/hVgcXxf0N32aGzPpUeUwB56jr3oVrfn8WUl3
8c9xolz8WBB0WJ/gS2R+a3Ng/ptzM8rx4YSVwu8COrhMQ4Vdu9mkenNq0eZt
kXNy8dZT5FTtKKHLYvKe3BBmgvq+Z/TA+2z4qq9xz7xNQbHrzNKOVwzcibPl
9hsUoOuh+aFOBhWXNV9oDGYxSecPftQqH7SnApyJO2eMBNWg11NGT2+YjeXP
Npp6JORjlXbfA/8UKi5Z3S9PusO3w4L1pi9ehnJAvfAj5F/9E3/hey4ZzbC/
xEHKyxUhLy+w/zieDD+ra33q1iIubp/OCdC91QK/HUopnNml6HH3qDXUoGP+
1voLKSwWarUNCt5XlODttS9+0+XomKj/KiqwikVq/+4zkLJVL8eUg+duWjXQ
8SAgwS7Rndz+ZOsk411dS7wx0J+PM0eTnRcXUWF2Ii0gl/Af2QyDU+eI+RUi
Ezs1ImpQnBE2fzcxv8njT/FGRytQ6pccbRpVA+npTTdkx7VgKOHK74xFJRDR
qo58+I0Gj/ODG6mJLNJ6MtlzyerGD1cfN3o9vwDxhS8lrChU3D99NWd3Kvk6
ye5n/9hfsXWUsmY8F9X5G3rjXPn2XFs8w1KViBfOwtDdd4l4Icur5W8KInwG
M/F6MmUCW5qCsrZvJ4MMGFANXuJRtKISNYWmbh5E3vaf/VT6J5G3rd9dNppw
iovXXXY+twNbcPbQuercv91Hj6+219gyi4coblke40AbKR/2fjK/WK0oC1Hn
wn4t2UXB0njbkts+f6uvWvpNubiah1Lp8DXP77eR6j4Itcz4ObcI8kYTTpQ4
0pBgPWJ+S5lFGr9/zR9rUsa46chD4CvnA8yBNlL9+DSgwH6xciGym85PqpWh
YfHpuvz6QSamqIjQHyQXIMbz7rcjo1RMzxgOFapnYuL2qPjZgWz4iXrP2slp
htBkVWc3s3q4fndtuUfkW8eQ0aG5RL4dpQvOpM5kIpcbOPPT6VJsej/YKm1B
x+uC+dFCIyxsyDX2270yF9ydrz91ClPR6ZAlkDKJia/yzO5eWQYG6uL37iP0
eM4Dyf29hB7X36V+KJLQ3RPDBnJbLTuw68yTVcqE7rY1MLj02K8LnP1erLY9
LHg5n4iOlqrGQGi/teJgIyQklZecM2/E5iibi+vnMaD9O7NGPImHQRm6fUpU
Owaumnsf3NhIqtP/smfBZt+7J2ZxMSS9NHxDGHl+vs4Tsp6xuBzGDUoSDyvp
OMLdEPdwP3l+eLdK5ISdTgkWvHi+DiM0/Jwmhp5XLCyMjJ3kZ1yBlO3f1tef
qkHmB4vvLb38/Oa0NNObd52D2knGcr9vkufDiFTNz7qDJfihbvB62io6fEcl
aJn1hJ0u3q15JpcLBee7VE0hKl577Qg5MoH8XCDTg8xJJ67k2uZji0mSvPc9
KjxsPagDkUycCbzgX0jw5LktFqeECb7aZapFMyF4cqKczV7dUg78A8qSX9ey
kGyQeeFITCW/jvRiupiiMhedctr129LI+7rJ8LHea5PVK/I/c58LGpQjRFLm
TUobHeVLRiL2ef25/2rHzXr3kNtc2D34bOYV2vrH8Z9C7gTL3eCCaZ130tm3
lRT/Wq32jcnJgWHys67UbxQMTy0fcBjix7vW4rqOBfFczGH6zI651grbkjJq
SUgRCqcrLfcNpIH3bur8ewYs7K8u15Z6XoR62+dp+yJpSNy4+2ylOZ93lcNJ
5edZDhIkb96e5s+GySKjz+9flmB+VP01ayk6Zk/MzdxWxAJt+OU0TScmfteU
ztNe2YxjXmwvy5JGOFtusxUrY2LL0lTbpRbN0Bkomxq5rRHyxzNiLm/oxjtd
i/UneR24cFruux2lGenjjArmm3VDdcVztUqZTqguEfKYOouB3LXN24oPZUGk
P9TYQYuCCAdh98nODGwT0hGPWZeF1JfCnkOqFKitr0GGNWPM9vwLrz9/+LSK
AQ+jLtNKNhTw69sdy1rfC1n8q55UNie0oY30nlq9/+O4H8pZaFhrxjRWpmDn
gTsuATv56zH2U7mktJMH8QK7C1cYbViXmKWbPjUL4d5SPzbKU3Di8IoFItsY
8EoTV38lkAV1jdBRtiwFMrW0ClUj/jzS2n7qeg48zB9SSMjq4a+zatAlZGgP
D24peh8ofW2wsXUxW3IlB58Uj+8qrqEgYDh7rV0LAxyP/O1VL3Kwc7zi1TUM
Cm6kDJje6mIg7MRKa6fELNydcFQuw4yCvrz6ulfH+M+lRqlVL1nPg0QYk9v6
sg3ban02Nu8rgn5pB4V1igamWoXjXh0WIt3ahhN7M7EotMvsw0IKtjJ8Zr7U
588TdT9vsqEiFxNN1KsNk/j+n+uiHrJehQuL8a03TD+1kPLqQ3nzfy3VLcbr
49rmu97SEHR86lLlkyxsl09UulpSiG+5GyuumdDQTd22LnUhi7Se0D5r5Z35
xP7N3uI+ndPfBKmhnmPXTzShPGSD9U7Cjzp7H13m3G/C76ROowvjyOsMAWkb
r0TP6cbMnxEvvK52IFxhqmPuvmbMamzLeD+pG1NM1R5auncgwak9PlWD/Hce
hD/uXK++JwfaHhFOCUUUsIO83dxrGJg2/Zqwr3wnvB72KzxuJ+Js1MW36TkF
v+7KDVpGZmHXA905Bw0oCDcQffjElYGUjmbpJ15ZEOjuL9HYTMGc3UMSBgf+
Zn/bBJXH4CK/Q9Lfhsa3f32/t8aEUC7Sk4XDDtvw4+LKOWtpOyJe1EbjPxX/
LV5Srdw3s7V58MveLhD1ke+H+/XPWM3S46F5n4Twwaw20jqG1Y7+90/ncKH8
w3bS26tEfrmrLPppXzUma/nsSSXwHt2HL2sIfMPXzO7Z+6tJ9SCZviY7l8lw
0rqrbGQjPbEZ3ELb0/ryTZA5q/RM5lAzpC7+OpXxg8hr6W1aPNsmmL6SOTtn
UzM2BepdXNPGwzH2/cXicztw+sy8LQGxTXC9JnbrYh8PjrGS2r0bOjCiMWTr
862JlDeS4X/K/1OLPn86d42LD/WsMw5e5HkvR08m8+6yLPwsC3fTXUnBvHFH
WvIsyO+7yc53Mpxs/WR1trHyDTIeS5Y33my+NWm9ThkoXamUIxF0FJkMduQt
45/jfjuXiuda8aCYaeBwhU3kd9Ng+jJiPapT4pe/ItZT/1NYu45YT9JavZkO
17KRc7Cj1eQKBQWrrON6Exmwzsp2N52chdY8qW+XllCwdsEko+Mm/H0pVtO0
LyPytoBTQWl2bxs4qx1n3SzLwr4+5mUHOwrGX52pG+fLQNyUnv3p6VmYs3gk
O8mKgpAcNfqrUwwivwqYvxzKRM4n/bNrZShQFp97ttCAP//PmR1+lgTP3zZh
jeEegudH18os9wugY8BqbtOPKfUQLLvs5C3Ewp3WnoKzRjUYfSE5++mOemzU
Hp0ZmEv+XdvlLfs3JQYQusjjQdjIvnoov7q4bMV7JoxnWdRNessEfbBdS8io
GeKmr+csPtyI0w+8HdW+dcDeOfy3PpWJW+c3vLbspMBYjVUkN52HqwkK61sF
20BpeBNueKgWQsN5C6/J8WB3w3lygGobJjNo6WXMWtL+vQOSUU8ZS3iwbiw9
kL6mDX79hecaOmuhydgUNdGoG0zqtNv3JDqRu2PZXDUhBtZHjxcMO1uPC0on
JLedbECI/DR91yoGIi18NX2Wc6HaH1f4MYuNzPgRRbvaajS6fM50OM5DkJKh
3Kn+NuT8XBViVFSPFQvu2Eudq4aP9Ze+zIRaGG5aOFNzBRvpO8s3fibwOWvs
V48QuHmKvdpEAhcZkKFltlWDLd0x92N+Lc6VavSWirOxqqfZYcShE0/dL1YH
jTCxea25kcchCo47WnhvT+biZ2yWW5VYK/Y6bur5Np1O2ndElg//wgtit6p+
dOLAVnrr6Og6vp9nfRPUX2bLwcrHi/dNI/xfelXcFPWBYqTdNdyZ0EbDd8qN
71fus3CMWZvtKVqCI5MOqlVzaZArObKxIJ5FqlMmSRVNlnqbg8MjHwTWsyjY
/MD4sCmXgV7BGRd7CF1pWCMyaYYsDdvO7a2aOsSE5VGhEO78Cmz23Xfbw74G
LO+XKx/UsbFeQihmdFEWyu3Fuq8vp+C8/LiBs+Z8P580FJPXY8NDZfWmk4/a
20DdmBJpLJwFX5MG75bFhJ/tMPw92Zg//rvpe0tFghe1v32/x/RHG2n+zPx+
75LLnSycmO8ZfngbBfkn02ew3fnzqC9gllI28pD7s43V86YN9T5iaXuDspG9
urZkwoV/8dKiNwHxDFzY2U3ZJVuNopzxqruCa7E1M/BltSEbWWUyBeLPuNi0
fItailArFk7UlDjYS/tv76946eYKLzcOHIT2hjka8ffX37/5evBRDgy72GlU
CzaaQy6OxC0rwY4n6rF7+2gwHr5cLv+chUsjp3uUzUoQbfC11F6Aji+vv0u5
vGXBxKs7ooywj1NY07kUwj4rVtAO2xL26VaV/96QnYOW/bGzb7dRYHMqyEqg
92+6Q27qaKomFwNZOz/ZFfJ5RRTDTj9kIxft8qUi1lUtcPRdnzXjdw5OSU73
zeun4EG9jM6DUfL7brJzIdLnWXb86nwiD9im3LxKRe9I34OyICbs2FdnizE6
UWBnoL1WkYWwbdr2QRXVSA8+sjpdKhuXp1zu3niUAoG1+T/WE7yQ19u/V47R
gLsXH40u6GnAGqEulYjDDDj4qloaXeFBh34kWk+/HVuc7p1ce7mBf3+0NEOp
dT8Hjss6r3RrsbFkaIuZqlQJrFuMZ0oS+xpXFtwV9oS/X//eJzPWvhSyc5ms
XjfW79afJCP5aH4LYk/FxX7czUD1j4M3HMpqSetyA3cWGCgzu5H5ct2PoKgu
tN5+wsynkveFktU9yHgX2Xh/VuKwS1w5rnxvbPSTqsGiB27Vqo/Y2DP+6u4T
39vQ39GwrECWCW5L/6JqHTopLm26Spzh2A7ht49P9how8fh9/9bqL0Q8FghE
WQa3YfOWiAt7hxl43KeW8TiXTopPez6sb7U4DxETFV/+3ErF26ris6K6TLwK
KVuutb8Qigz2JKYyDem1sXPDxrNQHtjblT/YiGNCRU3p5o2QTdb/PnUeoXMj
jW9PKCJ4YvK+dVtvNyLhRsO8qIZm0u9TwtdfeiedxMMLzRqR+qh2vJtsVFm4
sRHD5r96xLJ4MPzeIfk6vR0St2WpjqmNpN+t/OWfOyi7NWJLuBhJqtIPYPB5
43edDeMr87gI+5VclEjl42T3qmR9QV/t+q3s7Yk8UNItLEacb2P1/4WQraBH
5eHMgI7Flv1UaH6cppy565/ztz/dS/5fzc9jjce/5jEwv1eQak/sW9pk20/d
bZDQMTlSod4Kmb73H0PPMpAQZ5Yfa0L+ncif9uXf6+R/4WT1qP/Vecaqv/6p
/joynEwvkOFj7Ych63MgG5+spjs4NL4Y1eNC5ePiaNCctclt7kEWJLfVThb0
70Jm5BvLCXtZMCvJdVgmVU2KZ8lJym7u7oJxgcWWVeEsNFmlmlZeIe8DGev9
+7HwrPic4GZUVmq7hExpwuWjq58GBzaTxul1z/dWGgxCh+h/jJk5uQNVlbRF
Vp5NpPmBTA/OtOs0dRHOQWLexF3yrynQ3O66tjeLQfqdztOUyADZn1mo1N2T
JHGAAgm3hILEEIJ/spabrDOj4JhtaVoRtxa2z2N+l/ay4LDgdI4vpxp5ebP6
nQprYaE8HOsqxkY+U2RadBYXhba/7fvRikeS6dt3htNR9t1aZDCVCzuRssKB
pa0olcpIqzah4/sdWfEOYj3Bnw+L04n1TE7Vb/hMrOftoMKXNkLfWSrdlPMk
9N3d6p6j7wh9t/DBgG1eUBbOhI5en6BPwYc1El8fuzDw8uLB7BgC13AWSxjS
I+yQ9Jl2m8DHu8U0LLLLgptMKs1wAwUqjwa+3dxDvFfsvDX31mSBbl3GiFGh
4JeyycYbVuR9qmPlFWTnOxlO9rslJw2eyax3akfNA86C6YYErlfjdIg4Z8n8
X3Ao7BdFtwMT7VUdBWKZyPpAb7F6T4XfreWrVTZ3QD5ysYc0ga8N3JjIece/
jyO7/139nD2FUsBBc6bxSXcijznbG+5W1GiFXEDsrzgir5pnO6mrEHmVjP+Q
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
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1: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
DWa/8Av5Iy/4D/8YR36Mh/Xfjsiedri+wC/ejzzQL8bDemyDyyO2T8gPeuLz
gH0K7csGH8dehfFMs4/H9uuf27N21yfOCxj5gpEXmPMUyqc+so/rIvvUFPG3
JZrf5uchjv/A8Cv2BzE98CuUV6Z/8AP7Eu8/1nfoZzzWZ/YT8qctOi/Y41fM
Ht/g9hJ+hf62KcovmyL96HB7ib/fm9rHE4tzS4S+zB6jX6wPf1g/1i/0g/Xj
+jL0Ih/4h30Gh/2WDueH+r/OKJ5scnmgf+hDbK85v8if96EfMUaeyAf7EdrT
7PxDH/yM66MxPXE/jfeH/YKMnrgfFdMD/7EfYf2gwDH2HHrgH/sN/W1L1N9r
8fnoM5jzHsYDbZE9bfP56Ds4ts/IN4yPGiP/tTGyB10ezyAP5oN3pAXEcz7R
uOrGmV5v1HhkodfL9PdLvb5I/BzmB3WO4/6n5pOrPF8i/wCjH2+n9Kw/ytav
VPxT6gNtHn/r+Ese35N//Ck9H6sOU/2+Teujv33hQ51/37REtrGN/ZQn5QPH
+4arjtb39VXa+tst/rd+3L1rjL67PB5UvZocxYcPWr2uxvL/Wz2+13joWa+n
Ec9jX9T/VUT5TY3rTxjv93r9S+ulvVYvXRflt32u/1JfLlmezE0PZMMJtv/V
nm+gj19Pt//eW7pufxaf6vvyVl/9m63/subjZ2fy4nxrPbtS1xlKvaEqGZMu
+LLF49fWJ4cOHOeduz5VflX8WevbVxyu/ClamsxIGfy29U/eq7b62btJpyzQ
6/Tp+vnkPTn/5KNL3L5AH/5D509w+6R8yEf+5TYfJz5PX/eF9WXuf3T+U7be
eKV/TLHGK/V5rV98b6rNv9jlo/hl2U/+3ndUPz/9fVTfoR64zuqli60eMsjo
mevzOY+iL6dvSNJ+UdmhK239g3X+p4tt3U7T55pkc7qf+/CPtckD6Xo/HmX8
XB3VE7rFX32j9B3Rl6ml3XY+5ymfr5/m50H145lEtj+iWM/vnkxeatf6ov5K
Z5Kyu2D/Yqmfz+3vSVL1KBpS7PVzoevkN0z/Zzl/lN6Fau+WrHN+sF/ld13U
H18r+vviSKsPnr0u6j+v132dSL64IapnN5o8N9v6jVoPbdyUpPFD/4bMPjOf
9ZQ/jWIv5t//ptSrhk5qc/1W+UwzO/pBouf3ea9v6f5e9PV4P/ZL12+N8o/V
rq/o79UD7DvkHO0vlvXnXX+JfzgPSs/lyQGp+xlu8ijvjep1650/YPgD/8L6
9lTHSk+Jy+uf29eSyP694foPRh/U3i7x+fL06EqfDxbzunao+w+w8q9M+2s3
D1P+nbQ4eS01CMMKvP4Opr4k5rF8hPFvhfsv3X9bVH/I+pPgsP7QFdY/yyx+
XI4/7PLzhL0P63dTI314xrHqz5POL+XvUvd3+vwyj5fYryzzEflwhejDnZ9l
+w/PV33yy5QhJYa/Xu/8QD9Plw18zuujYKVngcdD1BPCeKtO7Ut5Zj/gn/Tf
urP+Lhj+qT3p9v0jf8ZVHl1ij147CPvxkP4cusTrn9JPqi2K7p90JthT9F/j
ifX+PvRL8CGNXr8Uf3Pm0Bz2PpVW6wPc5ytPcgO/eL6o6P/p1zRF9irDxI9g
7BH6QPyJfOL+i9L3tPWbF7j/Evk3Wn/w8TliTyZehPzmqR0opL5dk/ynCKww
hz1O63V7L7L4t7XW6SO+hz7yTfIr9GFI+v4p5B+rwvyycJXH90J+Tuv3jQuy
+wDIW/Vno++feAj/F/cv4Dfy5Xyl5vaPP8jOB/aa+Bz/z3kO+5VdPo6+Mg7m
/eQbYPIR+KXrtSRnp8vtKXT+hPX0ZtdHXac06m/OcP/DOBj5h/xYF8XP66N+
XlOkby1+/4Hzr3HzkBz+nP4a7w/1I9Nn5BH2J9sif9sa9R9bXX/wj2D0S3+/
1++TwB8w8sL+hPKZ4Rh+oY+6v2rHOl7l6+EPeD/y5f3gMN7P6u/Ux8N8r8f3
TzwV2ouMX+H53xv1x/c4DvW5yfoP73j8IuJ9+kiPv8N+b9Y/Ces7exyzPvSA
sV9hv2iGvx99Ib+C39Cj86v8/dQLyC9j/nP+w/5ts49jnxiP+cf5CPVpg89n
P+TXoy0/xb4wP93N7Cc7xQ9fO6Cv4i5utPjvCD1P081+N5dZHvGg3Y/qbnP+
ED/I66ftTIrTeS9s9PiT+Jx6l/qjKp3/Yb3qSZ54a7nlJ9PVH2zqUv711vt6
5I8PpvKteDf5lmwvr/nydzqUnktWSX5Rfbfpx7WtGo8+vl3Xe6Rd88/P3tT1
9mX7wV/LzzHvaL/31G5/v+631+0P9Zlfpf79yZEeT+APsNfBfYJ/bxJ+DLk5
6x/h73me91HfEH856D2vb2h9YJvZuSleDyCfYz39WRPVL2st/+ny/J/3Ef/R
n9Z6y2K3B+mP8wf0BX6xv+NThqy2+vjP6o2en5u9+mFUn5kW+YtFQt8hnzP7
O6rB8u85dh/rOem3Xnl0sfLrvD7fH/WM9LmPxxR5viXLP7UpOt/LLR59JVmX
vu9sy0/yeT8fPB/mB49b/ttt+fUjHt8TXxG/6/tWuPzxx1rveMvoeToR9k1v
UD17fmly1cDovjMtvji1wuNXlcc8j1c1fs70C3/O/R4ltzwR83cu9yWa/P6A
5n9zw3rsSbUSf65YZff3Dlil/L/a+qUX13j8ij+TNO+27L4N+sB+Jf7s3enx
BvrF/QDd3zbjd0vyhzTe+fm7fv8pvQ847rvb/b6O4KsaPL9AnmG8sdX9h57P
dptfI/ydOJ37YDVuP1UfSz1ew/7KvNvf8X69yr/Q6h+1Scq+nY1FuU9k/8RT
q229RSqfn5g+/agpWZ5ud8lmp0/Y/2WLn3/ZmKTUP/T6m+6vpBx2nt0XKrbx
pQd4PMP9RNW/BcmX0gnf4H5wjdd7JR+fWy372/TNY91/aT4zTfd57RSTx9N2
nh6W+t3zJ1k96x99ws/KUw1fk/d6qdK7xPSrxOuXafy+b0xWT9PxB70epvy6
287XTXafOKuPSb3mLKsntOXl+6e9S2u9fiXH9ak6zb8fLtP85nd/1vVK/iD8
e+V4tRftd/VpfXHMZo835L7vF7N6h9J3g9F3hfBzx312fpa3iv5tf9Dm79cW
1WtKJJ86YfsWlX/ut6bvedOHKR6P6vwFyvcdQ3S/j85X/3S24bL5Hm/jD6S+
PsT8y/g6qTdvWUN/IfueSZ//necP5IOpnK6dbPd3L16p/D+nQPl7y8pkaxrg
jKpx/ZVltx1u/mKZ1KFuWVaqzy0gf3vZ9y/kT7b7tw9ovvOLUcWqH4vUXncV
ZfWF8H50p9sPtRcZju/73pwO39Wr/DrT8sMx86w+/zm7jz5P5Hn+8GMVX1At
8h434xg/H2DOg7yv3fp9R1ZH9cDJUX5/j593HZ8g/ZRLerL8D/ugfpP6wRQ7
b5O8fsT62Cvlz6OOVZ4PRO+f5flMWL9cbvZ5pusD9Un0Veevc0w8KfzLZfXE
1Lvd9zXFT5Q2Jo+n9v/14z3flve9ZPn4Zdl9P8ZFX8fyfUKdvvfzhd5/kF/3
7HB5fyU9b6cV555Kn783H/nrCVb/Xmb6Ns7of8DwrXo+sR8reH6u19P1+dk2
/yo777d5/TKd/eZZWb2S+0/6/Gy777Uv4vcnxr+Z6h+f3Of5g+CzD9T9T1mg
8UuF9SMal3r9Xee/avb3Q/dnYPK9VJ2m3f1Xrd+e85LV67ifXx72Q7qz+5Tg
1J5dc4j6m8dHr9H6xQEWf97bkKThw+WXbfN+1d/TDUzYpv7vnlb313oeW61/
Uef2nHhJ+HHXOuPLbjvfvca/37g80+VOOj3rl+j4RJdXau5fPTPrf3DelP+L
rX420+slhw0w6LSRWT9Afl+41O55zXL+oP9hfr/O6mfE4xnW9dd6PKXnq9Hq
Ux9a/fclX1/joTXRfRa9D/iTI8w+1q9RfTjS4tUvrNV+43zj//zW5OH0hYPI
T1otX1tt+Zp9f/CdVZbvLJF857zHNN78OGkTPn70eJaPSzx3P/cZ7B75yfVe
rwzzhYf9/KHPab61dEsW72i/QfPSoZNqdZ2brJ/bvsz5hb9NV/veV7N6odjH
SQs9Hhd7MXU/jU/PmaPnc5/Fa2uyep/M76/VfHV4kff7RT1Ltnn+TLyn8XCN
2ofOopz4j+s2ej5LvEW/gvwKfcZ/wh/q8dhvcMi/iqj/VhHmU6Ot71R6sOnT
kuj+Y0PyvfT1Q6jH1kf1jo6ovtgR1ffjelJPFH/3RN8vZeNqj3t0/Z5djvn+
hX4YWOW3TPu9Vx6WIz4XfT5u+P/B7F/pa3J/B/3Uk8L8psfva4LD77G6o3yr
W9Z9YneGw3w8Wy/AV/Z5vZF8iXhN6svDBlv+xfdVGRY68se7v6N/TXwh8f/4
o71ehDypFyFPlVe7xJNfey7DYX+rKqoXVGn+1tfsmP3S32a/YPTjf+c3qfzh
V1hP7nb6lD+d0fdundF9kXrVmwncL6t3esP+eYvjsF+Q6TNYnh+bnU/uX3N+
wvsdHVF9IosniTfD/k1vdN7nOX1g4i/kDabeEvbTuqN62xrHxGNhP60xqqdn
/RT6L4yD9eeWhPye/F/pq3SM/UrZedSJWT9R6P5osNnjeVG/tDqSd3Z/iPhN
7ltsOtbrSWBdp8bjU/y97r/S9hfffxlv4/NtfFxUzyy1/Omv7i+474a+h+tN
8PhP9z8p6j9nmPfr/Odt/Fbvb4PDfvOyyN6XR/a+3M83+Qv8JN4N+4mdWv+Y
hf7ouvVVGSa+IF8lvgATr6g8GqP+cJvar2uoB2X9OTD+hngRjD/ie1HsP/ae
/aKPqh+Nfv8Q/ZD48pLsvhQYfmIfyc/A6CPnnfn4T/wLGP8S9oeaPH7lvGC/
lZ5Fbt91/YWOsf/oE/ob5hcTXH/QXzD6FeZ7U91+EL8iHz1nmbyQX2jvn4nu
o5R4/kV9jniJfl3Yn8++L2Y97jvBT/gN1sd2JHE/Ff0DE99Rr+T96AP0gfX9
dX5/SNfLvg8ps3pBmM/0Rd/j9UX3H+t9/6MtbwDzfurhYN4Pvayv8sr7eQVT
n2H98L7nau1PXL7F+z1y3kZuUX4VNmv9+MZGxf9VkXx34HWP9Y+y/HW11sPn
WXywoUPPwy92Kf9vt/hn7i71Z6/2yPzfDORbKT+2lfVJvvDtiVk9U+uXH1v9
erqd/wqtF1w/z+57rbT7Xq9JPH3DGrM/j3Xp9zDvG36rW+pLXR9afDKqx+rZ
G62e3aD1uM11fj9B4u/TTZ+/tsH2v8n23yj53rDrrL42v9nym7csv+nQ9Z4w
PLlD84up9v3es12aL33K31/Q75suGVLk9kvWPze7DyD5R89279dJftWR9WuE
7tu7/f6p/Nhh9/8e1fs+l95yWBjPX7rT+yESV9w/Sv3luNUqr/12JUG8OmaX
vv8Uiz9LZ7t9kHrMMcWu39I/W1Ku+jRrjva3/m71pZt7rD7a5v0Q7Xe1qzwf
qdP4e6jhT2qVP2dZPvbqBu1vjt2kz5/WqPn/KW96/1Hrmx9YffMF67/Zd6zl
G6y+2uT3obT+ZfdRGu0+6kvDrF60WPg9fvsIq8+t0PrkI1m/WOqvs7L7TCKf
OSa/ZztEnrsbVV43dndp/6fNxs/YqO/t3O72Li3H/Nu+7HsvvZ+0zOs7Us/4
aZOej3GVSXNa755p9Fzaoff7Vps/v7pL4+1v7fZ+hsbfW7yfK/HJ/pvcXmrb
8G0d7+2S9U4s3Cn3T+8q3KjyvWm32s8b+2T/Px7wp+nzK29pVvtUZ/ajslnr
lx9sUbvzXrP1K+07/VPt70cd9q6uNyyv9vYr1l/5Ul7v372ifyehtHSN3pe8
Susdc89olvtWb/7A+D++WeLHtoPekrj+jKEd6i++uFv3c26fnad271/Kc927
vZ8oduhPuzwfFX6cWOHxdRr/Lfwgi5/T/P259Vn/LP39/T/MvveW9y152/tN
2h/a6N/viz+68y3vv8v569+s/NjZJPbqsX7LZ1e8rv2H72ffF6f8SCba3+N6
hvjjOa/XpnwecXJ2nzld/+eTsvsgIv9bLV6pLBN6hw0r8vgqjfeOKyjy+tCo
dP3ebX7fUvorI1cn5Dd6Htv8Ppj2Nxu9vpDu59m/ZPm/9IO+vcvze7HX9dl9
NOnv/C3Lf6XfMja7nyr29Gr6Z3XWn8v7/UvpBzVn9wfFnpc3eT4n9nF6lr9J
P+JQu/+Ve8rsyf5qr3N/SSanB3TQNu+na/3evh+4YGFyVqof59n3aNet8r9/
oPZulscrisuUnlP7/Xtt7Q/Y/ZH7KjTfGDZC7VG+XPhZPrRY8+Of9Er+tPiY
Ir/fm6rX2H8xfv1wvfbjhrX6/WfRzzLb71fJNyebPM9X/btws9rH0snK799a
v+eC+WJvLpxm339ur1J79o7FM1fVhfWPwm6Nv39k/ZtDV0b3mxaK/c+XZN87
EN+o/mbfc+n3sFVWr7b+yJQq7WeXbfX7X2q//m79H+23/uPJHcLfKwbiUO0H
Vfn3x/r3Itbqfu8o1/r11COsvleu8e1B++v+ts2R+OeUf7XvyT6qMX2x/mzu
Fen37Tl9uMrr86+Hf1+jtEXz3Y0HeLwu9um8Q3X+9UssPn3U5HGH+pMzinNy
f2ROXvaXVJo/3dLp/Q79nqU26keMj+L/axUPt3rWtyeofJ62vxtzl+avRdyP
fjef/A+NfUU1
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAncV9Pzx8+99zx24heJkLSoCMmapShLIUtUSqRFWqUNRdKuULasJbJk
y5KkRUpZ2pAtikqkVCRkX/7zfuZz//d5vZ7zzJxzz7137jlzZubMzPlWaX/N
RT3TEELbnULIDF5t/6pZ2bkkhBOTEE6wcre11zC4u5VPDX/Crj9uZYHhp1vb
aVbuNbyhwWjQHhUuNry5lXOs1LFyuJXPrH2hlZes3GflG3tGY2tvZOWUxO8r
Z2VPPWNnK3sJ7mLlf4K7WjnT+p9hpZaVt63+ipUHrfS2Zx5qZQ+jf0/7sB+t
7UsrX+jZFa3sV+Y9+wvynkqCvOcAwfJWDhTc28qt9r5RVvbhnQYPtbK3lfPt
ne0MvsN99t6fDa6z8pXeWdVKtTLvry7I+2sI8v7ldu+pBptaOSc43sDKt/bs
9VYOMvxGgzdY6WplhpUWVi6x8qqVI60cYWWqlXet72tWZhhtd1opb8/+RrQc
ZeX71Gmqa+Vo0Qdd9QSh6xjBQ60cK1jTynGCtax8au96z8oCK/dbuc9Kt8T7
VtJYDrb6dVZ6WJlvtLxo8GQr64yGlVY2WJ/PU6cl/+acroaC0HWaIHSdLghd
jQShq7Hg8VZ+sndss7LQyudWPrLylpU5Vm6zMsbKS1Y6WPnT+n9kNHxo5VF9
3wGa/wft+gNWuls5V/RB1yAr18J3VpqJPug6XxC6LhCErgsFz7CyyZ71nZUz
DZ9rcJyVsVZettLJyj/wj9Gy1spjhq9JnS9aWGlZhkdaCULXpYLnWWktCF1t
BKHrMkHoaisIXT/YO7+3cpHh8wzew9q3Ms1KZyuZlQ+MhsVWHrc+i1Knpb2V
DmXo6igIXZ0EoesqQejqLAhdVwtCVxdB6OoqeLmVVfbu5ax1Kw9bechKTyt3
2LVbrAzRtzbUHFxThq5egh01Vx1FV29B6OojCF19BaGrnyB09ReErusEu1n5
xej4mbVv5Ufj7cMMVrNSFRrt+gArA4Pj0HWjIHTdJAhdU208n7fypOE3iz7o
GizYV9/aV3QNEYSuoYLQ9Yk942Mr1xu+t8EdjY5Nhn8nWkZYGVmGrlGC0HWr
IHSNFoTHxwhC122C0HW7IHSdnfiY9yxzz+gy91A/1ejZxfotNvxkw983+KaV
WjZuD1i9X+o6Bz2DPkLn3BNcr/xr/35gnILrHPTNjsF1zE7q01x6Bp2BzkHP
oDOutud2Tl335Ppmj+D3If/LhULf7BkKfUMdHQOO3kHnoGfQB0fZC4+MrnsO
M2KfsOcPSAt9s6+ei5yvGAp9s18o9M3+odA3lUKhb6ijZ8DRO6MT1z0rDZ9u
cIL0Tit7/3FWrkwKfXOI3oc8rxoKfUP9KHS7lXuMzlesTLOySO9D3iGz0TM1
RceGxHUPumaA9M55VvpL56xhfu39/aR3XrAyMXG9M8eePdtKm9R1zVGh0IPI
87qh0DfUc31TLxT65phQ6Bvq6BjwWqHQnTzjA+kd5PNsyWp0zfXSO7/BD0bn
60bHM9I56JtTRAfy/NRQ6JsGodA3DUOhb04Lhb45PRT6hjo6Bhy9s016Bjn/
sfQOuuZ1ZJZ0TyV9J98wNvh6Zh2jf7ADmgRfS6zNAaIJ2X6OaDpPdWhqpnqu
e5qFQvecHwrdQx2dAw5tWxLXQ+idN6zcJT10lZX/guug1PhlX6MnSVwXoYcu
Ca5/kPMtQqGHWoZCD7UKhR66NBR6qHUo9FCbUOgh6uiftqL1x8R1EjpovpXx
0klXWymRPkIXoYeuFB3I+fah0EMdQqGHOoZCD3UKhR66KhR6qHMo9BD1m4xn
brQyTPxxjr77Q+kjdND3Nj7bpZOQ38jBHqLjGs1hroeuCYUe6hUKPXRtKPRQ
71DooT6h0EN9Q6GHqOd6iDq6Bxx9NCx1ffRUKPTQDaHQqV1CoYcGhkIP3Sg6
BqkOHTernuuhm0OhhwaHQg/dEgo9RB39M1T0fZq6Tno6FHpoeHCeRg+NCIUe
GhkKPTQqFHqIOrof+rEH3k/c5sTOhA70EDrmEvRH6nIIOlhX2AjM4VjRNyz6
vD5j+KG2TxiOTLR7uljb5QafgycN7m5lN3vODIP1DX7IeFqfqlaeN7y53bcr
+szK/lbKoVNYW1bOld7a3/o0QvZZ6WClvZUXrX0Pg3tan88Nn2f4G1ZuTl3v
oLPQNY2tXtHoq2dwP3vnVQY7WbkCOq18Z89uYfASK9sz1x3oJvRFavftY323
MefYs9hNhleCTivl0S0GKxjcB5vPSjP0ivXZy9r3Za0bPh3b08ot0Gdtfaw8
Yu0X2zubW9ls732ZuZXNvIe17R593wUtr4ieWcFtWORGJ7vnfus/yMoOiV/D
nhxg7UusbQ502jOuMZzN6VArVe17Ghg83vpkVl5AlzOWVubCtwZ7WXnd8CPs
+gjDh1s5xEqwe6vbe/619tWMtTUdYs/f08pf1jbI4Pzg/DDc8J2xJ6zMDP5N
yOFn7b6+qfPHronbLPAJe2SggVDd7t3X3vVe8H0xPIINAz9MdTLCn9Znr8Tn
vptdPNzKLnZhisFmVs6zcqb1OSP63hheeEn8MM7e/bu1bYUPDc+snIRus3t+
tfKWtV9q9/2R+J446BtKx92uV4WPrPyZOF8wNzWtvXfq4/eflb8S37seG50n
XjW8p/WpY2U3eJG9v/WbbGVS4jyBrq9g9X8M/9XwgwyvZPj+VuYa/mrqPHJQ
4rYGNLGvmamxZZAqS98cnLiegSfYa8wSz+xq9OwSXe4/aP0HWjkkcZsZfkH+
N7HrZ0eXxeUN/i+6LT5Mc449jJH4n937MfNh8N/E7WNkFDyAnP8kuH1K/SPr
M8bKrXa9a3QZwdyz1vF/sMaPtrZB1udh6/N39DnCz8GaXqj1/Idd/z3zOdtB
c8Acxej+EeTAc9Z+Q+rr9UvWiJVHGNfoY8t+/l2rv6M1Od2u72BlJ43lIvHr
fNEPPw/L3MZewpgbPtLKUzzT4N9W2ttz97LnZyX+3TWiyzh4uIq11bS+NeCP
6N/Ps66UzAMfabCjZBty6G2t+0MNT6KvuT+tjM6cllOtVLEy3/rfYfB2K98j
0w22tVI39bXL/DBnrNFP9E2tsddSr39j8GsrS62cn/h+Afv/C6svs7IFOZC6
32pF8PH9TGtwZ+HI2h90jfYh9v5bMpeJM+3e13Q/ug0dgo75ku+28pPhLRP3
/6wyvIHBUxO3+48SxAZfHXw/sK/6gLPvuC11/xTXWXOr1WeofcQQKzfAU9be
O3Ebe6DVB1j5hTWeuJ8H+Vw38fd9BR8KYmN/HXw/cIj6rNPz/07dP8X1vxOH
9KmX+P34h44RLLXXmSPrf5mVcZn3W498SLwffptVkv/gTazP2VYaWLnO6K1t
pSly2/oelxS6H4je3xzcJqCNPuDYKv+kvnfl+n+JQ/ociBw3eLaVn1O3U/8V
38JH+Crfs3ffIb6cqjlmfo9OXe9Sr2F9uqS+L2ROftS81GM/xRjZc/ezm47E
d2b1utH3e8jNGzT/+ACTEtenP2m8f9Y4H6u5OpjvSl2nUq9l7TWjj2Vf8Sm6
Y7/E9yh1rLQ1vLXqZ6de/93whXZPtPedZW2VDW+S+vWDDT8n9XG+Xff+wZoy
2Eb43anX8XGNN7yZlfOsLLDyZurX71T/v63PFQYvK4OzD7g4+Fj/o/E/MnUb
iW/41uB6K++lfv0/9a+IrZW6TmAPwceij5DrifB79a6UtWalr/CRqmPnf2b3
rkCeWnnbylup64zu9vxuVi6I3h/90A4eRv5YnypWr5i6nYGNUcXaD45ua5xg
5bfU7Qj4Dj0A72Efov/HBfdVYA8gS68xWFP1xbpGex/pVeoPopNlI8wQxD7Y
z951YeoyCVmFXwN5hYzBZqR+ijWcbOXZzOu0o1+A5YSfbtf2KfE6diX2BnbG
/gbr2rWHrK0kul7BxhhopVfifoOLpYOZg+rMReoy7BH1w59wmd3Xhu+3ciq2
EHq0xH0O2InYh8AKwpfbO//gO61PJStHW32C1e/NXE5hR+5oz7gv8zZ8A/A6
fH5W4j5g6vtany12/QDDX8j8GvbDi5nXsSd2iP5t2E/wLLIAPqxv1/cucX/G
o6nrw/w7gTPFj/ALPNkoc9uTOnyBzQE/7hbdzoBnbpSdiY3R1EqTxPdRxwmy
d8GmrCaeaSqcfd/PmfsBS23OxCF9ykW3j5EtrFvW70nB9Rh6Br5gDR2q+TrE
vqkW9dR5Dt6DL2sn7pPCJsR3BI7tj3+rttrbRo+R1BZdh4m2bUbXianX0YH4
yNCD7aPvP6h3iF7P7ZI66js8cZ2En+cWuz4YG10FfVQluO4CR2fluhB5+JXw
ioJ11b5O+umrUOgw9NE3wqsK1lM7/iRwrveL7ltCD60TRGf1j34NHYW/B4hu
yufvBumf4zSPwOPV3j74/v3K4HMOzv4dOwO/JGwFPFF4feHoHWyZ+sJpq6+1
f5DRssmu/Wewr5U+0efnHWz9tFgDQGQ+Pkn8k/g2sSnAy6mN+h4a21PVDmyg
dnQZONeRaXwX38qz8JfybPagp+n5FySOs08Bni6c/So4cT32nI30fGhopHuB
jYWvz3yf2li8eYZ4kn0p+G7B4ZnCawunL/vIszQG72jtHxF8n32C6IFO7LyG
mpMm4ufjWa+p+z+baK3SXk04c85eHB9x1NiCYwMiT89V+8Xqh53APhgfZ2XD
bzJ4rer4XJupvVXicbdmWrfni86GojOq7YIyY3uB6Cd2yp4wf/+Fei/xQ/Zc
E/R88INFb/OksFubqz/wYuHnCqfvsMTpxj+LHXmJnnOJaD5Y39hC31VJegA7
FtkDXiH4+1slRd9WuheZjmxfG3xs8MHU1vpqovXyROIxNWyRmYn7PLEtnko8
tgU+K3F/I7r/6cRjTODEBrF5ftNzwJGTxOmwYbBnnhKO/Cdeho2CrfK0cOT8
jqnrLr4Fu76dxpbvAmdvu1eJ22fwz5H6rirB9y7sjfBZnRfdVsq/p4NoeAud
JlsKm6eT6Gmjb4SeXazPL2XsVCB9sWM6i87L9O3YPFNSt1vwca4QxP5pYDQ8
LH8T+hx/PLHgTwwuUv21xP3d0IiexQc2yfqsMLhY8/SZlSWJ+8nx5eAjP9z6
PAtfqo79hV/zCuSMwWWq4z/ABkIXvWtlSOJ1YhO9RM/QxOPT1IkXXCveeCzx
2DB1Ygfsaw6z9smJx1ap9xNN0DMi8Zgx9fGiCXqeSTz+R3247qF/H+H4plrj
F0PHpb4W+utdvYWv0fcSF6gfnM/A6wher/bWwrl+mT2zFfqRPVvi457HQoDI
hNX65tpaFwN0nTwB7Ct0OnN0u54/VO3c20vjxjwyVjeJ5hnCeQ7x/UGin/j+
zfreyWrPx+3mMt8yWDgx3FvEY88Ibxd8/pjHmqJlaFLQMjQpZOAw0dNf+CX6
7hvVZ5DmAxp4/wjN3WDh0MA7R+q9JcLhbXyTxLrwExJzGiVeAt4qnH0FOHuu
W8VzB2ncRmtsNybOw8RZnrPyZBmceMtZwcf+No1/P9F8hPivu77xdc1RvodC
1rCmN+uZxEqetzKlDE7MpHnwPdQ4vQu5d6fwN4QjE7h+l/pfJpz2rXom8Y6V
VpYK/1p1Yh/3CnLvLNXB5wtP1Z81w3rpK5z2tYnLgjxOdp++F3i/8GuFIyu+
Slxe5LG0BzS/wAeF9xbO835NXF6UxuZTh8w18GHhfYUjT9h3TBD/NBOOfMav
OFE8w1zdoTFsI5x5maD72bPAb5PUf6JwfJLEZh8VX40Sn+0jfmaN5d/6mL4d
Hp6cFN80Wd84W3x1YvC8kcfFP+gl9BNyAh0Bjp76WHyS53U8Kfo3a/8zSboC
vkJfbNG853kXUzSn6DH0Wa4fwC/WOmIN52P5jMaW9f6s5upx4fU1hqyBMaLl
OdEDH8K7Y/XO5/Ve/IvIl0e0lqdqPAdqzJkv9ofYCuhWfL8vqA/+JPxL2PXo
yZeSYh2B/6lvR2fnvgVwdCLfOC0p/ADgyAfegwxdKRpe0bzDA9PFM+xZp6sd
PY6sXKM5BWeNY8MgT5GlNwlHjiHjX9NY3S68tXhtpsbqTuHwIOt1lsbqXuHM
EetltvjkceHMBeM/R89/XPgYPf91jc/twunLvMzVe58UPlbvfUPjdqdw+iIP
5oke1hVxSdY+kDhlN9E5X31Pt7GalLlvF9uBmDrxdGLZ4MSvsRcWCm8cHCde
jO1AXPuE4HVw+BxZRXyO2Bwxurf1XmyHd4QTCwTHD8++FhsC/dMSH1zidfIN
FomeKfouZCDxvsVJkdO1WDQQ918ifF3iOV7UiR0vFT3fJJ4/tFTjsSwp8nbA
u+u739PzuwlHj7+nd+djAs51ZOkHeu8S4d01Bsv1/PEac/h5TeJ5cov0Tuhg
roi9s/4vkv76SPwD/Fhj+6RweAadi+3RVc/8pAydnwpfJJxvQravEM2LhZ8g
Gf6ZaF4nPH/v58KXCH9LfLNSc/GN8JzHVglfKpwxQOZ/oW9cJpxxZo6Z6yGi
fbVoHiA8/741SfEda9RnhcY9n/e1+j5o/0o0zxaef9+6pPiOdeoD7V+LZuLk
v4i2tzT+jPkqfSd9sDPIicE2qSm8luC3wrsKpy9wg9oXCec6a39jmXHeqDnl
feRksJ4uFH6R4Cbhm4Xn/LBZ+CbhyIfx+i7maor4aqzuJ6+CZ7cVfrngD8K3
Cr9I626r8B+E363rP6r/UuG0Ixu2JYU82KY5Av4kfLFw+iIDGHfkADHbnzX+
KzXmPBtfCPvA36RnwfGB7xM9DrxdPPWr7t0uHL57MvMc5d8Sj78RjyOG2hrf
b+rx0b6Zx+HyWCnxOOKhP6bu76e+K76LtIiJAvFZ4b8ndoI/ipgcsTl0326Z
x5vzmCIQn9LuxBlTj2Owt8bvit5kb8deD1t4u8E9S7z+vPV/zkqJ4c9kHrcg
962yIDENfEjEEvGltLA+B5Z4/djU/UwPBI8LR6u/jKzL3C+Js+Btgxel/nxi
zsQsGaepmX9/Pi5AxuaA1PfS0Fy+xP295A7gHwbiD8bPit+VGOSr9pwRxItT
jxESK1wiuKvw0+zehlZa4o/Ez6P97ReKKRCzKyd/dh6zAeKPJAZHzAV/xZ6Z
x2vyWBoQH9he8kMTdyF2Blxr7f+z9p9St1GIYxNbZQ7vUpyLHOnyxGrTIv60
t+IDxIDIqXhYc47dw7yTcwJO7JuYBnGOxww/x55zfup1Yg7EIYhBECfYTz7d
A0rcp0/+CL5/YKm/P3W/DN9YXXh58c4BmotX7L5piv8ukxxjbe1rbTemHnO5
PvP4BHmXrAt4CP6BLw4Wb1yQuQ8Nf8hrht9Uho+B1UVvVdHcKnOfNPWDS5z/
yEfAzwk8SXRWF82VhMP7V1mfTtH9Gdx/qHwKtGGPdDG8seGNrFyq99RSnzaZ
77+pn2TX68uOudpg5+h2TS3t0dEz+ADqWHkz8XyeI8RXs1KP71I/LfXY97Lg
+afEtIhnEYfGB4r/Ez8oOHGW1zPP6eE6Mca66sO6PFp8Wk5rdnxwmbRdMooY
B3NCXGOswWOs3A9/Zb5uHxD/ws/EIxsio0q8Tm4psUbijOR84rMinnha5rxO
HRuc3KdJPDN6DgS+/rOi5xG9qPb6qefMEJsiVvWm4f0yj+uTk3tA5pB2Yu3E
3Il3fZs5zfh5D8ycp2ivYM/cUfk5TaPnYYCfE71O7g75Bg1TH+eGGnfwsZnn
AZyu8W6kcT7L2sqVeJ13NtZ7kcFnaK2/mflZAnzoCzKvExtFXxBfYS9WUuI4
uoNxILeG5+S+Cezzu1LvRx9yTMg9Yv96pT3vXIMbrf0ew+/O3NdHnJV465HB
/YK0sa9hv3Oe8Gb2jOap11n/yAECBswlc0oMCDl3gXjyL4OjrdQs8Vgh7eSe
ETNEVqfi2wuFnw/vp/6OJZnHvYjvtU09Vg9t8AKyCbmE76ql1sWTqc/XE9b+
mN1bUf6yCuoPH9Wy619nfg/rqZXuJcZCzIX4y316J981GZkhHxlr7lKtO9YW
eRvwEXS1EW1NM49DQz85O9gBrJE5op8cg236Hvr3sD5XpEV+HhAx09Pa26V+
7arM87TAq2d+jolrowXvCs7X8Dl6qT96UHyPf7691jK5V+DENYAd1H6dcNYR
sKPaN2R+lok4CXKohb59Y+bXyNvD/iA+R2yOvL3OWu/Aq4WPE05fYBe1d0s9
Jwi9gw8DHD9G99Sv0d4r8/wh6uio7mq/yOi5MHq+3XWZ+5d7pM7n8Hg7bLzM
c1ipk+/BmH+LTZj5NfLwsNGYI3JK4eX7NO+jUs8dI+8O2Ft9kA3oHXTdDfaM
i6WHmLe+mrt+wp9lLlKvg/cVjhwmn558i+no/8z70ef61OeDufgz9Twk6si5
69XeVfcyVr1EJ7QNTP25PPMG4chVZDN6k1gzOQbEiKPhnTPnLc7EDU49TrpD
8FgpOPld5H4NVnuXzHM6qXfNvE6O39DMc4yIlV8Pz1sZAu0GR0TPo5+YelsV
5jfz/EvqPTKvk4NHfiW8RjyOdUx+JPIWGYgsQ46R80b+4xvi25Hi3afUzjh8
aP2XZX6NthHqPyb1eWVOP85cRo/WurxdaxPev0P8j5wfo/48Y/cSz9/CNiPP
6SHGVjhy+8zM++Q5msNETxb9+fAe/EY7ewRycMhnJfcGPxK5KvjNsNGx1Wlf
nHluDLrg2szXA2cAOedAf2QysZp7hCN3kD/IZ3KBWHvkVS5Qn78M/yzz8xJ5
jOde3ft55vqA+9lbjNOa3ZB6bjx56PDO/eIfbApsiz+i576RI4LuRbeh48jh
wLbF1iVngzyOP5W/Qc7Dw+KrmzPPF6WOPYt9SyyO3IqJ4pkzMs/VpE5+AToC
Pbgmc3sx1xPAg7T/YN9BzgM8SF5haUwhdXwGPJZ5HZz8Q/B31edx4ayhJ7SO
1mayS+y5xwgSX9spc/5jrkdlnqdLfV3m+x9kE7k8QPZGnNMgr+zk4OfywDmv
QW7ZM2qnDXyD5Mazkg9XCL9c119Xn3bRc9KokztMvj7xYmLK4FcGh1OFvyCc
M1m/pl4Hnyp8jvq/qHZyTl/UM4EvqT1mjs8VzS+L/mnCHw2+d5omnLxZ8INK
HL4iHHmFnEd2leaAal6QJ+C36Hmv6vnkIJCHhM4k5xKcPHbyTcg9Is+IfCNw
+yuFM4UfIbyG7BDsj7xtlvqgz8nJwB4gLwMc+QCcI/wy4fTtJvqRzVusbNaa
gd65+kZio8Q+M8lX8miRseRGg78QHM4TPlg4fbGj5usbZwjfVTKDnCHkBnlD
4Kxx4ALh9winL77ohaKBXDNwfO+VVQcnJw08qu1t4YOE0xff+TtaI8wXOOur
tK3MOgLn+sbU5Uh+pgXYPnhe/GK1bRROXjSQa+wr56gffciBJWcFPUsOBTh5
Clt0jXZyaMGxP8lpJca2j/Qy8mqL+HGueIocP/qt0ns/EA15rjY0bDL4Xern
lzYLcl4GnuZcUxP1AT9FbR8Jf1o4fZH7nCHBZzxU+DDBT4SvFk5f4KdqJ6cf
nNg9sUK+i9gBOYIrNEfAz8rM3Wea461Wfkj9bNh3gpz7Icd1pejcKpxcIyDX
Noj+VerDuH6hsd1d+BaN85caw3LCkZlv6Hvyb1kt+n/SPczLY8HPXzHmC4Ln
kZBDgl3QU7YB17/SOOd59o+JznWiOc+Xgmb44mvxBuv8a9EM/Eb4MuFLxSPr
NZ7EZdbrW9aLP1aJ3m/Vd434+RLxMngL6cqNZXh4o3g+H3fGcLlwxh+4qQzP
bBJv5XzG964RDr8Bt6h9rXCuVwt+FrFq8HkGr6u2HzQ+nwuvqz5by8z1VtGI
bwxfGTbINZnbpuidVZnv/9n742PC14TvkLwP8kDIQ0S/oe9y3Qs+2dorZK5j
0Bfoit+E43/CH4VPEX8b/jfyL9EJ5D0epHxQ8kLhi1Myt4mx+8i3Ryayr/xY
OLLxpMxzrPP86n+Fr8j8u3Y3/DjDSV76/3MZmfu3Ts78TCA4OpA8SWRP48z1
HDoOXyjnK+YZfqLwHeUj5MwCuo68TfC/ou8bSu0DyWHOqCKTyfEmh6b0PGLq
Pll8APipdtPzS4Tjr2Jfzr6RPeOxmd/D+OOPYV6ws6DxBOnj0jz8zP0uX2Tu
S5kYlLOduZ1VmjOf+XwyZvgHmRP2Z/hu2KOx194nc98L88ZcMnfkPuOPY2/B
vpC9Nvtj9Cn7/N3kmwJHt+L3wL/0UXDfEjh+kdJ9SeZ7E3w2+GjeDO6bwReD
Hwa/CHY2Njb+DHLE8X20jJ4jjt8CfYgNik5cmTkOb7BvZ//Ofh8bnH0gdnhb
4ehw9tDsqbGtOBfDHrudxgEbGvt5nHD2r+xB+S0OdD77Cc4asQfjLAz+as4r
4eNi/NkjsG+rnTnfskfjTDV2JfYudi96HrsW+5Y90ZmyIZcGtyPB2U+wJ2DP
wL5gZ9nwHRO338HhL2xt7GxsbOxo8pZLc5UzP+M0WWsXHoJ/WLvHaS2wRjmH
Bu+jJzm7jm3PGj1RfM66rC/ehsfBWa+sM9Yea431dLLWEd99ir6dOTlV8/KX
1jDz1sHgTiXOP3Win2duoPFjHHPfUkONJ3Y3dnjOy6eJt/Ex43NGZvQX/f20
LqGRtYm8RG4iPzmLxL5iosaYcWfv9olwxh8+hXfZ0/QRDg8fEZ1WzoS0z9zv
w94L+YF/HN8Ye5Rz1V65xO283MYDJzYBbCac3D1+bwV/9YWZ4/zuCvACtQ/O
/Brt+Hfw8xB/wAeBLwJ/Nr5qfNfETTjLSSyC+MTMzM8+ce6Jc3P4u/FVz8o8
JxufNNfxT+Oznp15zhn5ZlzHT40fek7meWP4z/Abt9WYsG/mvFNdreMrMvdL
sY7bZe47YdzwP+J7xKbjvAL2FefewJG35LF3zNze5Hd7rsqKfU+pLyw47Cyc
tXt1VvjKwPFpcA6xS1bY0V00/sCuwll/3dSni3B8Gtgd3bUe2X+Az5BN0kM4
67Wn+pwrPmCuoesa0cbv9rBnz/cH4OxxgNcKR5b0Vp9ewtnjw2vwHHvppzOP
7RG/miocXTY3cx834wzE9wdffJC5Xwyf2Drhk+G9zGMnzAUQH1YfyW/WIWsQ
3cgcYOdzXmCg5gXIGcUKJY5zjXMEmXD6EFchzkI8jrOD7O2Rc/D2LeLbCsLJ
bwEOUfty4VwHDlU755g5Y0d8jfN64Pg8icUNV/ufwperP9c4+0z8bYT6sDfn
nCDrGkg9l6+j1E787tbM1wjvGa13jRHO82/LvA4+Wjj6Asg1zlSyPyVvHpuE
81vgeS79HWqfJ5zr+KHwRxEvoG2s+vD7RpypYr9JfANbBDuE8z4DNRecvaLf
dvUn5lde+u4u3UtOL35+9AX+Hfw8+H6qlfj5lTz3GRx/y/jMr+XnXMArJq5P
xqs/fe9T//uF0+eBzOsV5cMBR8YCucbZT/bUfNchweXQQ5nLn+olHi8lXobM
elhzNyHza7QTVwUnDkusbEJWxNcmZi6vkFWPZC6japR4PA3fNXJtkvo/mvk1
2om7gddO3cf/qPoj/4glYOMg84gHtNK43qmxxQ45LHpMhTMa2CPYaU9lHq9f
EBwSpyRGSawSnDg+7U8Jr6zz0ugE7Dpi5NjbnBvgrBBnB4if49dgmRLvfk44
kPh6mrqvgz7EW7F5kRfIikp6DnE65Aft2PsvZ34eqfRsc+YyHXlO20t6L2dy
icmi9/Gx4XPLbd7pap8mnHbWIL9BsFzr9FWtR8ZshngVOYG9O092NTjyg/U3
U2sQvpgl3mBuZ2t+mds5ml/Olz2nb39B3wLN2IyfZm4Lt9V3oZvwpRJfIxeD
tTZP645ziMTauP5u5mc2eM58teN/Jl9jvnDaFgjHPw1OnA7/6ltaa3cLZ60R
73q7zHyBk6uAf3eh3ss73xWODYItgk8ZXYqsR86zB8LHjX+beMXSzH2fqw0u
Es3ER97PXP6je5H7yHzuwTfeUd+4WO+i7wfqzz4MWYwcRqZhEyPfqgu/VbKK
fRcyClsOHBmG3OZeYgGL9C3QAx+yB8OG5Zw656fxDfA7D5zxJ16PfYjtjh+Z
MWMcsW2x8djDYM9ixxO/I9eKfQ/7Umxe7C/81+MlZ7DtkDlnCEfmYCfiw8VW
ZE/GuXHk/3bpyMnB9SQ4e1l4f7Xo5xwQsTDi2sQl8TuzDjjXx/k+9kfEvIiB
cQaI2O636s993M8ZIvANaideS9yWdq7Tv57uW68+xNjo30lwo9rJheHsFXu0
K4SfJFo2ix5ycsE5f8T179SfZ0EH55zg4YXi2wOjx0fvDP47GDwLWUGcjHgZ
cbTK0XFirMCtwjl/x9nAKcHzKsCrCXKNc3k/CZ+i/tSJ49PnZ7VjN4DzDOAv
aodHOHOVn7cC5zw+vz3wq9qPEs+w7mj7TXzFeRd+E+Bp9Wefxh4N+/h33Yse
x4ZAXvGdxA3JuWI/R3/68szfde9w9cdG4Nl/6fn8/gZ1cgCA/2RFbgA4tOAD
+1f98edx7/zgY0seGO9G5iMLkFHE/s5SfJ/4039aO2n08zwfBH8eOM8Eco13
YQMQf8IeYE/I+VlyjTpGPw9JnXOnJYrL0A5OXKYUCj9a+F7S6dgE6HfsAnBs
Afxm5E+Tq8z5WnDyeTirtLNwzuGCk1tFfhjx2nbBcxPAZweHuwo/Rjh9gbup
nd+NIV44LXhOCfgeOVR7PeGlZ+Cjn1OlnfHm9xcYc34jApw5Iqa/l3DawInv
E+8g/oHdxW+h8DsS5HIQ36ouHD4mLwU+x04jHyVv21v3Mq/ML3kzFTTXrB1i
nRWE0wZO3JP1R24Na5Dz5uDIG3wvFYXTBl6afxN9XKZpHMBZ60CuIUsOiD7W
jCG08l09NP5cY60jA5AFyFnkBvlPyJY8F+o/0V45FnKgsviWXDBywrBL2c+B
s78DVonF3gF8gObhkFisF3DmB98+5ySxmRlf8EywmtqhvbzGlrOG+I2xr7jO
vPBbH3k+HzxIew3dyxo5VGuH9QTOGsImJQ8Su5RcSHBsFWCtWNjY4PTF7iPu
xn6W2Bs453KxBQ9TO23g2IVXRo/V5T4OIHE8/Ah11EafOroXeIRw9s3g9OUM
CL/bQC4E+Z3UOQ9CjgT5fNv0XUHfSJ3+9CXX4kjdS1td4axv1jn7NXwu9cqs
HXBye/DtHlNmPYITY+XsIb8NcXDw3+0Dx1/BuEIHNLDPqaF5oQ9nXImfkqN3
vPpj77NnWyK7ERw7H3iicGx/cPpiy7MHwJ6fILy29gUnCceuB6cvdjH5iNjG
eW5iKniKcGwzcPoiq+Af5BU0HleGzgZ6L/me4OxX8LU0FE5OIDh2LPA04di3
4C1FP/l97DXIDQRnj4IPppFw8gDBsXuBjYVjD4PTl3we8nvID8GeACfPB3im
2o8V/eTXsVae0Hrh+lnqc1v0PCrW9bnRcyDIcwNSJx+iqdrJiyD/5GzhwCbC
kV/gyDr8YOR1Ea/nPBE5ZOQnvBn8d4eI4Z6vdvqQ10NMixgWZ4+4hxy00vvU
h2c31bugD5x30odnNZf8xI7ZLNuB3/HBZuBcNu3IVX5ng/dh9wIvEo5fmX1d
vo5bav1iA2Cz8jxibdBJTJ9xbaWxvV/Pgn5+t4r3YocAWwjHd9lK/E87/d6W
zkUHo5c7CEf/wofoTnQqv5HGOfvaej75339I93JeCP1LDmxrvYvz6PTHzkHe
IH+QVch2bEfsQvTB79F1ANeRQcgcrl2ud/XVu9EFwCuEtxFtrBH2EYwhYzBd
12ivo2ceLp7upLXAuumkddRe38z35t/PbzQQ/26vdvpepXtZC1drzXQWfpi+
+1J9ex0993CtU+7lneznO6t/fj9rsLa+n2/HBmsuPoGHwLGle0fP2+siPu0m
HsjzPHoIdi/DV93Vt6fuvUu8D04uB/urnmrvoX74Mznzxe9QcM6LvCpw/C34
HHsJ5zcrwMmR4LesrtVzsE3B39cze6u9q3Dej13bR/MIj/QRnwD7lpnrvuI5
ch34DYrSOFTi+DGC/dV+nfBjNZ7XCe8vvKlov140418F55v4LSjO9qNH8nP+
nHdjXQ1Q+3sG34meW8F3dNV35Tnx9OV3EPn9O37HhvOw5KCRn8BvJfKbieME
bxI+TPWhwX//42aNOe8fIhpKx1hz8L7GERnGdX7fam3wa4N170jhfONg3QuO
3QltvJP7BujeQaJnmL51qMaC3+4bpm8hT3248GG6xm+nkGMxQs+H9hH6XuDI
MjSM1LctsDIjuk3IuwaKhpv0LsZkocE50W1C7LoJ0X9XhvjDN9HjEvDnEN2L
PXxXdP2O3EcfkPtKXOLb6LGJ6dH9IMQJn4ie849DZJvh90SPp30fPc6D3+YO
wz+Pvgfk2Sv1/F8MvhQ9NnhndB/aguCxwQei54hB++uif0x0e3mS9Vlu+AfR
Y57EYj+KnjszyuCt0fOLxkWPQeSxiA3R4xH4WjZH97csjX4P/TdF96Xg72CP
hO/7EWubGAsfOX6XLdF9Lxuj29PY0t9F9zXgt7rX8FXR7aUPDT4e3Q5FHz0Y
PQ78jMGno/YXiY8jY4gfj2e9qL7T1J/v+1rfyDwQ+2EueAZ7FZ7Db1fOji63
xxpcEj3uNyn6c/ENbhdN0MNvkd0fPebzM3005sQAl2tsPzH4WPQY+1SD86Pv
SYnrv6f1iz3xlub9edZTdDvxq+i/uYY9fB/rL/oZ3MUGF0WPVTKW0MF4ro8e
6yIW9qvhb0SPvRMf4xrt5Pe+Et1n9lx0vxixKWgkZgmdn8Yi9g7f3S7ew66e
FT32yzpYq7UAL+APgh8YD+JfjAnz9r7Gilj9iugxfvj3bvEwcXX4Ep5kfj7W
HCHblml8voyeK8BvbLBeX9OahRbiRtBDrJM47TyNMb4GxpmxxLfJeDJ+xPsZ
Q3iZ+Yaf+Y6H9S3w3Xjx3pTo9BH/J+7/VPTYPz49eB0+fzH6OmQNvmpwe/S4
+szo+QOled7R+QPeYC9yr57PHvW36PvSR6PHz7ATn43u6yR+yFyx3pgveBPb
Av7Ep4uMuE28s038Mzf63DPvk6P79/Dz4UO6Q/P4UPQxZTzJO4C/4W3kGTFW
ZBrfkecIsOlEFiAHXoj+bvzKo6OfdcEX939wm+n3
            "]], 
           PolygonBox[CompressedData["
1:eJwtkTsoxVEcx8//nEPKJGUQIgurRUqZDLLZLXcwumUwmhEZCEUeySXlXTeL
R3nk7Q5egxQWi+fgXoV8Tt87fP6/7+/x//3O75yKWLyl3RpjKsFDms8utBEs
xt7BFnTgVzljztCnUE9tktg6+hA+0M2wgX6FZ6cet+gByKALiW2i3wLoOLGh
7IzQuxu/H/0On/jzzFhDT8MUuSa4R0+AI18L4+grKI+MyYVt9AzkOZ25C1uD
X0BuEtsDD9DgtMMj2lOXwO7jr2KXoYx8I/Ejr5lh1hf+CfoA6px2SnntGHb7
tdqtD2aNdgy7LIR6q53C3fTCqNEdhdlpp9mJbO9ryHGacYEegSfyP+wwHO4G
LKSIVVPTSY8d/G+4gRWvs+eTm0Mfe529yOnfJYhF6nEJY/BHr9JIb5mEVqs3
HUQvwgv5c8ig97zergT7Dy7XV9Y=
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/Hv2pWj3Ta02WJbKyIxJtGYyoxMTaWdypaKDjmapmZimi4N
YmrC7roWKUS5Qjkqx+YIJcmZ+746UFHCOsN6vMcfz3297+/n9/l8vt/N69Kj
oHtKkiSz/HkjNUky2NtpSYUkuaFikjRlV6BZ/IVpSdKAfw3/NTpPbS/x29hT
aIp4Jq1h1hS1tdmVUF08J+L0HL2avq9npf5+tB3+UP8YzZPvrL85u5q6A3S8
uj10nFwtsWbsUajHzlY7mv2p3P20CdLFX6Wl+irROzBZ/qJnXFR/Wrwlfxo/
S6441ireR6wmv3c8h34m/g39i35N92EV/uavpmme84Da4ajIzhUbLXcy+jAB
+WJd0BY7MRIj0M3zqtD/rWWzut+xBWOxN2aYWVW+jN5JEwwT70YP0xfpIvoL
3YC3MUnZtdaRZ3a63CL+WfojFuM7HMMgfB5nE+dAb6b5YsXsFfQ4RmIPluA0
lmISfvWcAVhr9ta4L3q3sBO5D7Ebo3ACs/A9Wpt7L1LVdqStkKN3htwLdCl6
4h08gUPi7enTGIuFqKv3mThnLMaz8XsjjqfMu1W+xDJyYi/F9tqD99AQlTFM
biiGYDAGoRhFKMRADEB/fIByPRnmXDL7brrR3A3YgaFYg5+wDcvU94kzsoYy
OkRsJwbjP3yB6bjLrPvi3qAlzvCnxl3CKuzDeNT17DHy18f9VjNO7AA+wVZM
RIr8PfFu4mE8qm6u+Fr2kVgf3Y+5mBP3TOw6827CevZKrIt6DERhnC0eUvsg
OiPfzDp0jPgc/Iz5OIVDcSVpDTWlak7xN/Enx53ER9iPC/H+y5+gLWg53S7+
FcrivcLs2Ee5f+L+m3OVNVa3B5nxXP4Zuhyl+Bb/oijOwazmsafI1tOTNjKn
Fc6zN9F1OKp2Pf2YPk+fw2ZzX6eZ+mpiuNwujMBM/BDnKt/GnCI0VLMr9iLu
A2qzv1TTiS7Bm3gLBTgo/njcSxRiQXzX9HeIb1m8t+iIichGV1SWb2JuB0zg
38JvFGfPrs9OZ89nV6EN+BvjDsd8fv34FkZO/CXaI77RsR65c9bSlGYg3Z62
o/PECuKbhZlxh+iN8Zv0t+Fn0eXml6ibGvdUX678pbjL8e2V2x3vZvSpvT32
W66aunfZfdEYVeVeobPV57KnsR/BBbVn1R4Tf9mMBXE3xVuwy9l/ol7cPT1P
iufQFWp/E0+LePwu/dNTr/zPugyYa97x
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1: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
gIq/ft72d3Qo8pcL++//ffGWhG/aoXxO7EY7xEY/HdZvzcKPAI9JimcYRHsm
1V8knLQuyQ5JdkuyB5L9kPIaSS//7vEkPZL8eqh8gOS/U82C92281AAV0euG
vysa8Lp2vmiLH5No/0PlaUOVz5DPNcTxpP7MUOVA0tdQ9TjUeUhxkoQPVS+5
hj1BE6l6qve85yRfqp7qrx55TY2qp77day4youqg3ChT8XIaG4cPd63xCKsg
1t2keUh1Lml+UvwhjSf5OykvDBUn2cNQcdL+SbyRFG9J86usYgTs5gmxMWfc
lf77XLyf3O666+vQ89pQx9eNf/7C5ng2didblxiupaFxmgzjvAOTWGeR7JZU
Hw21n/aH3BRdur/XdvKxLynnquW0tv/YfsIdbolq/+Bjo+Lx8sl5reg7mV0g
oNUQ9U7q8zxqtEltZAvgvc1q1KuJHTBQ89Qu9m0aMu8i+dff5XekPgkJJ9kb
SY+kfQ61T07aD4kfkvrDpP4eqX4can+PpHcS/v/6/EPNF0PlgUPl/yQ/Gqo/
kuRDsquh+h1JL6Rz/bvHk/Chxoeh4iS9/F15nIST4hLJfkh6JOl9qH5Ewkn5
aKjy/HePb+B6FeurZeOGMMlk7xIa3i0wNL264z/PK7ra+9ztFgiQ5SYdlRby
n+MVQ837fxffIMVbkl39u/nG/yke8me9k+T/d/ET0rlI+iKd6+/iLST9kux5
qHbyn5p/qHzj7+ofkuax23FR5/W4T3gbyL1kalqDBfOm9c+oJL8/CVFK2j48
nomYRZEHeNVNoPHi4o48aiLeR+cZeRkZrM7DO01DP+VxdJR6HjSaM4FFxEn2
duH3jPcTVIvhsDki7tEBBo6maOWEaLKJuGrepWkV0zpw9s35vawgFmp0FxZ1
dtD/l38dmGm2N2wiD3tTVlpOiWKjqPHe413sj5iS0prxfUE1sg5ODLnHYBP7
ObqKN+LKSpqhe/hJbq1eE94tWdEUtr0ZI5NEfzmN+QjpeVHT5/MY8BfvDLWN
Y2N1kkuV41gWUh+qeSVPaIayzedzXK0mWM7o0973vQMHdnz95lbNQvotv90T
2DTAItls48gCHFooGnA0gI5E+rW3aR4szD+sLhftkoOiybKjKwJpmPFL3ndm
DBP74thKru7ZmJJ8YttNqi62PyK9PceBjNupzQr8IpaDjuH97x0P0aB07nHJ
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
8u+WkPIgCSftn9Q3G2peJvFJUnzYWDRpyah2IS7I3tGceouL5vflzPp2Frav
Za03ahFikcEDgWE4F/LawfFHm1lQ0Gh/kxPPx+J5L6W+DrSAUV+hvJDNQP9E
GcMf0XxsKdXy9uxoAWv4Uw/6c/J3vn1nRx68Ws5HQfvJ9Sd2t+Lo+/aFn2uq
EWKt159Vwod6yIXk7h2tyFspc8okqxqtW6MXzXpegIU/9x1684qOsBl2E5yj
B+syvfStP3cYCKB5+ssMhbI2ZB9bm7mOkttKo7AyV0puaq6fau5Tcht7P+Pn
0sRs8K2aBKtNaGjKXeYod4yJmo1p0qcGsnA4aG7x69k0SMWy7mltHrSfr6zR
wTRzAS51lNiFtlJ55KT0KmPTbJwu979cTdUXpdEaUiFUfWHtFu7fuCUbW0R1
OvO0aQj+VZhQYs3ED6d6lyiq3lENe0b7RNU7RolbrW5tHJz/xcedXbOpuiAl
Ju6e7ec2fNb7tVFibzl8+FVjF3+txtZYjTvXfTm44qRzNS2zHHet3mRqLaxB
RHmxpFsSh/gd3+zvxrpra8qx20x3Vo12Ddy2Z/R2Z3CwizX9xmObajx9saVP
UqQeHmef+DqKsXH7jbGJWAMTmxzvjtP41QTL4LPvpzg1QVZra63N2Qro7Zm5
vKyrBl+0HB7vy+Vgc7XOpEuLP6Iq/G7hu68MTJS7MdvwCRtPxUXG7FL7CNPS
Cfn+3xgYF/Q6+QuFv3f9MEzN7yOKpsTfLJtQDVvLwk/XqHgiF9lVOnkFVfcf
mfhgrnwzxkmeOxow0Eh8l0X83YD4RTVvXlP1e4GNtd18Lhy6okX3WlBxPOZD
e+ULIQ6kmo2QmcmF3YN3vgs3szDP5cV5+6v5qB4VmFS2n6pb1+eETbBhISLV
VtTgTj6SbmjLMA7SkbVi79zbtiwiD5/zpCBnt3IO9jn79Cu403AmVbPL+goT
K2aKB25YlYepJlukOFQdJ3neY1ULVccdfRf6dszSImSbiTXspvLqbuEpZ6M+
FmLrBvhTRlM8TZQGe0UaLmyxqDluMGgnP/ZkmKtvE+DFTtv1u+ltaOmZ4lb9
IwtpC7/L/qJ4kYNMwrHr/8KL6qX2JK+2EuDXmAjlmdw2Ypz0zqZNqFyZDXGJ
88rN6jSc5A5rOmcxOE9i4uR9YXICMJm+NmaebQgsGi2xNTYbcuYrGBO30RBr
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
3yuA3fKUaXE/2vDfAD7N6V8=
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7574205061181183`*^9, {3.7574207034370337`*^9, 3.7574207244377213`*^9}, 
   3.757976050895666*^9, 3.757976178108951*^9, 3.757976239679167*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalized Distribution", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242654730669*^9, 3.756242659112596*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\<So, the normalized distribution can be defined\>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349489089*^9, 3.753717464029531*^9, 
   3.755969981992999*^9, 3.7562358366788883`*^9, {3.756239554885208*^9, 
   3.756239564090454*^9}, {3.7562396593250237`*^9, 3.756239677455201*^9}},
 ExpressionUUID -> "1d19d643-9ca8-4848-b7f4-203e6fa12078"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalizedDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"distributionOfCells", "[", 
     RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp"}], "]"}], "/", 
    "totalIntegral"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.753620831020739*^9, 3.7536208658666763`*^9}, {
   3.753621133188015*^9, 3.753621202526545*^9}, {3.753621336367586*^9, 
   3.753621336829444*^9}, {3.753621402086947*^9, 3.753621424325923*^9}, {
   3.753621790462631*^9, 3.753621794027707*^9}, {3.753622558444889*^9, 
   3.75362256340277*^9}, {3.753699856455209*^9, 3.753699876390086*^9}, {
   3.753699952776167*^9, 3.753699952909305*^9}, 3.753705828164274*^9, 
   3.7537083494903*^9, 3.753717464030875*^9, {3.753718563246975*^9, 
   3.753718581050694*^9}, 3.7562396018126993`*^9, 3.756239758288518*^9, {
   3.756239816536984*^9, 3.75623981654012*^9}, {3.756492899603785*^9, 
   3.756492899609219*^9}},
 ExpressionUUID -> "4747c5eb-d22e-406b-9384-b569090812c8"],

Cell[BoxData["\"\< where totalIntegral is the value of the integral in the \
whole polytope, \>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931704616403*^9}, {3.752931744334757*^9, 3.752931744498678*^9}, {
   3.752931785062166*^9, 3.7529317876390047`*^9}, {3.752933386865663*^9, 
   3.752933409186058*^9}, {3.753088963635458*^9, 3.753088971091514*^9}, {
   3.75308901981783*^9, 3.753089024540571*^9}, {3.7530892537379723`*^9, 
   3.753089256436661*^9}, 3.75309051725252*^9, 3.753708349490642*^9, 
   3.753717464031353*^9, {3.756239816547715*^9, 3.756239826768875*^9}, 
   3.7564928996209297`*^9},
 ExpressionUUID -> "25f58484-5f27-4f65-af35-6126af2a8637"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"totalIntegral", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
        RowBox[{
         RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
       RowBox[{
        RowBox[{"distributionOfCells", "[", 
         RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp"}], "]"}], 
        RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931704616403*^9}, {3.752931744334757*^9, 3.752931744498678*^9}, {
   3.752931785062166*^9, 3.7529317876390047`*^9}, {3.752933386865663*^9, 
   3.752933409186058*^9}, {3.753088963635458*^9, 3.753088971091514*^9}, {
   3.75308901981783*^9, 3.7530890786286917`*^9}, {3.753089149924197*^9, 
   3.753089217179022*^9}, 3.75308929572053*^9, 3.753089348855335*^9, {
   3.753089535785845*^9, 3.753089559323588*^9}, {3.7530895929824867`*^9, 
   3.7530896081499557`*^9}, {3.753090235204256*^9, 3.753090461994071*^9}, {
   3.7530905514291286`*^9, 3.753090568480646*^9}, {3.753091184772717*^9, 
   3.753091195350933*^9}, {3.753620428194148*^9, 3.753620429598857*^9}, {
   3.753620470136763*^9, 3.753620471065918*^9}, {3.753705839651829*^9, 
   3.7537058402730417`*^9}, 3.753708349491281*^9, 3.753717464032091*^9, {
   3.753718583786901*^9, 3.753718587204523*^9}, {3.7559738887735043`*^9, 
   3.755973896680331*^9}, {3.756236364942437*^9, 3.7562364377284613`*^9}, 
   3.756239601820733*^9, 3.756239816459689*^9, {3.756240553601739*^9, 
   3.756240557885098*^9}, 3.756492899504023*^9, {3.756512301576367*^9, 
   3.756512333623144*^9}, {3.75651238858698*^9, 3.756512389362368*^9}, 
   3.756513294126996*^9},
 ExpressionUUID -> "4b8cbb0e-58a9-4e8f-a4e8-82546973bbfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showNormalizedDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7566675771348133`*^9, 3.7566675803340273`*^9}, {
  3.757420753705453*^9, 3.7574207555070953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Normalized Probability Density Function\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.7579762494742804`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.757976249484231*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.0000000000000002`"}], 
    "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {1., 1., 1., 1., 1.0000000000000002`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.7579762501408157`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7Xn5pkhNX7vdjYA450req/YLJurfLpm91R7GD7rg
nlQ8+yicr1Q/9YFoyzU4/49Mxcv7Ox/A+TOLhSPsxZ7B+Z8m8qd8ePYazpdV
PKChsuoDnC93V+Pdj1mf4fydUz3eCdV9g/O9pyvFN+j/hPN3/1kzT0z6D8I9
qz/6MVz9B+cLrv42Z/oBBgcYv2HTmcrDxkxwfta9/3ySfcxwvrNNN3czKyuc
nylRtJS/jA3O55Lc9v3oWXY4f5Z30MYJTpxw/rJF3sqt87jg/IXac//0ivPA
+S+MvIp3dvLC+avjQhbxPeaD8/XiomX26AjA+S7yuw+33kbwG+ef2PmgTRDO
32rR9PiogxCcr56S9dL+HYI/YcU/JZdVwnC+whqH1TeTROD8t44b+Vn4ReH8
TR/OLt9xEsHfYigpw1QhBuffNRS6f0dJHM7/67X9quMdBD/6W9cK604JOH/D
Lq71+10kEeEruHPijc8I/l810cNN86Xg/HWhshrbI6Xh/LliIZkN7DJwfvMH
s3uXDyP4EzqPL9xRIwvn39rS5mikKQfny/z8KGL2BMGfc777yLlJ8oj42ZSZ
+EdOAc7/0Jlcda0awY9bVcJYfQnBd5NPEr/OpIiIryn+usbGCD4AGDRohg==

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV0X001GkUB3CLwSKvY5DB/CikpWKPrF7uJXqzm9hs1Iltttq8VCuJJE2h
knJMaisTIpalRS+WYfZoU+3mJeL3aMgIs7Vpy47apqyJffaPe+75nPO959x7
LiPcE7ZdW0tL6wta//c1vf3ctNzjyzd/NnX43Q0W4oXrnbsl22G3g2S+3k0W
Gn0j9EokSdC2M+gRl3rIeTA5W5IFqR5STy/qBNuiukOSc5CVbD8UT72EO9OR
LCmHFm7/8lHqy+IFj/dJ6iG0gm/QWc9CWPcqYaLkLojv90lLG1hwOnxu2Cqz
D2bJd9QVNrOg4aeMPZEOw66YkIfhLSxcTLSMAN4zSOU2vpi6zcJrsek21bO/
4OXS0bGJeyzYM7fc5lSpwKbF72VZGwsOCrfx9wVvoCbHUl3xgAXpudXjFulq
sPKRcS72sBB83ilatGASYh9Fq1b2sdCsuVrEs9PA6IEy46ABuk/1xDotMg2P
m+L/nlGwYF6tvnT+lhZ2ZPBqK0dYEF3vONDqrY2lP526X/KUhdihGRPbXB2c
vWZ5xsYxFlYszTHK4HDQfNNZ6ZZXLMTY7C033a+Hy6znDoROsGBo+/O7u536
GJxUlKD9loWC4LBreQEfY32zplZnkoUfSoOds4oMsTNetv5XDQsl8ws1p62N
sW2rqKlLi8Bzr7WJ0uxZ2H1v+0y7LoHqqA2lJkoTDJnWS880IOAZtZkv+8QM
NxYHqU4bEwh0bG7NemyGQlHu8S/NCBwp/l06fMwcxQbfd+txCdT7HlXeRQus
PDnoY2RDwHVb7BiMW2D+zL6CdjsCeZXTToFVlliRmrVM4UhAcBWr+4VcNItm
iwedCbzyv2aqa2qFF2tr+867Eriu6qxovG+FCXGy5LL5BG4usuVrp/BQPpIv
j19AQLHI4smgkzVKm1y6nLwJfFjbQPwHrfFlYHWk+2ICm9UnK5dk2+BbpXPa
Kz8CdU2GtS2BthjdNbxBGwisMJeK5W9s0bemvK4ngM67WLUeLZ6NW8qVZ/JW
EqgJt3driLTDsU3p4ZfXEijkbYgR6fMxaeLd3rh1BDJUPkO9rXwcGdiZfyKM
3pf9W0ljmj0apUyuyv+KwMDNY/5e8xyQZ7HQM3ITAf7kBNfnDwdMMRQHJEQR
uNSVc+fBGUf0OiRJDBQSKLkes1XjIEDlVIcJZwcBVfY3qX0HBWh05Gttm1gC
UVX7PjrYI0DdC+Evnu4iwOHNGf3QK0CZe95zNfXVI723RUSA9ovlz/R3E5iK
8Mo8Jqf5X/KU86gv6Kv0zgwJsCD9imIXdc+2OOMfXwjQdzSEfUu90lFo/Uib
Qf39d9o539F/nDR/H6nLYGFYTTuP+qz6lnyQw6BXVXm7K7Wy07Fg1IDBzDZZ
+xpqUZqCP27C4L/dpzpOUzf1Rzhx7BhMmr7RbZVAYGuQgc4JPoM6eUkPXagN
rjUoDR0Y9CsM7FlMvfEEr9yMYZC4G7GR1P/4sK58VwYHLP3khdSS0gyDYjcG
/8z4tr+GOsDEe4xxZ/D1ntKBFmrxU3GVqweDn8pQMULtG+qfU+XJoIhfNvSa
elimivNYyKD6PXdYZy+B426XP69bxOCV0PwRLrXn2RAPb28Gc10clXOp/wMu
/E0K
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVz3841AccB3BdTn7c/HY6d859Ja4fkhNdq/l8TmatmkqGZilikfWUH0ut
tEMSPRlFmSs/rmk6arGKo411PKknP+L7/SadH2W7ppXnqEk5bd/98Xnez+uP
9/O8P0TMvpA4lpGR0WfM/Z+f9j2yP5Kf419pvvcM15iEr2M2L+hRxMFZcY5I
xrhRGmFSqfgG2ppnriQyHlqgTctVZMODwNd3Wxkn8cqupSuKoW7K1SSRTcJq
+3/vpymqgMpI+77FhISKQq/HqYobEHWQpYs3IyGk55OYFEU7BM25p7xlSYLr
d8UjDsdo+H2kJy7YiQSD4ODYsHoEKjk3x4iFJPyQYhcBXB1E3utubPMiYbLQ
Klav+xvOl7RUh64mwZloFbup9NCU0G+2MIgE4aB4fLr0FfRetm0c3UKCunjd
uO3RKRjgBHslbydhwznXHXKvt8CR5/wK8SQ0G2rLuHwDzBZ9ZTubwuypmQg2
ot4Dvyepa/ooCTY1U+fPtRphQNDoq9u5JMjr7x/S+LBwi3FCyNFiEvYM/WvJ
y5+Ld9NSNQcqSFi75qRFFpuNqRK/suhaEhLmJ1dZHTBB38gX0fxGEsx5N9+0
d87DwqSRfmsNCaUbQuoKAswwdH6m9F0XCZeUGxZkl5mjhcWbEuEACZVLLhhO
OXLQU5XpKNWR8JdkfYo69wNsuTlpLJokoSYqVGk5aokvukrzZbMkLIuKFNxa
ao0BO0Obt5lREOjSrMl+bI1RHe7dKnsKMso71CPHbVAbW/2sw4WCG9LM0Xa0
xf26cdHwEgo8YveMwbgthod/+XTpSgoKqt+7BqrsMGs0+X3KWgpEtVjzKMYe
hf51yhObKHgpq7MytnLAjRqfuL4vKKjXd/7UeNcBdzjOcHi7KbjuzROwDnLR
4q2UX5RMwaC37bDW1RH9NJyAx+kUzK5voGRaRzQIwh4I8yiInMqrXp07Hxdm
zsScLabgWpP5zy2BPNRqMxQWSgrW2qgL+1/x8I6B5l+/wvTdHTSZ5U64vXfn
CrGagqufO4sbtvHxarx5uqKdggvc0AT5PAEuzmf/iA8oyNL7DfVpBBjcI/fX
DTL/5d6pbDzijJ6Xa6fDn1MwcP24TLJIiE/K9wje/UOB4O2Evd8fQtz9i/f6
MhYN57tPtnWddkHTCalbsiUNlfUJ0QahCP0PhV20dqJBn7vrW/qwCPMCdjfX
u9MQpUqdc7hXhIJ9z6yzJDSwuW5PZ/tEaLUofbiBcW1G3205JcLUrIKrLxjP
REiOHe8XYaBweXCYDw0l8/Qmp4dEWMXZembRChp6YxM5l5+L0KhX7NvjS0OQ
S4zjQxaBS5YKHjqvouFlns30NmMCf1sZfyOEcdFUa7+WTaC7maQoh/Fop0vp
U1MCnVmwdYKx/MigYNySwPi9/g/bPqSh6VGEK5tPYJgXOZW4hoboj03nnhAQ
mOQ2q61gbFrXMGouJNBu8qKGYhx+gltlTRBYyU88DR/R8NqP9BB4EFjSMexr
50+DQpllWi4msEH5xmUd4wBLnzFiMYHNUafM0xkX/lmo8vAk0ClD8kTHWLpF
dlK1jMCuMVknH2gYuaVP9FxOoP2qbvVmxjniio3XvAl03D9wKZvxsqJNnj4+
BM4t2FXUxPg/lwIzyg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVx3081AccwPFLjnOJ83Dn6XA/pzwUHfcixWvfL6UmyjLWNa/1cLJFe7VX
nfXgoclTdGVUenCVaGLcIkVcpSua1Yh7vl8JZdPk5XapWb08zf74vD6vNyH8
Li7ZhEKhbJzv/0epSPvM4mOfkI6Trxn3FPCt8DNunyQZ9j5xvlg879YQgVml
5HtoXy/73LJdAQPc/oNFknzg0VJ7zO8rYJ/T5cYsSRm8j/vxzaxcAaH2c90H
JdVA1Jh1j3cq4ErpiudpkmboW5qw/Gm3AuL61gtFkkewvfbZNxf6FeDxQ9kQ
M08LKUc3RdDmFDDNPjQ62DYEkYOWr1LdlXBBZCcA1gjIR1JESaCEiVLrXcaR
MTjduCxns1AJroTc27POCFuX2HO8cpXg9sLb8KH8HVALdtyavaaEtrJPDbZH
JuHLrkLR/idKiD7nsT17xUfwZppNyseUcGdaepnlMg32suFMgqECj/q3myia
WeDvVAu+CFSBTf3kxXNyCvLeOuQ5x6sgu6n7cAffBGkPm65TDqsgdWDOyql4
IfZGfbXuukQFa8LEi3KpVKS4SmniBypIcdxfbX3ADC8EZdTNjKiA7tTy76Me
c/zA5PJ96Wooj467URJhgSeaj5BneWq4VhXNzb9MRxfeqfKWeDVULrs0fdLB
ElcHvgz0zFTDX4EbRG1FizF2mfRrz6tqqN8WX2U1bIXWD+VVj7vU4L8tkX13
OQO5D8Z2PP1bDWvd73TkP2fgVIsLcx9TA0crfmsbKrDB8ti48POrNdAckjP8
CG1xhDWSz0vSgNeu1FEw2GKSSFosKNJASe2sx9o6OwwyNfhRbmqAI8V6UmiP
yYYrP/D7NTAefsPa1JqJFgMtza9NtNBk7KlpfczEuY8tPv5+WrgV4MQ2OcRC
ecNumiFeCy8CbAf7PRxw5WhMjW+mFmY23NaE9zvgPz5BTMsaLSROHq8NLXJE
ZWT6+JZeLTTK6A331zrhNVXvyy1TWlhj01aqf+eEYSUmGTJPHcwsZXbkVDjj
6BvxvbKNOrie4Op9e6sLZh+LTQtJ18ElVnxKtjkbkyYqg/x/0kGuMXhA1cFG
avpQ4pRCByVFXZWtma6YtWgVJ2pOB89uFYQH+rihW9LpMtJHD+yPb+2D/3BD
48nz7xMEerjYK+58esod7drDeizz9FDZlLJz2o2DxtADWn6DHoxFSenaDA6e
MJ0IShzQw7a6tAUZSg6e7dlYKqWTQGV5vppRcXA3NHiJFpEgPap6mK3hoEC8
snOVJQlTgsC8Aj0HW9PuWXctJuG8udHs1AAH1cNXjS8ZJCh37bH8+Q0HN49R
nzk6kLDOXeigMyEw+pe0GDGXhPHjNh+2mhJYTWXUxnmScGZSru+nErg8Xm/h
vISE4R738lc0AmvOGQdrl5KQnfmCbbAicM4uUvurDwkyUuBBdSEwtbN2bCGP
hJ2RtIWFbAKVB33rfp837cbtYbobgTcD+veeDiBhSyGrmkEQuCKrj87lk/A+
WO3F9iIwQbHgZEQwCZKqXFqFN4EalkUWfSUJEVb8UcKXwMKxcJFy3qV/ltZ5
+RFIMY/aL1xFQsjmcHGdP4HURocM39UkDN017vHjEdgudTw+Me9j3ldiGgMI
jPWPqZCFkuB/JtaPzyfweXKTLCeMhP8AIMk1sA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVi3040wkcwCUi1UTGxrDflFGNcHk8D/l+pa4kV6kuu+6U0d1Jp1Od9/LW
RMqTPS3VvKS7cOYR1W7IdStW6hJhIsZmzU9vbCWlyHV/fJ7P8/njQ/AOhu4z
NDAwCPnC/w7q6rNKzT/h79Z/ofH6LzI4wNvq1CHaB53m7RNTB2VQ7xM2r0z0
G2w9UJKGh2Qw6DSQkCvigwB9TjyKl0EcvaT2qEgIrc4Fe8bSZOBrNfswQXQF
bLN+918jkMGlAvf+IyIJ0Ls+GNGkMgjt2MA7LJJDof/HlS1zbgMrTaiiHu+B
NdK0CU7lbZhmJD4falABJc41NiToDlw4vCQMrEcgmlzW3PPqDrwpMI/SjbwE
Ebu86/ofzWBPyFyWVungzfkJhfDbFnBQuox9uPgWBFK5PtFBDg3CjWOWxyah
1jEsjfNCDsGFrD3p7lNQcitOb3v1Ltycri6xtpuGgJd5s/Gn7gFLrP/GQPEZ
OKuDKhp4rWAhniwqlBmg3Ug629XvPqRfe5jU7GWIsdzTaRWrHsD+wVkKPX8u
OtN/cGXa/wuBfnkLsoyNkaP/rlzt/BCiaYeumMfPQ2/lluDq1W1gRv/rvbzN
BEN+3izY6/sILgaH1p1ZOx9jOvy45yLaofxysBO/xAz9hIM1TtABZSuKp0/b
LMRhWmW31VAHjHpuOtyQuwinVDNvbDIfgzh8x2WKhoJ17eoxiWMnuIXvZjSt
XIy1nxqTBjs6YZ3jzWZ+/2JEofFPe1O7IKO0tUGVbYFB6pjtccu7QeKTqZGj
JU6M56Syx7qBHbX/OYxZooNPQmayWAFnKj+z1lUtwd0+Zpm+6T3ArEZxH88K
PWkjdfO5T+B1QJ25kTkVi98JCdHyXrima6uov0/FZQeE+e7WfXDDg84wTLRG
fXLiLvePfaD0sBwaYNng6NFI/in1U5jZJFUEDNhgTuKPp6Xaftg9ebLSN5eG
A8EbDEPVA1DbaHb1n3V05CnDD9GmlRBo0VDQ+5aO7JbefSOLhmDGmdqcWWqL
HFpK0qiFCmp22rtIuXbI/1zqwapRQbH1juh0EwYGVoxXB61XQ5bOe7CrmYFG
iRIBa1wNZ3LvldWn2uPdDr3Qt2gYnt7IDvB0dcBzrQfdhYEaYEzprbyfOaD7
Guf82lkNFLXntTwSOGLkgvVNdyXPoOxadMS0AxNb7I0SCmK1oMuNTO5JYSIv
Mvoo138EwquOzEnp/NJWj+XbTUgwtl46PNPFRM1WOkNrRkJ1RteddAUTLcPV
s/EUEj6FeR7P7mWitnjjr0VUEs6b6OYJBpm4kft08rUTCZ1RMQv/fPHltw2u
ESMJXzvybJ4YEviOSosQJJPw+qTFB64RgQtvUQWrj5FwdlLWO2BMYNLOXdv7
MkjQtDleHDYl8FLTbDYrl4T0VCVjjELgNDVMcrOQhMa+MJaxHYEhlfcC5ktI
iFhvOjeHQeD4KD9DUk+CaZ1UY+ZAoGLHeCiviYRdOdZXFhME7nxvL/67mYQJ
7242g01ghmukV0onCaLLWaalLgQujX1ruLKHhLUUr+fEcgJfPNBEKftIKNAW
VLE5BGr5oApQk+CzLSCvyo3A6KDeqYlnJKiadDGcVQTeGF9RXjlKwgmXS5tr
PQj0+mqb9vtXJLid3cLx8iJQpQiXWuhI+A/2V0gf
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vatp\"", TraditionalForm], 
       FormBox["\"normalized probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756667883828382*^9, {3.757420739073811*^9, 3.757420757964435*^9}, 
   3.7579760612486763`*^9, 3.757976250270666*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability associated to vatp", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242672877865*^9, 3.7562427268374357`*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\< So, the probability of vatp in the population of cells can \
be calculated: \[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704187679028*^9}, {3.753708338402223*^9, 3.753708364586782*^9}, 
   3.753717464032563*^9, {3.756236168084703*^9, 3.756236170165374*^9}},
 ExpressionUUID -> "bb71dc2a-7ae0-49fb-8d72-05f715f3575a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vatpDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
     RowBox[{
      RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
    RowBox[{
     RowBox[{"normalizedDistribution", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", "totalIntegral"}], 
      "]"}], 
     RowBox[{"\[DifferentialD]", "vg"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7537000762383842`*^9, 3.753700101923232*^9}, {
   3.75370014673904*^9, 3.753700152083136*^9}, {3.753700202550816*^9, 
   3.7537002582990026`*^9}, {3.753700303669454*^9, 3.753700306850484*^9}, {
   3.753705436823915*^9, 3.753705449435493*^9}, {3.753705849436471*^9, 
   3.7537058542017183`*^9}, {3.753707949097674*^9, 3.753707955855411*^9}, {
   3.753707987614936*^9, 3.753707987935389*^9}, 3.753708349492456*^9, 
   3.75371746403428*^9, {3.753718589754383*^9, 3.753718593132552*^9}, 
   3.756239758296026*^9, {3.756239816471737*^9, 3.756239816475245*^9}, 
   3.756239929914504*^9, {3.756492899520569*^9, 3.756492899526129*^9}},
 ExpressionUUID -> "bbdb54fa-23dc-41ba-a439-ecdeaa869ead"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showVatpDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{3.756488019834641*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Propbability Density of Vatp\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.757976068423715*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.757976068433735*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.`", ",", "0.9999999999999999`", ",", "0.9999999999999999`",
      ",", "1.`"}], "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {1., 1., 0.9999999999999999, 0.9999999999999999, 
   1.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.7579760688298903`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAARfmQYyTGjz7Mmzq+1ttjPgDkMOiD
JW0/gI4ecXI3Qj/eHOhbRCV9PwsScblKN1I/TbnDlSQljT/QU5rdNjdiP4WH
sbIUJZ0/tPSu7yw3cj+hbijBDCWtPyVFufgnN4I/L+JjyAglvT9dbT59JTeS
P/abAcwGJc0/egGBPyQ3oj+kFhEd0F7ePyeuKhJC+7I/HqTRRo2P5j8mDYaY
cDO8PyH23rR5rOY/qrMWIphXvD8kSOwiZsnmPy5ap6u/e7w/KuwG/z4D5z81
p8i+DsS8PzY0PLfwduc/Q0EL5axUvT9NxKYnVF7oP2F1kDHpdb4/fOR7CBst
6j/Obk3lMFzAP382iXYHSuo/EMIVqkRuwD+CiJbk82bqP1IV3m5YgMA/iCyx
wMyg6j/Vu274f6TAP5R05nh+FOs/3QiQC8/swD+sBFHp4fvrP+yi0jFtfcE/
2yQmyqjK7T8J11d+qZ7CPxr40cwI6u0/ETsDgEWywj9Yy33PaAnuPxefroHh
xcI/1nHV1ChI7j8mZwWFGe3CP9C+hN+oxe4/Q/eyi4k7wz8OkjDiCOXuP0lb
Xo0lT8M/TWXc5GgE7z9RvwmPwWLDP8oLNOooQ+8/X4dgkvmJwz8I39/siGLv
P2XrC5SVncM/R7KL7+iB7z9tT7eVMbHDP8RY4/SowO8/excOmWnYwz8CLI/3
CODvP4F7uZoF7MM/0vtzrbLh7z9kfWisD+3DP6qSC2g=
        "]], 
       LineBox[CompressedData["
1:eJxlzWs01HkcBvDJyiqa3EqZ+v9dcjkVOWVPTsn3t+sWnSQGFVZuhRSVVDZy
l9wyja00pkLZirbIrt8QM/6UyWRcZ49UFFkRzRi5zmbt633xnOd8zvPiMQiM
dA9RotFo7ov5r1HY6fjglVJoA6FA8Y2CPnfhRR1y0ZWvMif/oSDehkxstFi0
aYfnZwUFhMmZpGjbRd+UkIPzFPjO6qd2+UlBnNxX2TlLwfyHmLSU41JonR6I
a5mhoEAkSreKW/SxYSdqmoKeW+cuszlSeOUh6634SoGXY1sus1cKLUbfKbNk
FHzdYpKnPCoF0bXvWzOkFLDXXmA9nVvc1dSvJ36hoPOzab6OngxeynU2nxyj
wO3qxYKuAzIQUiZMt08UuPRb3GVKZPA8yKWE/p4C29hsHrN9AvjFefaZbRQ8
/8jBM30TwGIde8wWU+C6v6yaMz4BwYkO67itFPibtfwxqCYHVf9Z+WMRBQkS
1cpoRzm46QUUS5opEGxNeciukUP/FUslQwEF9qOxnK67k7AQJ66vfrL47xsa
z4ydAjiwYucQiwJhiLbk+ck5WGNcOqPrRgEysvd46vUNhC+sOIl0Cs6Xh99y
U9CQFmlQ5dHeAGp+DP+ESSVUlbMpX5HTADXOiu4tLcpovII9smJ/AxzVuN3H
ua6CaOUyY2+dBhCNbNpml62KIuojzM52CGCf0vCusMPLUWSa4+0FtgAyzbNY
zYfUkSjEtu9ndwE0bpWf/7iHjpYwNipPaQggZ4eDumCFBmpNieZ+7eTDrx9T
aJuXaaJJlbcLLXl8MP/dt00i10RPdpVIljP5cCfJzIGY0ELNWRnR+pp80KY8
kxtHtVFUUJO0l1sPOoaMwgddOihu9Q8DThvqQXa5y8e8fRWynesPCrhVB35a
JlNfalcjcycX8R6jOnih0nNQs0QXtcJNlXv3nwF9aUKgmLsGGYSZicqNn8Gg
Qb3jq0trUdH8qQtpD2rh2u4J8dE0PfS6bpanblwLu9+kGQZcZCC+eWiTUlEN
pOdUuhUcXYe6l7J5QtMaKHbpMooKWo8K6YpdtsU8cDXO7kh1JRA7waAs2ZQH
ETnHS0h3AqlXLUvkGvMgc3pvDPYkUNInmSc24kGzkK435kugSPeGhXGSB3Yn
rgQwjxHIeUOQx6E1PLD+86rU8BKBFl6UzFku44GhcwGdLyBQ6Eoz53cjGFBF
bP/BJgK9s9MgZocx+DN8KuTNBPI8NzOh/TcGzhjDy7SNQD+9b+Y4D2DQZRUW
5rwj0PrKMOnTXgzqvbc3+80TqN3r4bVMEYbpiFKXOSsS7eRaDFk/wmB7j5H7
wZpEZ6h9JzeWYUjpy+18aUOi8uEoBeMBBg33c7437Umkv61Sa+EuBrPtzids
mCRa2rwdmgoxHFgymhd/mkSdMnR9fzYG7g5/yZGzJFLTDTSyy8QweLpTb98v
JLK3SX5klYEhaqimmEwmUXVaU6NuKoaMlqwqPotEhQwX2dsLGHj5Fj1KFSQK
dfBwCY/AQBMXrR+tIlFReHS3TzgGR1XdwE5Moje5+Yf3hmLoiF0YKRaQyPX1
XzGWwRhG/NsU9u0ksor0LZ7ywWB5w/5H824SHWfHWQwfxBDTUZ26qodEpZiL
e7wxKDncoQ/1k4ih/F5c64GBsfGUfrqURLQbIYqkPRgCg4aCIydJZF2Xlh7t
jOE3zqH73jMkOjVQqnXECcN4d+sYKEhUpios9Hb4v/8FF1eBug==
        "]], 
       LineBox[{{8.003969054161752, 0.09803140556550125}, {8.00778477147145, 
        0.09740382048166946}, {8.015416206090844, 0.09614865031400587}, {
        8.019231923400541, 0.09552106523017406}, {8.023047640710239, 
        0.09489348014634227}, {8.030679075329633, 0.09363830997867868}, {
        8.045941944568423, 0.0911279696433515}, {8.04950206868494, 
        0.090542422913661}, {8.053062192801459, 0.08995687618397051}, {
        8.060182441034495, 0.08878578272458953}, {8.07442293750057, 
        0.08644359580582728}, {8.102903930432717, 0.08175922196830306}, {
        8.159865916297013, 0.07239047429325433}, {8.273789888025604, 
        0.05365297894315718}, {8.520790069751571, 0.013027949054017789`}, {
        8.6, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVxX80EwgAB3CHx4pHOkoml2zsWIXh3si+b6mRZ0zdda4i59cTydHyHEaR
Qn7l6H50OhV3nFyN8qN3IU0P45hm7vCGbTe7mc2TRzXq7v74vI9jTOqxeEMD
AwP///z/kTeVsaQXFYyY4taiKuGkv4HCXVVAToHBvZ7O5wuPGVJ71anDZB4y
1OKASn0/g931vIZELkPDzM7LvzhJGIXX+K3W5Fr4m8VVSbhKxp3zlGfm5Bbk
j+hWB+zWGQdksQME8lMQjJIJvhcJmJmZ07pbdKNF7/xKGbYFJZORNl+sd6Pm
UEOJBXUrLijd+OK4Xmwcd26fUJlhdJr8jvRJH1I17cwcriWuvdj1Xf90Pwba
NHveJn2ItVsfDJuQR2DRZnHAM5EIP4cnHmfvjWAgfHn/7bdEXKpL/1bo+AfO
VE9vsyq3h1mDPKbSYRSlt7dGW3XuxrZJ2YZ56Rg6rOeWjpnvgfOc4JubheNQ
xGbadF3dC85K0bOmTAk+7+z156hckE6LX53qkIAnJlVwAyio4TJdzNclSHEI
GvX+iYKptTel5y9O4uQDh6qqiI8Rr0+KoKX/CbHXwI8j467IMmbrfk+ewlJ3
4XEr5T7U77DaPRYlxV91RlmkQE8knXnJEn0vxZpoqq8p2xMejTVfjYul0Ip4
mZceeqKbbicQB89ixWm7yIlIw7nfbjw+R5yDGzFLzl6loVD0w+k003n4CSNv
lLd7o3Nny69ZszLIbTluEzw6iAfLod+QgZvgkxP1lI7c6FRxtp0cKY7C5MBN
Oo40ebzL+UwOQu5RK99cX4z7tofnCeUA/8vNB1f8sBjZ87qgQwH70/nZIfX+
cKgXscoqlJBZyrdrbJlwXJM++vq+Eqb0/bEJDCZIQZq9CYNKlK0Ul+2IY8JV
Y/KeYbQAm6Gl7F0PmfDxOtixnLGA5p47e/jBh8AW/OzyaZQKzUJqdWxJAHIU
2QTiPjWolobL/d4s5PkUZ5gGq1F81lmTH8NCftFNxasENbpc3DtyK1goovJ7
h+vUkC+UaGlqFqq5ysxc60VQCybja+8G4r5x+D/z+kVczxvs5H90FNMk56HG
oSXQfALm7dkhsHstGiaolyAYelQ9cTUEEULeaOIWLV6SwqMVvSGQpE2IKUFa
BPGiTUx82BjrvjLb2K9FcKnONoEUCosqdxnhby1cy41sZqJDwY6fUSQa63Dr
FEvQXBuKITMvNSVAh7QnGdYnbcNAmJ3VFMXo0DYovUs/EYbA1us61WUduOvJ
PdzqMAgi5KuNvTp4TxH73hM4MKRWrBPmdIhoOmzZSOFgXH+hpXVeh/zNwIUT
rhz8CxLc1mA=
        "]], 
       LineBox[CompressedData["
1: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
dP3/8/8BeY7n4Q==
        "]], 
       LineBox[CompressedData["
1:eJwB4QIe/SFib1JlAgAAAC0AAAACAAAAPaRbOwgCIEDJ5u8PvfjlP+DAlV38
AyBAnwkjaxjq5T8m+gmi5AcgQPt8Bq85zOU/yRZExNgJIEA99bjw/rzlP2wz
fubMCyBARX0sgpGt5T+ybPIqtQ8gQKZIXUEdjuU/Pt/as4UXIECphFXSxUzl
Px4szFVYGSBAfEVs0g495T/+eL33KhsgQDKl9l4pLeU/vhKgO9AeIEDI4Cb+
0QzlPz9GZcMaJiBAjiH0ZenJ5D9Are/SrzQgQL+Yoy7wOuQ/IPrgdII2IEAS
vYCKLyjkPwBH0hZVOCBAMokWyzsV5D/B4LRa+jsgQAwdRsO57uM/QhR64kRD
IEDLFdv3Qp/jP0N7BPLZUSBA22QCZ0T24j8kyPWTrFMgQOaHMMcs4OI/BBXn
NX9VIEAaeoIB3cniP8SuyXkkWSBAGZG0s5Oc4j9E4o4Bb2AgQAGKzcBQP+I/
RkkZEQRvIED/P4WsvXnhP0gXLjAujCBA65HAkNp/3z88TGkLKI4gQHwsoWpD
P98/MIGk5iGQIEDIx/SFDf7ePxjrGp0VlCBA/z6ok8F53j/nvgcK/ZsgQGdq
HEONad0/hmbh48urIEAksaM50CnbP3qbHL/FrSBABF/pjNTe2j9u0Feav68g
QNJFBs4pk9o/VjrOULOzIEBvGM7TwvnZPyUOu72auyBAfsmnspC+2D/EtZSX
acsgQIjbdRGlJdY/uOrPcmPNIEDNTc0FNc/VP6wfC05dzyBAR7nNJAR41T+U
iYEEUdMgQLls7zxbx9Q/Y11ucTjbIEBEyP/0y1zTPwIFSEsH6yBA9rCjRath
0D9BVPv+pAohQE9gYaFSlcM/crntWX0MIUCZ35RygsLCP6Me4LRVDiFAi379
2hvuwT8F6cRqBhIhQGHZCYKCQMA/yX2O1mcZIUCQSTYDwKO5P1GnIa4qKCFA
dInsJGWTpj++w+b3zTIhQAAAAAAAAAAAn71LOA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1: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
FOPM/d31uiv5xPv/+S+K8Q8A
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.36734693877551*^-7, 1.008521097865855*^-42}, {
        0.0035579277332797865`, 1.5706197602456366`*^-38}, {
        0.007115618731865695, 3.2548985722863264`*^-38}, {
        0.014231000729037513`, 6.989754822159031*^-38}, {0.02846176472338115, 
        1.6117279914023394`*^-37}, {0.056923292712068425`, 
        4.2847627872100695`*^-37}, {0.11384634868944297`, 
        1.514152322941169*^-36}, {0.22769246064419207`, 
        9.454237180988313*^-36}, {0.47453692282247517`, 
        2.325839439990153*^-34}, {0.7050234206373067, 
        3.46340601518859*^-33}, {0.9309886882994322, 4.38125928069921*^-32}, {
        0.9963010204081633, 9.009340074476009*^-32}}], 
       LineBox[CompressedData["
1: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
E/4/duCi/Q==
        "]], 
       LineBox[CompressedData["
1:eJwtUn001XccvnRxL/enRd5Nn2+rW7lFkla71fdJRegYDSsvlYRZG5HRyxKt
6dT0Mr1M7tpRas2SahJ6EbnMnYpoaiPvLxtDa95G2eycPec85/PPc57zPJ/z
sC1R60K1RSJR0AT/u8suBCgl2gSlX6mxWWEpby4+FfRqEsFuex9rD1Bz+aj0
fLseYd2UnEX518q4xnSV+pmUkCgshySknH/kmND5wICwQh3Q+NjyR/7DRy9t
8yYTYhyDw6JUFXx506+5n5sR7hv7H4/qqOQ2cx/4rreY0Kes2pdX8ICP77w7
bGtFWN5yIK77y4e8yChDWW1DaFJUniryq+LcJbTUUk6o8Dzovvqrx5xO+IX2
ziL4eDZParKs4aJmV73iOYTo4a448/M1vHiXrUfoPIKw9eJQ+e1ajiv9NVcX
Eq4ObvziB5s6TqPNsfsXEQxjzkzvKqnjItcaU9/FhIXu82WJEU95SfMN/1El
oeNCT4lb+TPuPHV366qVhLHheH/nwno+PXjbAbPVhFu+in7V/gaunRMo73Yh
vL3u0Uql93N+35V/eMyd8CS7wEo93shX7hG//MWbMJoyXOTwbgufUTF4Ivs9
QjpFJXz7UwsXm3Q57fMl+Cp6jZa6tXJ1jmbXjA2EJCMnscyrja9qPaoVtZmQ
0zYnzTS5g8+wT8xcsYWwzdvK/wPrTi7+NHr11K2Epx43zm252cnLTHwOFYYT
/ugcZ6cHu7iLm8UUcRQhNS3gUeP5bi4/rZ9bt53APrGe5r++h+u2jflkxRA8
HbJsJEZ/8PJPG9M84wj1T4fieWovd72WSWf2EiaHvZb8FfKCrzGzm2+XQojt
OByk0h/gS9dGGMw+SqhJtpWGnRrg85MudLLjhGdjyS6Ktwa5eY/lWZOThDDF
QHaB6xDvKtLTf60i9JlXHXbKG+HJYS1tlZcJO5SSD+7QON+tsr5XdoXglJLR
p6wf55HV76ffu0oI9avIiU/7h/u988grN5dgXuAk3nZEhJmGt++m3yZoHhu2
LbHRhjrv5FcRlYTaUoPh6RE6KOiuigl5SHjo3DlvwxMdZE8z8AyqIiyIX1a1
n+vi5KEksXctwfZM39/jU/UQEhQZvbie4Pjo413DNyXwS81au+A5wcLIZ+U7
1lK4/9g+a27TxP9Opb2XtU+KBQ4BjdPaCM4R1Yparg952OlCi46Jvu2uZW0q
fViqHp807iKE2IR/XzmgD22dNR56PYS4i3ftDqsMMLTkM7lWL+G6Yanbgd8M
0B1ZpDXWR3DtV3Wp5svQmPl3w8CLibx3Wqy9dshQ82xhQd9LQvCUExVm12Qo
F7af+G2AIIrSsOBOGW45X45sHSI0br7OvzQRkBPf6dYwQqisTVBNWibgfDab
WTdKONJsnCINFHC6JVBU/YoQMVO4/Xu0gMOmafWa8Yk9vWpNbdorIMGj9map
iCE8uPKi5T4BMYmGqXe1GYLtxUJRrICwPLeP88UMu7+ZU9wUJMC/+8Ca67oM
8esWtx9cIsBzWvFblyUMWoq6Kdd0BazwGRu/oM/wk9XOVGe1DDGFvRv2yib8
Nl3XkcfLkGnTfMPXkEHPNMI2zlKGJ5/VTLZ7g8Exf+PA7CsG0Pld/aGuEcNR
by97uZ0BFnnmlzUaM/z5tKDa5Wt9hOdmUb4Jg13JxRU+Q1KkmX+955gZw+c7
PTL0lFJo9h6tC7dguOTxakQSIcFoa6IDrBieZLK4vgQ9KNbsSDF/k+G7t2uT
lXt0EXgltOuFDUNSRubYpkAdHDFa76yhiX4+Thb5JEZRvPvZc9MZcjbIM5LL
tdHfsHRk1wyGX9Cgee2hBe9LLMd2NoPw5yK1d8MY3y+bKp1ky2DSM1iYJIzw
3GjdrfUKhvpa3ciU3r94e91IUe48hs0Bd26k9/dxk6U9Fin2DC32JVEazw7u
cu557FYHBq9Yj7Gahp+5kF716wJHBtH/+Bcgln0m
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.36734693877551*^-7, 1.0076354667469521`*^-190}, {
        0.0035579277332797865`, 1.809226487619664*^-186}, {
        0.007115618731865695, 4.322776310679803*^-186}, {
        0.014231000729037513`, 1.2339401367607523`*^-185}, {
        0.02846176472338115, 5.02733224907545*^-185}, {0.056923292712068425`, 
        4.172535162047033*^-184}, {0.11384634868944297`, 
        1.4371349557752239`*^-182}, {0.22769246064419207`, 
        8.52440367203928*^-180}, {0.47453692282247517`, 
        4.0714092344085965`*^-174}, {0.7050234206373067, 
        6.118275087613626*^-169}, {0.9309886882994322, 
        6.518434440581345*^-164}, {0.9963010204081633, 
        1.8273794831568403`*^-162}}], 
       LineBox[CompressedData["
1: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
C693PnhPvnY2j+ssIpjdPURdF+z/v/xf/Asqnw==
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{8.59003987102029, 15.}, {8.592865762677357, 
        12.484454352677211`}, {8.596469547323647, 7.397885363677494}, {
        8.599985872434003, 0.}}]}, {}}, {{}, {}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vatp\"", TraditionalForm], 
       FormBox["\"probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 15}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756665126631431*^9, 3.7566662112535954`*^9, 
  3.757419398565991*^9, 3.7574196766272993`*^9, 3.75742167549401*^9, 
  3.757976069029368*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability associated to vg", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242672877865*^9, 3.7562427268374357`*^9}, {
   3.756242772698579*^9, 3.756242773614485*^9}, 3.757420338300962*^9},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\< Also, the probability of vg is calculated as: \
\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vgDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vg_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"vatpMinLocal", "[", "vg", "]"}], 
     RowBox[{"vatpMaxLocal", "[", "vg", "]"}]], 
    RowBox[{
     RowBox[{"normalizedDistribution", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", "totalIntegral"}], 
      "]"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7537000762383842`*^9, 3.753700101923232*^9}, {
   3.75370014673904*^9, 3.753700152083136*^9}, {3.753700202550816*^9, 
   3.7537002582990026`*^9}, {3.753700303669454*^9, 3.753700306850484*^9}, {
   3.753704222258316*^9, 3.753704234599781*^9}, {3.753704272359116*^9, 
   3.753704302791348*^9}, {3.753704470013398*^9, 3.7537044821168213`*^9}, {
   3.7537054664840117`*^9, 3.753705470386675*^9}, {3.753705535011888*^9, 
   3.75370555406708*^9}, {3.7537058637329063`*^9, 3.7537058650975103`*^9}, {
   3.753707959594192*^9, 3.753707983479549*^9}, 3.7537083494962177`*^9, 
   3.7537174640362883`*^9, {3.753718036717523*^9, 3.753718038848815*^9}, {
   3.753718595548087*^9, 3.753718598803939*^9}, 3.756239758303351*^9, {
   3.756239816480382*^9, 3.756239816483485*^9}, 3.756239963355699*^9, {
   3.756492899538415*^9, 3.7564928995437183`*^9}},
 ExpressionUUID -> "a74310a4-d5fe-4fec-89a5-db1dc94a2b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showVgDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7564881190284758`*^9, 3.7564881294990788`*^9}, {
  3.7566451386200323`*^9, 3.7566451441848*^9}, {3.756664066229868*^9, 
  3.7566640692453613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Propbability Density of Vg\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{
  3.756665108253912*^9, 3.75666619793218*^9, 3.757419404191606*^9, 
   3.75741968002102*^9, 3.757419920744955*^9, 3.757420347295923*^9, 
   3.757420865713663*^9, {3.757421679535239*^9, 3.757421709070394*^9}, 
   3.75797607324713*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.`", ",", "1.`", ",", "0.9999999999999999`", ",", "0.9999999999999999`",
      ",", "1.`"}], "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {1., 1., 0.9999999999999999, 0.9999999999999999, 
   1.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756665108253912*^9, 3.75666619793218*^9, 3.757419404191606*^9, 
   3.75741968002102*^9, 3.757419920744955*^9, 3.757420347295923*^9, 
   3.757420865713663*^9, {3.757421679535239*^9, 3.757421709070394*^9}, 
   3.7579760756105013`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBcQOO/CFib1JlAgAAADYAAAACAAAASmXo0cDpRT4ij/2jnh6BPueuVmLf
GSQ/SnGnCW1oXz8WC9WOsxk0P1ThLI8oaG8/LjkUpZ0ZRD9Zme9RBmh/PzrQ
M7CSGVQ/WvVQM/Vnjz/Am8M1jRlkP12jAaTsZ58/g4GLeIoZdD9e+llc6Gev
P2R07xmJGYQ/3SWGOOZnvz8IlEmh8PGUP6d7Af4DXdA/t9AyR0cenz8Ps5+v
p0/YP1iD3NrDi6Q/nUb8AjEN4D9vsXMtmPSpP59iguMWR+Q/8pDWyAEBrz89
oedkyTjoP8jBxr/PPLI/yo6mmwR/7D9peUkNWey0P9pmYZKlWPA/wQky/6xt
tz+fF18nr03yP6ajxP4aJbo/258JF/1s9D9AFr2iU668P2K5I1cxaPY/Lcfc
uMYqvz+ce2xAa1n4P9RAU+6p7sA/TBVihOl0+j9sCmvS1TDCP0lAxxhObPw/
y9hXvQ6Owz++QtkH943+P1NGWOHk5MQ/8fYM0NJSAEA2oItXoCTGPysVZUSd
TAFA4P6T1Gh/xz8fnxPmiVsCQAzs0It3hMc/ajg7ZX1fAkA42Q1DhonHP7TR
YuRwYwJAkLOHsaOTxz9JBLLiV2sCQEBoe47ep8c/cmlQ3yV7AkCh0WJIVNDH
P8YzjdjBmgJAYqQxvD8hyD9tyAbL+dkCQI6RbnNOJsg/uGEuSu3dAkC6fqsq
XSvIPwH7Vcng4QJAElklmXo1yD+WLaXHx+kCQMMNGXa1Scg/wZJDxJX5AkAk
dwAwK3LIPxVdgL0xGQNA5UnPoxbDyD+78fmvaVgDQCSLJ4+RyMg/teTWt7Fc
A0BkzH96DM7IP6/Xs7/5YANA4k4wUQLZyD+hvW3PiWkDQN5Tkf7t7sg/honh
7ql6A0DYXVNZxRrJP1EhyS3qnANAF5+rREAgyT9LFKY1MqEDQFbgAzC7Jck/
RAeDPXqlA0DUYrQGsTDJPzbtPE0KrgNA0WcVtJxGyT8cubBsKr8DQMpx1w50
csk/5lCYq2rhA0AJsy/67nfJP99DdbOy5QNASPSH5Wl9yT/ZNlK7+ukDQIg1
4NDkgsk/0ykvw0LuA0DHdji8X4jJP8wcDMuK8gNABriQp9qNyT/GD+nS0vYD
QEb56JJVk8k/wALG2hr7A0DZzW8hYJTJP9FYHxrr+wNAomicww==
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAGIQHZ16WPDyvJP2DGDA4nCg4ZeY+RYEf29r9BGlUwj+
tn5Z+V9fT9ozQvkbZt6vvKh4yv4/GDA7aE0sbPx7FsFf2sHcqVl1Gq7f99s6
yxNSZ+DyX5OjXqXtPgM3jyGkQK4n8yxcPbdLW9BG8XNw9S6rtup77joHl68R
eMrzMOY8nO/lNq/N/c95uHqefdoM130vwOVty/z/Hv6F4M9Z0rNYec5FOD8u
1OQsp/clOL9L1NfgyYJLcPdtvZo6ed+3S3Dzvwdwe19yuwznW57ZwPRs2mW4
+jUd3H/2vL0MN0/BNe3rZJcrcP6qPb7OS6Zegas3NTGduOXZFbh5XZMTdXXM
rsLl73/qPbm49Spcf9rk/OX3bl+Fq39jHNgqaXQNLt/Zv397b9M1uH6117qv
GC9fQ4R/e2CcpdZ1OP+ISumlgsbrCPfVqM5+eOk6XH//lavJQSo34PLvgw9M
ZDqC4G8KFXW2LLwJ5y8+2zz3kdAtOP+sV0FPVRaC//14TLXQoVsI9+v07RCU
uA2XfzBx/1eBPAT/9cbads99t+Hu+XbRWrKJ7w5cv7Hx+je1qXfg6gumKB2o
3IPgH9mg9GId7104X/ysksCTuLtw/aYX09sa1iH4wVfX/JH5h1C/SGr5lpqQ
e3D+p/iFOXdWIfj7E9a38vnch/O1HWJt2Zfdh7t3ujz31///78PNBwAtkFcH

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZXw=
        "]], 
       LineBox[CompressedData["
1:eJwVkH841HccwM/3iOO6fdhc2VOJPAzX+qWn1Nr7TShhy1F6/LjMjVUjtLU9
VhZ5zuRnohURdkiJOz+Syq+nPOp7OT+O42bHl9ZpylPTOsqotT9ez+vv18sm
IlYYSbFYLPf3/O+QyHvmA5dpKFhE0T/BFLJbZwK7pDRcsVs1Lgql0P2tN7pd
paFEGRo9E0ZhR9I8f0sjDbEK72n+VxS2SkI6bRU0qNdsThd/Q+FCV4OsuJeG
iiFDk7lDFH5mwr20XE3Dvw8jqtKPUHg7vSWeN07DZKB6b30MhU05K63n9TQ0
dT9B9vcUyguYhH4bBVzNDS6tTqIw2nHFyEYHBbwQBOlcT1P4ya0D2/IFCmjM
6PN5kEJhiaZ/fv8WBbgNeyTqUinMXtZ5QuurAMvM08dssiiMOV+V+ORHBXhF
KKpKCih0yo1PXlQq4MLjoAM36imsSGOfcfzpIYy15kV46SjUi4OfRt3phpik
YzyeJxvNPFKFdct6wPqNXGgmY+NJouNOhPaCzc2n13kfGSK3zZk17NcHZckd
IUsTDHHHD18u3pvvA4oW1Wj/MsSi8kzpmqJ+ODfiHxkcYISifS5Kjo8KXhdz
VY60Ed5QR+a1zarAi90q94El6NotpyZ/HYCaVQ6cFtkSXO0Zpc/zGIQc7am/
1wqMcbPL5tzGyUFQcC0udvxmjMzLLFoqUUNPe6rPHisTnN7kL7HaOASJc35B
GUUmaP9s7VODgSGITZAuSqw42Gl3XBWXPAz6lLuBvVIO5gyqxUI7DWy/tLyp
xMEUXwR05FKdGoijJsOjq02xfp/lTtf432EmP2eDcIcZSpUpxY8sRkCyIaHL
94EZzt0PPWFxdwQ8+C9NORFcHM9t15Ojf0C4AyZuWuDibP92q9M8LfC9p2r1
2UsxLt+2I6FFC4Lnv2w7uIGHy5S25LFoFGalLL1dNw8D1NcXVrwdhXGupXIi
6gN8ebAsWnttDN6k7LxlxSHYHi6T8HwZOJm371BNMMHbvdE+Y18wIBXPCleG
Emz63Mm81p+B8tXTYVlhBK+vqCjyC2KA3z4xGBNOsFBT2JAZwYDA2XPX+iiC
x/emTpgmMHA+6QjeiSfojGE7jCsZeL3H6eJUGkF72cfs4SoGtg48PxeWTtB2
leZBZTUD9nJxbX8GweULwkCvOgbadId33c4muKR597eSFgZ0bVuprHyCE+tc
CtgDDOx+9XXx1lKC2sszogE1A8fN0sprywhqlsrspBoGtBlnuu2kBHueOcrd
xxhI3r/plHklwZYr1veTpxhA9nex09UEm/mjmf7TDLACRhLFNQQbJIVCmxcM
yD7dUjNSS/Ca2HKs4xUDf1qPHqXrCFaoVNKzc+/7DQQGbg0ES93OHg6ff//L
6GRjcyPBIrnfuvWLDLz7sC9tfRPBC9Zm+nfvGHhk4fxz1U2C/wEz9u3q
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
DFisw3Dns0vGka3QpjH9vM95Hf4H3KuZ7Q==
        "]], 
       LineBox[CompressedData["
1:eJwVx3kwnGccwPF1NCRELXHuq45KGkHTKGPI6u+xkY6Mo1i041jKMOOqSKOq
0mm01lS7JOpIXGkyG8eKY0Mi4opg8G4tcaxdsvYhDWkxFftaGmfTP77zma91
TGpQnDqNRmO97X/D4/rpk7dI4NNyFANSJWh0rwcP8klw80pssZUrgbV/AXkK
SNipiSrZm1dC79VtY9cHJDS6Rpu2Liuhmxs+YCMiITajheG4r4TdwdbmqjES
6m5Lu/U0KGBq61aYSkhgu5+8s65FQccvXWl68yQ8ppU6dNIpaLtmYbmtImE0
QBgVeZwCYRnOHLcWwc7NvB8UvhQk2xGzTh+IwOTLy27dgRScfPyFe7GDCHIN
VY5VoRT8LhvfDnUVQdOYaig6moICk4Esua8IXp6pG978moKUkrrvX2WIYFWz
mcWpoOBUYVr2nlgE+VkcX4sVCqp/1siz++4PuOx04beUgg1QxYYtx3eOgKSK
3YnEKtDxyg26bzIKSUnM8yRzC67oL+ouRIwBT2eI/VTwL+j22NOkfs8gcREW
vY9vg8c3n+31bz8D1SNmrnx2Byrv8vjvV47DleToM294e8AJcRYf9pmAwNBL
+pHZB/BQElfUszkB93COIn6QhtxGhOpLpZOw9BcXiUk1ZHU+XlXkNQVH6j0Y
MxvqyMXZpfDB0hR0SNMjWi00EVbmk3yuBOI78xLYQe+g1Y8DuWZO0+CtbtPo
0HYInVhxXFabnAZL1uunhibaaMA2feJithRiraS5C42H0bUpSWyQrQyen5tu
WfPUQWvs3kL1ARm02fZ02C/popYQo3NuaTNAd7C0F4j0EF/8U9ULg1lIDWQb
tYXoo62hiCyDvlm4y7z063AiHc0XPlHpf/Uc5Ir4tDqeAdocP2v2o54cmK5s
K60GQ3Sx2KY3s0sOEs1/evy3jiETsY3+S84cpLCbtM8iY8SWNOwS+3Ogche8
C6UmSBl1J1lerwDXRbfiYisz9CS6mavniyH4dfZCV6056hhL9lH4Y/DnhGcM
NJmjtk9O0ZsCMdRSI6/ED81RA1Fd6fc5hhfhKWFL/eaoXFbeyovBUD8SXuw4
b47SA3IXjmRieONvTRqZMZA9ivTQqsFQk/qoKYDHQCeazTWkdRh8c8p5xUUM
ZPOebLjmHgazgp3g2XIGMt0NCv70PoY/j3rUJgkY6FC7dxK3C4Pg2GpU9SAD
LZx2LtOYxDATPFeUrkYg+a11zqQEA8suP1SmTSDZ0WZbvgxDqXBex0OfQKMr
dkKWAoPDwdUAXUsCddVaDmX/jUHOpAf0MQnUbjzHC1zF0Bnm3ebsRaBWbnmQ
9drbP2AZCnwIVB9rpOjdwEBxSlpvhBGoemKCf30Lw03h5hY9hkC3Pa8nRG9j
yGn/0KUggUCVQr/TH+1h2CvrS9JNI9ANSx3VwQEGnwrXSt63BPoPAc0IOw==

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
nkL/O28Jh5QmUOlOU+ocegr/Awda3xk=
        "]], 
       LineBox[CompressedData["
1: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
pOpLlw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAASmXo0cDpRT4AAF+IEMWYGOeuVmLf
GSQ/GGtKcRzJehkWC9WOsxk0P5qXm8RvzI8ZLjkUpZ0ZRD8ejPjZneCmGTrQ
M7CSGVQ/InLU1uKVyRnAm8M1jRlkP5GDRSOzZwQag4GLeIoZdD/Mmjux7MN1
GmR07xmJGYQ/0xbQnfxNWBsIlEmh8PGUPy8NOfE1vkMdt9AyR0cenz/uu1JQ
f1EPH1iD3NrDi6Q/CHbBuHzS0CBvsXMtmPSpP1MRgMmrjLci8pDWyAEBrz8C
oklcOhiAJMjBxr/PPLI/0AEq0PeqbCZpeUkNWey0PwhGbm1eSlEowQky/6xt
tz9QjlOUZ10UKqajxP4aJbo/JzWUeqVB/ytAFr2iU668P2h6c1Cua8ctLcfc
uMYqvz8H97xq8cSHL9RAU+6p7sA/Jk8Lw3RvbzFsCmvS1TDCPznXyfbpSzQz
y9hXvQ6Owz9DzhKusBMhNVNGWOHk5MQ/7YNXSeh1Azc2oItXoCTGP2X0ymBc
p8U44P6T1Gh/xz/5bQAzwWWvOuVJz6MWw8g/I9qMus45djwkiyePkcjIP8jL
kpLkDX88ZMx/egzOyD+7XYtU3LGFPOJOMFEC2cg/HCKidyktlTwhkIg8fd7I
P8QmMnCJlp08YNHgJ/jjyD8YDqFFoqukPN5Tkf7t7sg/DUfeWTMttDwdlenp
aPTIP70Qx0TnMLw8XNZB1eP5yD8U707GybHDPJwXmsBe/8g/aUr4M3iEyzzb
WPKr2QTJP1mQsRBTOdM8GppKl1QKyT/56ZTZJ9zaPFrbooLPD8k/f+HJL73D
4jyZHPttShXJP1noVQLdN+o82F1TWcUayT/keq2I9lDyPBefq0RAIMk/+z4Y
FX+X+TxW4AMwuyXJP/EPIezt4AE9lSFcGzYryT9/GS4P9voIPdRitAaxMMk/
FcIFlJJzET0TpAzyKzbJP3SVxoAqYhg9UuVk3aY7yT8/NdYg1AghPZImvcgh
Qck/zl9riQXNJz3RZxW0nEbJP8AAM5eioDA9EKltnxdMyT8q8JPUcDs3PVDq
xYqSUck/fhp+Xe46QD2PKx52DVfJP2iYTZZWrUY9zmx2YYhcyT/b1glzUK9P
PQ2uzkwDYsk//hb4h6EiVj1M7yY4fmfJPy9OcZyC7V49izB/I/lsyT+hJRbl
PJtlPcpx1w50csk/8D3pMlYwbj0Jsy/67nfJP0JoMWgUF3U9SPSH5Wl9yT+G
RaTjrnd9PYg14NDkgsk/fIPRRxSWhD3Hdji8X4jJP2VzEwlxw4w9BriQp9qN
yT/WpoUzKRiUPUb56JJVk8k/rovCpoETnD3ZzW8hYJTJPwObmlMd650965ve
3Q==
        "]], 
       LineBox[CompressedData["
1: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
7Vv+ZtTe16+rYMuq91oob2GW/z9Usf8Da4gEiw==
        
        "]]}, {}}, {{}, {}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vg\"", TraditionalForm], 
       FormBox["\"probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 15}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756665108951453*^9, 3.7566662046131277`*^9, 3.757419410145452*^9, 
   3.757419682589402*^9, 3.7574199233292017`*^9, 3.7574203498897467`*^9, 
   3.757420868340716*^9, {3.75742168588958*^9, 3.757421711622335*^9}, 
   3.7579760757677517`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Results"], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464233061038*^9, 3.7524642349232683`*^9}, {3.7524645209606123`*^9, 
   3.75246452096133*^9}, {3.752501601242539*^9, 3.752501637354268*^9}, {
   3.75250674801861*^9, 3.75250674982616*^9}, {3.752862919441516*^9, 
   3.752862946649535*^9}, 3.752927935206502*^9, {3.752928197778576*^9, 
   3.752928205218182*^9}, {3.753091405697989*^9, 3.753091407751841*^9}, {
   3.753139734883931*^9, 3.75313973708954*^9}, 3.753621530956925*^9, 
   3.7537083495023518`*^9, 3.753717464046376*^9, {3.756243053268134*^9, 
   3.756243054488398*^9}},
 ExpressionUUID -> "b92f7980-0c04-4448-9103-c759cf394f7b"],

Cell[BoxData["\"\<In this toy model, the total consumption of glucose of the \
population of cells can be estimated\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756563285157518*^9, 
   3.7565632887624207`*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expectedVg", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
        RowBox[{
         RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
       RowBox[{
        RowBox[{"normalizedDistribution", "[", 
         RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", " ", 
          RowBox[{"totalIntegral", "[", 
           RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], "vg", 
        RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756490974375958*^9, 3.7564910094289513`*^9}, {
   3.756491049211607*^9, 3.75649105565872*^9}, {3.7564910951780977`*^9, 
   3.756491162442902*^9}, {3.756491247201353*^9, 3.756491250030674*^9}, {
   3.75649152020603*^9, 3.75649152090969*^9}, {3.756492846982465*^9, 
   3.7564928538055773`*^9}, {3.75649293629764*^9, 3.756492954502758*^9}, {
   3.756492984920672*^9, 3.7564930689893427`*^9}, {3.75649328730233*^9, 
   3.756493325073654*^9}, 3.756493387824346*^9, 3.7565664077926397`*^9}],

Cell[BoxData["\"\<Next, the value of the glucose concentration are obtained \
from...\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 3.7565633461031723`*^9}},
 
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"cg", " ", "-", " ", 
      RowBox[{
       RowBox[{"expectedVg", "[", 
        RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "\[Xi]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756493176292547*^9, 3.7564932248201933`*^9}, 
   3.7564933878310432`*^9, 3.756494519128881*^9, {3.756643422511797*^9, 
   3.7566434367535467`*^9}, {3.756645409763424*^9, 3.7566454211979017`*^9}}],

Cell[BoxData["\"\<The expected waste uptake are given by...\>\""], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.756565976804381*^9, 3.756565999130979*^9}, {
   3.756566066447177*^9, 3.756566093660502*^9}, {3.756566307388206*^9, 
   3.756566318550322*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[CellGroupData[{

Cell[BoxData["showSubstrateConcentration"], "Input",
 CellChangeTimes->{{3.757157381464622*^9, 3.757157390337722*^9}}],

Cell[BoxData[
 StyleBox["\<\"Substrate Concentration\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.7571574670686283`*^9, 3.7574197635779*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQN7UlW+/f+v6/De8tc/J71n9u6fbPafAfK5mddW
vZr80X5v3Jak2f9g8t/sZ0jOvtryW9fBuPftd8cDP+0DJjLyLvqq68CkoPWL
e/Uf+ziTH3+53+g6hEcZrStS+m9vW9g/9/ZdXYfi1db2mxYxOCRvu/5A8xTM
fEYH76KHe/g36DqIhW7dvTGbySFPeK/asj5dBx/z+u2P9ZgdXDiqhdlSdR1q
513eI/aQ2cF9v3aFh5GuQ2CPoTZLK4vD+2X3Pdu+6jgs331d7JQMq8M23eW1
N9bqOMh7+FqKrWJ1EDk0iSMiSgfqfjaHpkub7sv+0naoqv91MHsVm0PVWfEf
Tj3aDm0Ts62q5dkdShUvuT3g13bQ2czCZtbH7vDG5tMBvhYth4mPi6udvrM7
hPV1RD9/rumwcV3+FL1oDgf9lqXczVaaDieO2paX7OJweNcTeexXlYbDh80X
/9aKcjrwiG9tSF+h7vBTZ1LN8hxOB6aJJ/QfHVSDhh+ng1fmkhPNx1Qdzkp9
eDVFgMshji/SIXWrisOEFuYd92O5HLa8+9Y9v1fZQdlr2rWoFVwOxyv6Fnj7
KTnI/zt72uIDlwO/tEFx0zcFh9nXuH8uM+V24O648XEnl7xDlPZEj3MV3A4+
R5b5vvgs7ZB9Yse+yzu5HVSO3Vy5ZreEw8UdV7/c+MHtUPEx9LeHq4TDN96d
jX9MeRy88pSrUk6LOxz9zB8cVcjjMEvgq8MbP3Fo/PI47BM2DhC5KOaw97jV
O43HPA556ZHR2cFiDiscDx89JsnrwLM5bfrX66IO13g7Mn768TokTCqaG5go
6sBbZGR9uYnXYca1LZJvPok4+K3pc03dyuuw65zNFs+JIg66tnoh+5/xOjQo
6JgXO4k4CL4REfsgxudQ1dLNOINPxME55I8Zqxufw4ziVPvF3CIOS04uLuMu
QfBznCbs5VvI5zALyt/2YYK+1Fk+h2lQfunuABuLHwh5SPrkh8uvl16z/ZI3
gv+fIfB/Qgk/3HzPletWqc7hh+tfbaOUoXEYoZ5H+FB5wUuE+s//dkU2sQvA
+QE5Wqe/SgrA1UfOWrtQVAch7+t27OgTWwS/UvP4z1R/AYcpUH63Ueqd2QkI
eQDd6Y2B
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1Ug1QkwUYnmNjY/+U7OLHGJjK2L5F/Als9D0gESW/SppLr+W1wjZSEVH5
iVPQuAgOErDAkx8NEWRAKH8LCLjxE6AQBXZykFCKntUURIbAojt4755777n3
ufeee5/X6eDhXWoqhUJRrOL/vl5uCvmc2UzgX9/FlUDZfVL12HS7c5WzLaoT
H51/QrqG/hG4Z2V9Pk+6v8Cp8kUCHll/Pw/4yURu+u7z4uJZAlSR6yK7aonM
MujvETME9irddXHOZnKrKEnrP0bgWJWc/KGMgqwQs6alfX3/Bnw8UcjJLSEg
fO+mvk5DRcTpksTqkwRCt6c2TsssMDt0cOpFMIGUSyM/Cu+tcq3nkRgWgaiv
35DQztLwdO7TyMkOKa7qx4Q/O9CRz4ysCdVK4RgS5iuspCP1bbL5IlO65t8S
u6MyCvX5EiSmLnZoKi3RYEhJzX9JgnO5Gr8kRwZ2BsXlCb9whbSeZumdzUCj
tokuGRMjd/pYUuBzBoomysxtDmLU6Q7nyT5g4pJvuq4tzAW9Bv8T8S1MfLSp
5k3hoW0w1g8vp9hYIUOcMF4XuxUm6TfJV7VWaFqW3EhRblm7nxXyfDc/Vcte
w6Cd8VGegIXOZF3nnhln5KRbNE0eYGHqE9EuxZdO2PxuwaiygoVvL/QPUFki
OK4M9vsYWbA5QG+TTjqgaJRtKvdio6HA7bPuWFsoJbkht06yobJvm69stYGm
t6ltpJmN9IhXFGN/WWO46be5Owts6I4/3PYsyhrz3ObTS14cJMh91H2lAhhm
+buVRzlg1qYtB+n4a/lyoKhvb7jygIvWHr9/XKY5iC+0m2qeZaMioMvQbcuF
quzyjnNjVhjlZsSYwrkAxcmNX8gAN85dPnKGi42/62oPBdMRfj37LfVNLob8
5B1BRioIf1l0+30u9s8x72a2U2D9eKPQKORBddvjw1bxCrkjesmbHsyDD02Y
xik3k1f6Liew43kwZs4XyTop0AbmtPJKeXjf3KVtqN+ABmPO63aDPIxPF5+t
+J6K4/pIhc/Cqv7WyNKrBRZr/8nHkE+FaW8aDTX21xt/2cmH53CJyKChw0yJ
Mqvi+ei9m2hvE26Jd67pKrdc5ONX7xtF28UMVCmcY1y6+JjpGejev8QA5+XO
E0ce8jHQL5c/6WZidqVl3xmGALQkcuJChhUita79z2wFcLsTm+wcwMK+wupS
G6kAxkUP3lerOYYFdxv+9Bdg7tp5rwcFbJwS95jUEQLk6WujNZ4cZLqrx4tU
AixkxxxV9nHwHzUnn5c=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UglME2YYLaUU2tLDAY0w5JwcpQXFwZDD/4GbASaMazLqFkHspraJDFGY
wIjEMwwCCEyQbOjcdJwCQSso47AIY8igjLloIg4kDDlKudquo2MZvOTLl5eX
fPny3nM8fCJGQqVQKIHr89/eRF7EstpgEGF+t24txHOSiF0P73ywzlnGdWem
rywQ9230t93WNvUV4l8giHpDJ8Ku/NnV4A4tGflj67NQtQhUB4GOVaMn/ods
BBWvRIgXe9enOhlIY3ZG8ciwCCdrAkjTDQq+LMk61iPfvG+ESWoKbU+ZCPwP
W9oapVQI3SrljOMi7H8n5964pzHKksOfrXqLkP2N8gH/pTGOWT7qHJ0XIvqr
nR608zRMlcd0pn0rxK223/k/25ogIZZ4VUEI+9CI3fxqE1CqlImuwx4b/9Ph
9OKjmqcxHjiTo+uUVtNhnLL1SG6nABeKpP6Z9qaYajw4prYVQNhMo/sWmIJP
k53SJLujaPxkZsiqKYYVxRlJpW5orD9R4nnQDIkHrIm+wRW9iqD0tFYzGFuF
2X3d5AJV89A/2VYMGCVJpZTK7dAKi7NuyRioKu/LpEvf2vCPASe7upvpds4Y
sFFNl/CYGIw4FODU4ojCc8byF58wMXXRvXRE5ADn8LJR8W0mPo2v5rRytsF+
baDfT8XE9I74JxZnrXFtlKX9wYeFSfGMRewdK4g9ikKfZKzzK/rLlhVbIO2V
tyvvs6DJa7gQIWdiSP7b0lMNC7b66s6kq0yssO+f1fuYI7DOu9ZgxYRikRsr
/twcS6WzOstdjI18zfFxrbPwtNoUDx/7z7mNm0M/wX6VEU/H7eBuRY81G2bR
o+e7JDSMsi8d1UayUeKbOR/nSAU71TtAmctG72cFd5l2BhJZW/CepIWNq/tf
/mIq0xJRkGfcT5NsdCxk9daFL5ItM5Z8FZ8DVdjrrqHgabI3Tu9rso8DyuTS
bFPSNLnZ991pVhoHVX8WDeHGayILKXzIuc7B2GVPNXt5htxVFXrZDHDwa8Zg
R754jpxqiwr003Cw43ufR17KefJ/P7kYO14V3tCgIg1v1t4bfp8LSr6Rpj1n
gRgo0YbENC5CnamtiwlqEvZjffX2Si5U/fTnqXsWSU2g01G3bi46WlzaD4iW
iLlFV3rKX9z13GTnql2WyeJaa0KuKQ8OE30ciWCFRMkE/cvWPBRGRpcn+62S
hIq661ZCHsY8lJeORGlIxL4exUQQD73vanTUVC35wv2xVvIBD3LFXG1zpY7k
eUueX0vkAYy9d7oH/yb/Alerp+o=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kg9QEnYUxxFFUkSYCvNPF+RMTYQtVs4K/T3d/LNNHZjWZOfFbCQ78ai0
OXUqtblruTFs3lbqdYmWpcmirkKdZinm5NxpXubZShB0i6Ux8R8qMHblu/ve
u3efd+++997bmiNJF2IxGAzHqf/zRryXqTc7HEx4sXvVHs+aQYtc2SGVsya4
tpWYfvoXDf94Dv/EtsGXkKQsrpxuZcLbP8wux/VYkbiyTxRgZgKWHrFKaF1H
Ob6fioR6Jhzgs5XHgh3IdCZzi0LLhILWvei6AgMXJDpGftvGfBfYTAH2Z5VM
oGbe7FTlYWFt7vqDkHQmpLxTcdvAcoUxUZEyxYcJZedHf6PqXSFxTnu4uC8S
eN/vYLhVusFfprn65NxIaO58RB3cjIOMwS3zB6wMoCWn7qa24CBk5Rw+oZjx
yr87LE6eL2+bjoCSitW7eS3ucHA2b4UVEwHfVuftKaXhYb0KUXPLt0PkDTf3
KBkePg/7uNjSHA7VhoLS+GU8xDAW7h1Vh4FKKalhfbIJKK7pNRXKUBjQxBQV
dmyC7wKvyTpObQPzjRFbGcUDdj5J2deTEALWyDNfNYs9QHXr8NcsY/Cr/XlA
rQ+nR5GzFYYCzaYasif4tVP3H6+ggfwbV/VktiewMaGDYQtB8MYHP4/xL3tC
30gw7SzdH2j2IW202ROwuNO/uGD9oG6MYL20iwCcqWv/xDJIwGdUJ//xJQGa
JijWLBUO8gbU3aPtBJD6C7p29i2jEfXDhfEVAiRz7iy29FnRErH9xPouL/gb
x5t/Vr2GNBbSPv5RL5BrinvO2tfRy/t6gbrp7kLSuA113d8zF27wAtElU3Pu
rA1djuvV9AcQQTSfpNX72NAY8ZTImkYE9X5yqTFsDRGPsfeOniSCtKjpYvbr
KyjtqixBeJMI9KCqbtUjC2LGsDLuzBCBa3Yp8Hj4HL323I9qpnqDrj/p8Yu6
SfRuxnoULtEbpAu19ZjYp6jp98YvCIXe0ONItewYf4rE8fIu7wYnH6A0tpZO
oltm+ZuBQ94wPFq0fMhPh453cjnRK07e8FajWaJDL/+TBEdimYQrwzr0a9DV
2w8+JIE53z+tI0qPHBieQ1BIArpYls1T6NH7V5Qt2+pJwNUmm2p9p1ArJ1gU
3uvkVY95vaenkJfvvaIjz0ggJdBkS3gDstg7sk7iySBI5IcKqgyIK47QLgaQ
4UJndDCDYkRZtW0NlEgnd5fbT1w0otTEfo0xhgxc3/lGGWcaFW+/bxV+5OxX
YA+WTEyjKrbwzzoBGcjd0on8ihn0H4dMr9E=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kn1Mk3cQx1veat9rhAq6CYKyQvvUrlsZSMnvgAxRh4JCVlhMGjIyEpog
L0PFEVnHmBGoVNE/6CKFGcW+4FBLC2gHMxUE0TmkPMW3si4Eea1xlpYBXRfl
ksvlk+/d5XJ32/OLDxX4EQgEsc//j+umWlAser0YLCYsr6Xwp5BLEVmj8THV
X185c/41et6lF+lX13UXWrnB0dS6MfikYX4puc+D/P6o+8mwgIFfROwyVbuC
VHmPykwvMPgyT9hRGulF5S2zwYwBDMq0iehGGwHEszhLdGW9PxFazpyl6yox
YOcYejuL/GDfEKnzdQoGX3x2yujg+8OcK6G1ZpUHVZdGb7Mn/UFwZFuNo50H
WfUfcwN+DADLXr23PpUHV3vH2UMfBIKE/LLbO8yF8PSMBLYmEC5OayU9wH0/
fxBgn9LkiepYqDy13F+kCYL78e6nxFcxUKss2n0ynAShqYW0+rAY4N0MCIpT
kGCwJbtbIuCA0lF2MmWJBLUqw+kp7kfQ2VHcxP9qA3jlP0TcokTDoCXpWHnP
BrC3dUXD8A5w3ny8WhVCBuuePclkWRR4eOe+uyojg8KMsRWz29/vjwymw/n7
M9IjYGSLc6aJRQFiew+9jvghNNb4m14eocCOUP7zmegwiNp30ZrXToE4JTPL
uBoM4Wsjw/FOCjTpDhrm5SxQWameKyIq8EhmLfsbEuRxlekPj1Oh2mxaFgmX
UdGgyTzaTQWCmpAjgVH02DT2D+6mgtRbYBZyx5CL3v39iogGarlXqhKNI8sb
5uG8Ehr0Ne8yNkht6N19fWwxPiTqn6I7A7sXOA4fXziq7N/6ArUn37XcC6PD
rwldYws5dmSlny70HKCDoDhtPL59EtFLhYmjcjpkRuEPNtv/Qgd0is8LDHSw
e6abjDIHwpL42b9N0YFQwmlu7Z9EG+eC2U42AyIojyQPcq0oNXslLjCNAXat
9sT5KBxdvv9LBbWcAepF5NgsxpEspfEOo9Wnf228PZWDoy5n464tI776pekL
1BIcfdubKY53+/LZZennGnD07j+ZQNiW7K7V4uj6Vp3xz/1MUPc+2+QawpGX
kOWVljOhj30me24WR3uvdWh2/uxjHWauYNiQVhxZyLnLBLvg30ttQhuibfr9
2NFXTJAy5hVVEht6s9aTKyexoLo0oDik2oYyZbHDb8N8HHmo8Pg1G8pt1reG
8Fgg1Q3O3HpiQxlp9yx/J7EAnuBaG3ECnYgZ8BQcZIG6wnb5rWAC1QkLnqmk
LLBLxRtD8yfQf5pisbk=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-0.15060577328486247`, 0}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 14.999999706213991`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"sg\"", TraditionalForm]}, 
     AxesOrigin -> {-0.15060577328486247`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 14.999999706213991`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157467405468*^9, 3.757419764476811*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expectedVw", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
      RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
         RowBox[{
          RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
        RowBox[{
         RowBox[{"normalizedDistribution", "[", 
          RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", " ", 
           RowBox[{"totalIntegral", "[", 
            RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vatp", " ", "-", 
             RowBox[{"38", " ", 
              RowBox[{"expectedVg", "[", 
               RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}]}], ")"}], "/", 
           "18"}], ")"}], 
         RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "vatp"}]}]}], "//", "N"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.756565976804381*^9, 3.756565999130979*^9}, {
   3.756566066447177*^9, 3.756566093660502*^9}, {3.756566307388206*^9, 
   3.756566343720001*^9}, {3.7565663882302523`*^9, 3.756566419121586*^9}, {
   3.7565664784917793`*^9, 3.7565665004011374`*^9}, {3.7565665372731333`*^9, 
   3.75656653818743*^9}, {3.756566585135054*^9, 3.756566585232998*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData["\"\<The same way, we can calculated the waste concentration in \
the medium...\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.75656589903022*^9, 3.756565922220356*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"expectedVw", "[", 
        RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "*", "\[Xi]"}]}], "]"}]}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7565659240090923`*^9, 3.7565659485284443`*^9}, {
  3.756566618090026*^9, 3.756566636426803*^9}, {3.756643092661798*^9, 
  3.7566430992247667`*^9}, {3.756644688879991*^9, 3.7566446958257713`*^9}, {
  3.7566458757147217`*^9, 3.756645887099815*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showWasteConcentration"], "Input",
 CellChangeTimes->{{3.756645640182994*^9, 3.756645643181884*^9}, {
  3.756645840541394*^9, 3.7566458900979137`*^9}, {3.756645981211153*^9, 
  3.7566459869153557`*^9}, {3.7566460399686193`*^9, 3.7566460400862293`*^9}, {
  3.757157411980389*^9, 3.757157417985807*^9}}],

Cell[BoxData[
 StyleBox["\<\"Waste Concentration\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757421087688238*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQMrgrrqFeNn2b23/PXPSe+ZfXmrc+pkZUd7bua1
Va8mf7Rv+j6tTPpCrj1E/pv9FOaibyd+ttsb97797njgp/3yfZWJV3fPtmdS
0PrFvfqP/V71yIelG1bZh0cZrStS+m8/4fd///6r2+yLV1vbb1rE4DD7l//7
3QyHoOYzOix/nslku/uUvVjo1t0bs5kcRLftOHXs8yV7H/P67Y/1mB02iLvq
Vby8aV877/IesYfMDirfvjKtMnpoH9hjqM3SyuKwr/n+1b9uz+yX774udkqG
1aFA7oUNh+sbe3kPX0uxVawOnBE9n3gWfIS6n83BRHDv3oNLv9pX1f86mL2K
zWHF+q5rXra/7NsmZltVy7M7eK6onBxQ8N9eZzMLm1kfu8Nf8/altkuYHCY+
Lq52+s7ucH3vs5U7n7M6bFyXP0UvmsNBboFsU0E7p8OJo7blJbs4HAIk8yLN
OngdPmy++LdWlNPhnWHv2vzvAg4/dSbVLM/hdJCKNbopnyDsAAk/ToeM1e5H
pzKIOZyV+vBqigCXA69VXrv1bQmHCS3MO+7Hcjl4qbmbVn+SdlD2mnYtagWX
Q3hv8ZN9HvIO8v/Onrb4wOVg5uYValGg6DD7GvfPZabcDkkLlvr9jVV2iNKe
6HGugtvhZLJM5uM8VYfsEzv2Xd7J7cCvzfWGe4K6w8UdV7/c+MHtoKxuYBz5
X83hG+/Oxj+mPA5lhikxcVlqDkc/8wdHFfI4NC/6ZGR7SdUBEr88Dmt/K2rm
Wag67D1u9U7jMY+D4QfxnhvzVBxWOB4+ekwS6O+FLu6f2VUcrvF2ZPz043XY
pBL882OZsgNvkZH15SZeBy37bHmWD0oOfmv6XFO38jr0mDZnra9QctC11QvZ
/4zXQbhW8l2whJKD4BsRsQ9ifA7rhPvWfLqh6OAc8seM1Y3PQW3B+grfq4oO
S04uLuMu4XNQh/JznCbs5VuI4G/7MEFf6iyfgxaUX7o7wMbiB0I/JH3yO+hA
+eul12y/5M3voAnl/2cI/J9Qwg83z3PlulWqc/gdVKH81TZKGRqHEep5hA+V
F7zkd9CA8j//2xXZxC4A1x+Qo3X6q6SAgzaUHzlr7UJRHYS8r9uxo09sBeDu
rdQ8/jPVXwDuvm6j1DuzEwTg7gcAYfidlA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UntME3YYLKWUlr7B1vHQIhsbCHYCE6yAvwPkIZsCA7e0081IGpHWMBEE
ZEh0Qgw4hdlBBjpSYRR5W3BSESaS8tBAUCIqGxmKA9QpiAxsrXRbcJdc7o9L
Ll++uzV7Uj5VUCkUStC//E//h7Ynq0F3vmTzjNS0FCqZJPMMc6dRGUxY1g2H
n5x5QdrnVINjJfvIsr9AlC7DDZvVx4nfd88WQ64ZyegPApNloJRQXdeaWHVm
0mr4NuXodDX5XO7bmOpmIaFxibHKH1vIwbpAojtPge/7spWaqc63+VYof9rf
0PWih4h2XGq/qKQibYHym2rLEPkkIPfyhMQaD5Mmf24NHiE5Pw1fFT2wxpHk
uMLxvDESd9LHi5ZHQwI7N4UtniDa9ruiGy42+DIqwXQ9bJqIo7ZJRbU2sM+k
82tCnr+9nw7OHekzrXqOHM41dSlr6ShbuBqizVsg+cXKTdliW9Bqsp1czCbi
3UKj+5+yRWymb4QHhYLiiYPZoYu2mH7q91nkABUXG1PUki8YSNHpI4se26DP
EJyRdoWBsphAdw8ZE7Mtt97kCJkQRK43+rlyYPT+/hutiglwGXtVGj6W/8fE
DU/Pu+ce2mPAafaJmm8HY0DA7Ws7hCg6bt32xy471Jr2j02ZV+Ld6JIReY0d
mv2YR9xHnSBeGri5cdYOD6q2SE/OrEL5CMtYvYEFJkMSXVrhCrlXcdRgJguF
5eEFpxVuUPa1dQ7rWdAkPooZ9HkPt9ruzN97xUK8Tq520LhhgaM/at7AhuXN
+Hgvew0ML3nx8gNs+Jexl/onV2O5XzZGdw2xZ7TO6Ojd9Nxjgo3mvGZTwc53
UBPSbehx5CBVunfkI7oQI5wTScbtHMSLc4UdFwTgpPoGDh/jwGf/9NLWSja2
158KV1zi4ESi7KuMD+hYFyxJ+HWSg+i57qRYQoHgrxWiWREX9Qp5pUa3SMIS
zP42EVxMl+fe/zP5NanqrzzESuOiQF06EyGgQBVa1MHVcLEvzCldeoCKX2aL
PnQa4KJC59UkGaIhvT02aOMrLvpUZ9PDPW2xvE8ejk+56VmZTDQ511++/TEP
8YxDVZVtLFgocZbdaTxYFdGb7k1xsPVCY637WR7SQmfsz1jxURfkluTRzUOW
3kKV0QRgO1zP+PoxD/kRLl0VrwV4uXRFdsyWj536c/7cKXvEqtbe/NuRj3lF
jmt+jwNkZQ0aoTcfsnBjsmPZCmyL6DE8CubDIFY5U/YIkeXZa1TE8LHqfqf/
6dUiFPoqfi/fzce66tbR9UMi/AMdep6C
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF0glMU2kQAODaAqV9ffIQaEPVrWJVxFoFFRVh/7G6LKJVVDwou4kuIZK0
VTksCh7Bg2WDGg63q0A0KoJtpVxWgYoKTREkYBAFWU9SioJWi5xtONYN6vuT
yZ8vk0wmMzP7j/1bo6kUCiXwa/z/f38nObdFHR4Xf/68yj4uEnajPzn6adli
QBitKKk3uw+dVmfxX0TK0GR+CCnSbk2XNqeipWctw2se2BD4HvZO35ODqLN8
7JhmFLmFB/H9o1Rop8RPG+c1gXzPJkFchQ7Fa1ajsqsUiJBxF33h1XyrPwVq
VniXKeQNiL1dpy+VUoGPD+zyoj9BG1ccv2MS0qCsVs6xXH+Ojl5qvcvupEGh
/W2oJfIt2nLGd6HDaQdo117ofbrEjAr17exHMxwhWHLsA6urF/FCxKvYakfQ
CDz32g3Wb/07weJTaobinwGUdNxeI1U7gXmPYaZqcASlZkoDknl0GO4vjzK8
G0OCcgcn/3N0CFnWLU7ST4FMU3yyaJgOgwrhWv82ByjV7j8vjHQGt45/Y4tC
nKHeGJSYUOUMNbFuVYkcFljLW8aOejCAKaAcU84hwCbIOlIoY0BmS1e6375p
MDk/BlB1jUMvLO7QxLX2nieYYO6s177O50DGKVrFm9+Z0BRlvZb6NxfmhCrb
JDeYIAreUcernQm88abGlVYmxITSacnKWZDbhtkKlmOQUqRU+ci8QLIwM6T5
EAZLtpqa10XxQVpfca+1EoOd9z0DDL/Ng5aKZwPPRzDYeEF+tYrKhyG8MmV0
OQuevrp4pKBsNhj7XbZJYlmQO9c1n3j2E0zulwXywccEEcaF6ocBn7xNLOgr
N/geaPGAG2sMxjpPHPai7MeXw12hDU+LsW3C4aAlr7hEwwA8zm916wkcTqrS
7r2/ToFNN8/9Eq3DwV0uzjVLP6FFQcLw+904fL9L14/ubCt76g+vDR/1dwwm
nd9wTYElkJaJMqqnXiF925qxmNtE+qA+LHDlCOnJ+3T54eLpN+882UB6grJl
YncC6fUqrXpuHmlNoFeMt4E0y6028UCPCwhN1Yn73heg/vGqiBN0AnR8jXw0
7hEKk/k0DnoSMJBirlSMtaOInKIrHgICqnNkf/VkdSJxcJ2xK4iADoyqHN7x
Dh1e8NAWvfmr07kNxl8tKN0v+mXubgLMffPzSkv60H+uhoBt
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCwAWIQDQN+K5Y/N3JaYPfe8tc/J71n9kw6s1dxK7naczOv
rXo1+aO9TKJRTFhikT1E/pv9u7357XITeu2Ne99+dzzw017vwAErPcmF9kwK
Wr+4V/+xvyW8lD+8ZIN9eJTRuiKl//YnjrvlnFbfY1+82tp+0yIGB2+JF7/3
Gh2Dms/ocJBhs+yfqgv2YqFbd2/MZnL4ZFOonRN33d7HvH77Yz1mh5e5gRKB
n+/b1867vEfsIbNDjsLurGUmT+0Dewy1WVpZHMoNGVcxVLy2X777utgpGVaH
EAU3xSO5H+3lPXwtxVaxOvhfKhNr3/0V6n42h0+RtzcYbvxlX1X/62D2KjYH
T8M4szBdBoe2idlW1fLsDru9DR+/T2R20NnMwmbWx+7wKZBbNuoPm8PEx8XV
Tt/ZHWbNFFDqZOJ22Lguf4peNIeDf0WqQWEVv8OJo7blJbs4HB4pijszmwo5
fNh88W+tKKfDmRXHN8x7LeLwU2dSzfIcToed1WEMrE/EHSDhx+lQffRqgIGi
tMNZqQ+vpghwOTzcEH5Qapmcw4QW5h33Y7kcUkzKLe5bKTooe027FrWCy+E/
d9j+Lk9lB/l/Z09bfOByWFVykaW3QdVh9jXun8tMuR3ONxdJJD9Ud4jSnuhx
roLb4arfIc6uXC2H7BM79l3eye3QM0nQ9PpfHYeLO65+ufGD2+HvPPaG2f80
Hb7x7mz8Y8rjkPTAd530YzWHo5/5g6MKeRyC68I3ZG1VdoDEL4/Di3cT9Z80
KDjsPW71TuMxUF7NRyBpoZTDCsfDR49J8jpsV27iOxkj4nCNtyPjpx+vQ3bD
BkHPFh4H3iIj68tNvA46Ii6fBbcwOPit6XNN3crrIHXLpvK1w1N7XVu9kP3P
eB1g6VLwjYjYBzE+ON855I8ZqxuCv+Tk4jLuEgQ/x2nCXr6FCP62DxP0pc4i
+KW7A2wsfiD4kPTJD+evl16z/ZI3gv+fIfB/QgmC77ly3SrVOQj+ahulDI3D
CD6P8KHygpcI/ud/uyKb2AXg/IAcrdNfJRH8yFlrF4rqIPi+bseOPrFF8Cs1
j/9M9Ufwu41S78xOQPABwc9TQQ==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF0glI02EUAPA1dbrjP49yeKRuinmv0rTU2fe2SKamTi1KoxBhlc3yyM3S
0jI7wBouO9Ui73tRkbel6awVGibZQWRlrlqH00zbsFmh+f/g8fHjwePx3mMl
JEcLiQQCgfM3/v3/3962mdrBrrL14/46PY+tQvn3Gk4w4/mIatCYqS6cQJZN
GCnMR4zm89NooKrCrpYmQz5nv81wu7SI7MJfr2wpR0Smu45aP4tUu2WCat0t
tDXOW57mOIemM7fpXnG60IH6QHSrjACCYK5FXZFyof4S6Mvm7owiDiHGljvt
N0VEsOodSIiZeoU2rc1pHmUbQIpPnt5533t05NpQB+OdAUi8LpEvij+hqDOr
PQxPGMLvkK6Nk/JxVN3+nPFouRGkdpsWxtpMIQd+uD+jzghMEtVSV3PtQv8k
kFsRBGVKPcrM0XWL6khwY5fmVHcNEU7KRAFZDsZA5NHzNmwngedtQ5Kf1Bh6
S1j+vscpIBs9kMWbMQaJeLIn3cUUbsqTz7O3mwBPWMFMcbGAh4qgjPQ2E+CE
T6vcCZaguT34+4glGd5ORPfEsqxA63nucHUSGUTR9r0iqS3Mz48M1vs7Zp6E
OkC/jUZ93owC5mX8Jl0DCwryDFpGdlBgLPHo5coRJ3AKvTgcV0MBF2mzGxOt
AAd9/+N1Ggqk0pkTrH5XKB6maqt8qSBUfxEn5HtAnIeMP3CQCkWscHQliw2i
hy13h1qpUNiWOLamfRUMtjybevGLCjR5jptykA3TWOuxWV8aVF5/pq5Z4gmK
H6Yxcak0ULyMcpcbusH8fmmQuysoIPulM3Q+CPjuOkqDC538yO5sR6jh9ij6
rDGwbfy8W6Kyg2Hs9B5tBAYDH1leb5IYgKV5Bw7lYmD/gU6/ysYgokG6UXgH
A8mcfViTnQ55BbE331Nh8P8uzb8uY2gY9EVv2DzrZxSMu0JZLqGm407iFXTS
S3E3aQpW2vTjFrcLOOt+4Z6/T9NF37BtaH4ahnuOEDUXn447pFZe51yCu57j
uMe1Bzdt6f2MlM+4f+jbYnONzRYtSHJ//NMad2xRY6mlJ+7w4D7FhyDch9we
aIWRuPO9ha+L43H/AY6JWYw=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-0.15060577328486247`, 0}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 16.73127588111181}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"sl\"", TraditionalForm]}, 
     AxesOrigin -> {-0.15060577328486247`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 16.73127588111181}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157613663657*^9, 3.7574209199367943`*^9, 
  3.7574210885877657`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expectedZ", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
      RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
         RowBox[{
          RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vatp", " ", "-", " ", "mE"}], ")"}], "*", "y"}], ")"}], 
         RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "vatp"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"expectedZ", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], " ", "-", " ", 
     RowBox[{"\[Delta]lac", " ", "*", " ", 
      RowBox[{"w", "[", 
       RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "/", "\[Phi]"}]}], ";"}], 
  " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756646231674797*^9, 3.7566462766912527`*^9}, {
  3.756646351129581*^9, 3.756646455662877*^9}, {3.756646493272894*^9, 
  3.7566465827361526`*^9}, {3.756649372856316*^9, 3.7566493741910057`*^9}, {
  3.756666482797419*^9, 3.7566665213320913`*^9}, {3.756667352701457*^9, 
  3.7566673928960943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showDilutionRate"], "Input",
 CellChangeTimes->{{3.7566782887993717`*^9, 3.756678291722348*^9}}],

Cell[BoxData[
 StyleBox["\<\"Dilution Rate\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757157762914867*^9, 3.757421317349083*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQOCb4NmqX1fbP/e8tc/J71n9pUa9/2FgXxu5rVV
ryZ/tP/XdMFrwTeY/Df7jiXZLWVfF9sb97797njgpz2r6devdp8X2zMpaP3i
Xv3HPvbOxhmL3i+2D48yWlek9N++xulZqterxfbFq63tNy1icPDhvx52/xHM
fEaHna9OpHDdXGwvFrp198ZsJoc1NQydJWcW2/uY129/rMfsIJh7aM+xPYvt
a+dd3iP2kNnhcnLwz5UrF9sH9hhqs7SyONzh+GF+fNJi++W7r4udkmF1EGP5
Wni8fLG9vIevpdgqVoe8v30LgiNg7mdzODOHa6+IyWL7qvpfB7NXsTnIdq05
sJlrsX3bxGyranl2B+/cnUtu3l5kr7OZhc2sj93B4V1pkv7yRfYTHxdXO31n
d3i+Re1zbM4i+43r8qfoRXM46GQKBPBpL7I/cdS2vGQXh8OPTeVFLx8ttP+w
+eLfWlFOB3OrhcEzJi+0/6kzqWZ5DqfD5WUX3xy2WQgNP06H7Qt8zUXvLbA/
K/Xh1RQBLodz5yN1TMsX2E9oYd5xP5bLgemO1dEz7Avslb2mXYtaweVQcyvr
G6f8fHv5f2dPW3zgcrgVJtPPKzPPfvY17p/LTLkdPtUIu39jnWsfpT3R41wF
t8O8OTcFxO7Mts8+sWPf5Z3cDt3HMjesrZ9lf3HH1S83fnA7OIiW6HJkTrX/
xruz8Y8pj0P+5bwTu4Qm2h/9zB8cVcjj8LgscP7p7V3Q+OVxOGQaaXQ5uMV+
73GrdxqPeRzYVNN4OmfX2q9wPHz0mCSvg9LbXosvjCX213g7Mn768Tq8MXmn
G2WRbs9bZGR9uYnXYYay0N9LpwPs9a5p7H6yiNcBlg4BM44rwQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UglIkwEYXW66uX//34Eus8AuxNqclGnmqu9zaUiHmlehHWQZmtI81qWm
mVqWRy5nQeW1X1KmSTZNbXmUaLPDsuXsoAvLaF1LU1OWVtA+eDw+Png83vsW
REgDIy0YDIbLX/xj86RdeH7RcYyG76smJiWiQfjkw+bx/+4E82qSofAHvODI
AtWj5vsorOWWatQjNLjmfR3zah8Hloxd9GCYBov5SyeIahPMjRMK1UYatoYt
r01YOAVxTnk9877QkFgthutKBg51VXW3fjDrT8OzByf3+72igR/SoKmLscAV
O0lG+hMaNq1MaxwQMbFXFawnOmk4VqK7xX/HxKCsIHFFPQ1bcpcJWFksrJp9
OmWqjIZKTT//3jxLbMuRfXxymgYH382r+CpLzCKKunUHzP6t0NAeHdfoT0NS
2sTtGJUVvuiLX+IqpOGkPMYz2YGN3jKhxMSkQahmWbnns5HfZcfR6pUgH0hM
loyxEUYatBsrlFBXK1WIwjlYI8joXR2rBG3nmsOymxzcWDglDRApwaju/X3M
1hp5oaofYkM5jAvPpVTGWuPLYouK+tLy//lZY6Xi1FOpXzk8tDcaFDO4uGtv
0+OFo2VQkMlserODi0Z3m8ET58tg0Ybz+rAqLvq620f4uJSBw+TD+x5GLqrs
ChfD8VK4pCfGr7gRSHVJsvPkJRAmkPv2HCGwSOt15q28GGK0Ta26ZgLzTzW8
3BB5GXqb+n4++0Xgm7Vtmv7XF2CUbE43ufEwOvRkYYidAjqHpweFxfPQ+6hL
zZ6hgv/98tDUf+1zamUutNz1/OY0wMP3KdsD4vyzocqro7NrDomszNz4/uZM
0JPZUeN+JL51lU6JtelAJiwX606QOEtB1RVpUsGvJt8nsoHEfRxnjLqRBM5r
RMFtgyROo+4MJwoOw8wvNnwjn0KVvGOi+mgirAs2uVuup1CS6mSbsTcaKrrp
Q4SMwm2bnT7uyQiHWElBC1VOYUDsIw/H3QiiHF2wVyOF5j//A8S1URo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UwtMkwcQ7ihQ278PdKyLqGFWZZ101UHAWsvuQCRFKQGFkUEkODSDlYlA
p4aHPHwyRwNCxAgC7e9AWx6BjlcRUJHhMHRzdZU5XLM1I1gR63BAO6BzCb3k
cvlyyZcv33e38bPM/UfcKBSK6E3/P13liCy+6jdPwsudjuUw4SR4iqbR+w0m
qC251spXYK6ljTfOufZzsNDZW33xHxICy17Mh962w/Dtqe7MWRLc3tvqILSL
oHfkHqPYSEhIDGjN5jlhn+oTu9VKQo52F3SoKfj81aGvJywu/rfQa+vppJIn
JHDjO/va5W4oON9wvdRAQtSOwm6LkIq6iIZr9YMkFNQZb3H/oKJPY9qprBYS
Yr/5yN/9rDs++tN8qrmahKa+x9zR9R4YL542LRWQ4CuV7eRqPHC1NWdgTYpL
vyfmbzv45ZUQEnILHXfkGk9kSJXrJFwSzlXIxXm+NBRmvaBon6lBoHP3DFbS
MHkqJf5StxoqLDl5YfM0ZD43xNQXqqG9NbNKmLQKm7s2+BeGquH+cMgJhX4V
6i4ErjcvqsCme7hU8A4dq+rmkjLaVWAXXMpvyqDj3SAZ71GyasU/Ououbmga
clfBmI/NWuXFwN+eynhT6gYoP0PtMR9koDb93oMZUQNs2nvZlHiDgYG/Grro
ZfXguzz2QGRjYIBUvKbtch3UmAh7YxCBH9dUr+Urr0Gif4XUcJJAiUwn+TG7
FuT3ewaMvQTqVTu+7RfUwMOeX16PLxCYN/F3qubdaphj9RYvBjFR06FSW/WV
MDzLOZCYxcTtfozDh+bLV/JlYj73ysIH6WXQPyKe4VuYeHL0JXvzQCncCB0a
/n4tC01D/J7DhnNgYl1Is0ezcDzBydtbdAZY2QG7jCUs3FT8OHjjQAlENyv3
HOlk4VPqX+EeimL4MEQYNzjJwjYKLXyJXwSrp725Ni4bc8xaN7pfLuyOWwz2
iGDj5LLce+QLBVz/gTxOKNiYDbZZy5NMyAgr72er2LilUiCN+D0Numzl23zG
2Dgy9u/nM+mp8FVfjES0wMar4qTtGJm8cp8c9P1JcXS0KgHa1jV3/7yPg7Hv
13UooveDkxLrTFFwUH469buzUVEQebNVs6WWg8f9ZE7zrT2glfDS+EMcnGgJ
N/orEZhv3z1x7BkHzw+Wyl63B8Hssv7TEpoXSqghZu+jTCiiGeNiCC90/d1/
9zqTGg==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UglMkwcY7bihJ1vtKHNjIjDkKBNmB+X4PhEJAkVgiFAiURiHlIlAEQdz
IMo2o9ZyOAdlaPndYGBBYMwKdDAVixAMttqZxcAcjgU2sMo4ytHOJfAlLy9f
vuTl5b1vS0pObJoJiUQKeIX/eWOWMwtqXBYJeO63bAjmTEJ++rZR2qudbCov
mq56AUNs/lrpwsZ9AcbiD6ht5wnwOT+zuLNfD5UvtKT4lwSYvOu2TG5ZhQEl
l/fHDAH7Bd6teY5GSLig94r4i4D8Fn/oaCChJ6+uynlsQ/81dKyUsizUBLD2
dfW0C03QXijKOnmLgMgPS25McExx/hsCPdoIOFGv6WU9NcWq59+FSy8REHNu
u7tZuRk+Cl7ySy0moLHnV9bQZnOsS3+z305AgEMY34/VbI6DnFJxtM+Gfwv0
z2mLv2xBQFHJ8i/CZgt8uLJlqEbTAF9UCHnFDpZY0BRX+7CmATw6zSy4Yks0
hN05/iyhASom8ouDFy0xun2GlcxogPbWnGpOkhVGdPFdtH0yGBwILBR1W+Go
66GEp+ky0HU+WDuxyRr7x68mM81loPeo/Kwx2xpX5BenTWuvrOdnjSkZ1+Uh
zldgxF43Xc2wwda+iQ5t5GWQnDZVjB+wwVytPIjNq4et4V9rBU02ONqtOFRk
+y04GEaGfXU2eI5p+HyrWgpSLVn//Q4yZpwt1AcW14LAvSLs/nEyOqne+WCO
XAPCQcXPmptkVCsx/OXRS/BA8ejfx0tktGe+/vGUogoWqDdPru6gYK9TZmP3
fQkMzNE/EuRS0Or6VOiy3fn1fil4eHO4j5E4A0oVb9Z1goJMLiVor9WX0LTz
9sBdNhVpJdwjwexy0FK/ytRHUXHhTy/j252ngJrn7a8po+JwyPYkp+4yiLom
3p3WRUWNePgTYJeBZyAnrm+Sim0ky5A111Kw/YfJ0rFomD/eYmLtUgS74la5
5qE0nDQImaosEVy9Rxwji2iYB7q5id9yIDtYoqTJaOhc5REWOpYJP+kkXvYj
NFSNrGTMHk6Fgp7oAN8lGtbykt7HPcnr/0lHh1HRkaHq/dD21rUb6gg6xrxX
3yGKigUjKcZ4UERH4anUH8sjI2HPD63NznV0PObCN4737oaWAMdM19t0fCIP
0biLEShv3Co8OkXHfbnJkua/fWHO0J1YZsnAO4rZec98b4jOdhueZzOw+EI2
26zNDRJr5bJNHgx8nMU5I5Y5Aj/07sCzQAYCLSHFqcYOPt2m0qftZeA915Sl
2EQqnPVOeyI9yMDfzcEmXLkS9B8R/6ng
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UgtMUwcUreVToN8xaYY6mSiIgHXU8f/cSwWGDhAQ4gA1iKswijKgQ4QJ
U3C6qNBKQ1CU0T4CjAqIDIp8nIwVEFczxKIzhNrB2MYQ65BP+XUugZucnNzc
5OTknLslITWSTyaRSD5v8T+vzcbirlL7OQJeeS6s8Djj0JjqsIP6dqca1WVP
FL+GwK03ixNn1+6zUPOHwvL+GwJ2X3k5539fD/Iplrb0NQHkDxwXqPIl2JSJ
npmTBByM5dan2xpA1TQSPTxGQIbcG+7ISHhFk5+2//ma/jrkuPT1HPiFAHZ0
c3ujgIy5L/aITrQREOKepxjlGGGYXZHZlkoCzpQPdrC1Rpjqzkv+9yIBEZdd
nIzPG+PtsJlX/CQCqtufsvs3meDvMnxi8CfAJjjUk11rgmpBR0SA1Zp/U4zR
kgiFVgbZeQtdglpT9POuIo9UyeAbscArx4aC0Y0Bcu/PZODcZGzqVkjBkznC
p1HWMhCPZuTw5igYM6DqqlNKobE+VcKJM8Pxib8q+5Ok0Kf0PSVsM8Mxw+H2
XWQp6JoGls9YmaN9sBKOiitA73z1q+oUc8xebEkZtapYzc8cE4gSvXDzd6Da
oJuQsCzQ3cQ1Wq2/CaICo1bNYQu0vHz6qK7jBmzdVzIUW2OBV6slxY+Ol4HN
iuqhh84CD/W2xGfNXoOyIaq+ypWKtDiW32xyKcQ6iYMfZVHx48cDFeHdJSDo
a703eJeK1rkFbZGTEhhoVb95Nk/FgqLbh3jrxDBLv3t2yZWGLpOWCvztEiin
mQdi02h4XNv80Z/vX1jtl4bqzgv8xPJ86Oz1mnIYpWHry+1yKfcs1Ph3K3us
6ShpXL7nJsyDIfrFJH0YHTVu9U98d+cCPZ3rPXiOjqQsA2nziVwIu1UYyG+m
o33dtmStOg92+nKifhynYwOJErDs8DW8M7merWMzMEMjJ5vbZ8OeqCU3kyAG
jq8I1vcmC6HyAZFJFTIwHXTTo89TIYUn6mRIGWhX7BwcNJIELTrRrg0qBvaq
FhOnPj8GX7aH+3jMM/C6V9yHuPfI6n8y0eZX4cl+yUFo2HhL8fgTJkZsL78j
DIsEAynCEC9koiD/2A/nQ0Jg7/f1tXY3mJhpH2rQdASC3Mc2yaGbicN1AYNO
hQi0d3869cXfTIxOOyKq/ccDplfaYs5RWPhz69TMzgwuhKc4PpyxZmFOUYq1
cYMjxFyvk1o5s/BZMufbQqkthAb1KMd8WQiMTxO2XXsPTu/o1fP3s/CBQ8J8
ZAwdLnH5w2XxLHxhAhb7Ohf9/gPXZbCg
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {2.311726722939087, 0}, PlotRange -> 
     NCache[{{
         Log[10], 4.0943445622221}, {0, 0.03899498596437833}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.03899498596437833}}], 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, 
     AxesOrigin -> {2.311726722939087, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> NCache[{{
         Log[10], 4.0943445622221}, {0, 0.03899498596437833}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.03899498596437833}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157763058894*^9, 3.757421318297165*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "*", 
     RowBox[{"\[Xi]", "/", "\[Phi]"}]}]}], ";"}], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756681254309004*^9, 3.756681275087467*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showCellDensity"], "Input",
 CellChangeTimes->{{3.757158133262442*^9, 3.757158134362485*^9}, {
  3.75715921609923*^9, 3.7571592226567163`*^9}}],

Cell[BoxData[
 StyleBox["\<\"Cell Density\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757159441442484*^9, 3.7574215053499107`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQOMKt/F896n2L23/PXPSe+Z/XG2i3wyZtz23Mxr
q15N/mgfxuYdrrvK3B4i/83+AeO9/pdswfbGvW+/Ox74aZ98KXj5x/+p9kwK
Wr+4V/+xXxC3cAeLRql9eJTRuiKl//aqBXec74g02RevtrbftIjBgfHxdeXA
ih6o+YwOb26tedstMdVeLHTr7o3ZTA6X34nsfHhtrr2Pef32x3rMDvuD/qQ/
DF1iXzvv8h6xh8wOBYfTHxs+WWUf2GOozdLK4sAcqyBVHLbRfvnu62KnZFgd
pFcFT/n3cKu9vIevpdgqVofNc7astJbdDXU/m8MGkSV3S9oP2FfV/zqYvYrN
4fF2efkHdw/bt03MtqqWZ3cwtnxmLzj5uL3OZhY2sz52B499chLPl522n/i4
uNrpO7vD5LPhug+5L9hvXJc/RS+aw6EokvOiduEl+xNHbctLdnE4XJ6eVrCf
4ar9h80X/9aKcjrM8TgqxbD9uv1PnUk1y3M4HYo6cwX1+29Bw4/TgXuL11S/
5rv2Z6U+vJoiwOXw97OZMZPbA/sJLcw77sdyOXAqbKyyvfDQXtlr2rWoFVwO
HZGaixWiH9vL/zt72uIDl8PX8wyHpzx4Yj/7GvfPZabcDseYPDUmRz6zj9Ke
6HGugtuB01gwVHjfc/vsEzv2Xd7J7WA2vfvNlhcv7C/uuPrlxg9uhxdTTnyN
Vnxm/413Z+MfUx6HwGdvXS0jH9sf/cwfHFXI45C7USJ+Ze8DaPzyOFj2O/2w
q7htv/e41TuNxzwOm43frl5++Kr9CsfDR49J8jpsjxN9VvP2vP013o6Mn368
Ds+aneoeChyx5y0ysr7cxOsQMdGsVSlhvf3DBe8+/VvI6wBLhwAaQSoc
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1Unsw0wEcn8es7beNXK04teI6MREiLL7f9KCOrqLrtvRSHh2Rdzdcl0pv
mUavK00uTjgLpUYUi1mey6icKa8oj45oKNWlz93nPn987j73ve/ns9I/fHeA
NolEsvnDv/ofBryzS8NGj7qNOk//crfuB+rmJXK2IwGEToFg6Po34Npa9W/K
Ww///EkgOxz7YkbxAfurw1MbqzSwNdlIeZUUCNorLKeJR7PQMcCZWWURA3v5
doWRpnPgzxY9P8NKgqhHXHicRcIGxT5aWMKV+XwtVHsZZC5alg6sPaVSSYg2
FnQrBHPqu+C1/tTTHmsdjBvVzQ08kA2J95TlrI86uFdS4ukwnge7rthydM/p
olgrVUQckUCOtJ1Vb0JG15lyfY/JUmB7ejuz8shYq5ixkG2Qzt+vh5yMPh+3
zCoQnJp+GZKnh28VBFlJqoFkYYhLPJuC5rdi9F1ltWBVrKvnmEJBXz1/InZY
AcKeqHj3KQretMmuvbGhGSSF4SLrfQuwXiVS7yluhTqZa1z08wUYVGTctI3X
BmPFLT8TF1OxOvWQsI/TARqrtIScUCruHNyWLDb/MP8/KoapX7r1enRBg/HY
kMiAhvJZo/To6m5IPatTpt5PQ4HtDUNl2Ccw256h4ufSsOhTxkT7yl5g/2pQ
OI3RsM1PXpjS3gd3VITmoQOB3KDu3nWXBoDPEXo2niTwdpr9hKX9IITUlb1Q
PiMw/FrndxvJELSUtU10/CAw672mnJf/GSYZz07POtBxykd4eVjWD7JxfR9+
BB3v8w561831zvdLR9MR78tRfj1QUesysrqHjv6JSeI3XR8hd2O17LURAw3F
x9fGXewGFeNCsGYHA51sm4Ol0i5gRNpxlUkMLOdFNBwu6YQd+SlbAkoZmB5p
2tE6+B7WuFr7VvYzsKpieeMh03ew8Osi1hiLiYFy8/udJSrY5DvrSN7KxIAj
aZXUmibIlj+IJaKZWCOyOBcc/gpC3VMrmGImnvA1GXUU5ID3a4OB80+Y+H/n
vwHsFlgE
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1U2tMkwcUrfSB8PVr0UlVYOlkOohKN5hAKdB7QQVkjunQ4Mp8jChhthGt
7VzBTiBDsGMO5LEMeURkIoWxQIMUOgfS8TSdAiuiibDSWYGBVNnAdghzWb3J
zflxkpuTc87dkJT64TEnCoXCf7n/4auR3/JZd2L2qHA2xL4UybPADnpiwutB
BBDUH9KmCp9CLT/NM1AdDP/z8xCkiap5wYiHd7+eWYjosIHCVCn2oSSD0xub
7UTdIpRtfBiX4iuHBFFAg9R7GbQVsawT7llwui4UmqooqAwRVekUeY77K9Dv
cUmup0cxcPY36xrFTkhPE/jTH5TD7uBzLWYeFTcoDYfuHqgGZcXQTxwTFZWU
besPTqphb57/Flo2DUmqTdAnaoQa3T1OvxcdC1btjrBPNAM35v0QjpqOT1IO
89f66hz6GThx/A/R9990QNo5+y2xmoGl8YWHJyb1cL5ALEjnOqPwnz+9E6p7
YKuGxgi66Ixt3t8a/dtvQ4H5dHrkgjPKvaIKr3ndhcaG1CJe4krMbh+ImssZ
hN6u8DOytpW4SRJAhnKNYNUMvFC6u+D9KxfMwrF7YNt66WyNxAUrM+w+dfoH
Dv9c8M47kp7F7odg8LBOFbm5ot+e5pKAU79D/pdU7dhBV+zsX50+zBiHN2NL
hkXXXVFBRDeqKs3AXTLc5ltdMX/NruiywEdweZiwXQsksP6kbpus0wKiLQUx
v35O4LNkX/554QSIe7U/D7USyJbK5pO+moQBrfGvkecErg0Or1SMPoZ5sjVz
MZCJRYoVEvbHFuiaY8eLTjExKdU/b4H+yJEvE6cj3Dd+MGaGmz2CJ75mJl5O
mZpJnB6H6xH6ru71JLoUR//2ScA4DJO5KbY4Eo9SOroPtZiAlAaEDmWRWJWq
J5WZJoirv7jzWDOJNDfcX15sAr9w3r52C4madOMOfY4JVk2v4Vg5LMwp7T2u
PjsK2/ctBtGjWOjSF3anXHUfqvuufkbIXvLypaubDxhBEpl/k3WFhd/9rerM
HhyAG9b8tz0MLKSVZjCYWgPIdXvC+M9ZOPqpQkVv7XX0k43CvAaeLOMX+NGz
vmXwPTaOzI70WmY6YJmyd/mIjI3PRHyP7QYd7KptUG8qY6MTxDBX196AujDv
FF89G5s0Sf2q2CZgvtZ55uQkG6Xh68TSI7Uwt9T2UZazG9K4yV9UFGdCiOBp
7luEG776u38BKYOLBw==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UntQ0wUcpwEbY/ttw2AG4aF4GgLOohsibH6/gCnxipclkAUEZsE5Rd6I
ECdQEzyWYAdIF8kJDEYHCPKQGMzxmpN4bGIpMkZcmsCQeEoju+hz97nPH5+7
z33u+/3sihIExZAMDAx4r/iv/g/Px4ztZ+ajD88fWtd7cGYgqs5y1sKZBjRD
SdqzqwtQ8gOJZyI+CP/5y3Av+EPRN+RgeLdgdsVdugY+whCZTh8DpJ3267Ta
Ddix/fIfdnsT4aMwp/p4203YH8pt3L0tG87XukHjjwYYUXTv7YJz+Vv5r+Gl
8hditlkxsI83dzTEkrBrxfXXqb5y8D2YeVvLMUSCTD31+FglZHw/eoetMURl
eJcsUyGGwPx3HIxyjJCz04HR4d4AVR0P2IPWxti7+NK3QtoMNl5+h9hiYxxL
WvELf9q+1Z+MA6ZDO0IipJCWud4dKybjWyUSi88qZZArinVNt6Hgd0t1DCH2
gWOTEdn5CgXNP2f2qp0UINKeT/dYoWAKf1GemTwEDfWCIk64Cdb4xk8cNxqB
fjk/OaHdBDNU1fetBGOgaxr+O8OCigdune1pWVbDmuO3F6riqPjyYzU3tujh
1v2o+ClT4qeDR6C00j0rYplinpZIDpifgMJLhq1PTppiFTWaG6mYhN3e19Rh
1aYYBJGDaD4FNnqlwkVnine5VYIgby2UqWlrN7k0lEq5C6nR0xDmIPK6n0LD
I1kX3U6e+B1i+1t/Hm2jobV31YM5kxkYblX9Nb5Kw7hrq89vRU3DMtH21QaX
jm9Qrtruo2tBvsgMDjtHxzTSE2s2ZWrrv3SMVF20tQ/WQGef65ydlo7duWP+
IXOTUO0uk/daEhivCuSUqCZBTXx9es2fQA4xcMaMrAEi3sltNJvAgIKyQlmG
BvzrrrwX00zgQtRwjgVvCvbzOSFdMwQ2pauOyPI0YPbcnK1jMzCvtP9L8YUJ
8AzZcDY+ykDqAG+oXPgQKgduJNESXvmJ+hv2J1QQ51HYyahgYMmSsCdnZBha
dIUHrJQMNCrNItNblZDYEcBzWWXgxBepQuO2/q19MvFwfj0nIesu/PRm3e0R
HyaOz4/3z8xKYdMgcDMigYkvwlysPJUd8H5NvXjPdSaSwIu+raYFanm2p+1k
TGxsihoUejcC/fWe5LNPmViaZ9t5bK8EFvXtodkUFnIGu1PujNyEgDh7xZIl
C6d9VC1SQQWElkoqLBxZ+NsvuacWG0vA72ivfJrPwj/nRXyBVgSp+/rWYj5g
4WAxz2UzPRcuO8U8KotgoUJWvMv6kyT4B+jBtE0=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UnlM0wcY7Sjl6K/tr25SBivh6HSsQBlMEKT4fYIik8k8s9llzhFQBsxO
LtFCQBDYgAlVWCKIDmUc5ViAcRYUqGApKxsgHQjIUUMim7YTUco45jL2kpf3
x0teXr7v2YeID4UZUSgU4Sv+q/+DFXSIc1oXulPnvbzmJ5iDGIvbz9ieBBDU
mvPzV/4C+wEb7nzldvjPfwHtqu6bPiaH4f3vnrzc1WmAouw0D7u1MDCy4y8T
VSugypy/UfZ2HHwscq+NdliH+Bslbk/JVIip8oH6mxTcJuHZkVE5G/mv4VJO
erkZUQCco43yukgjPMp1DW6SF8OH25ObtQIq5hJkWqKwFJKuD7dzZqh4fHza
M6ZZBgdz3JyM043RhelKe/xeHZTLf+eouDTMlTPfyf6xEWwD93tzZDT0H6hR
+t5p2+hvgryk07Z52Annk5e7ImUmSD2zxbM5TgEZ0sgdEltT/PlULj9rtRec
G4xNPC+ZIlfd5FB8XwVSbYzE76UpJk/u7QldHIC6WnG+4FMzjJ4dES9XDYKy
x/dsbJsZxs/3ySaXhkHfMLiaZGGO/uHL1UUiDRicLyeWR5nj862tCRrl6Mb9
zDHU0ubzCO9xUFvr5/PZdAy0rKDv/mES8i5SW6Y+o2OCorR2m24KePu+14gq
6HiZf91llj4Dtmvqfi89HXl7HHwuUGahSEMYyjwI/PaXEGeZehZETtLAgQQC
hZbXzOxPaiFS2XJ7uJVAt/vjKX/LtDDYMvJ8dIlAw/Sm4YorM/CC2XphxYOB
bO8I9y9yp6BngTwsOsPAU2OulqulExv/ZWCdKK9kc9oD6Li346mjloF3xelf
1QSOQcUuRU+vFRP11o42ijfHQMP8JtwQzESSlt1Ct3oAzGh3n+FUJvICuF2W
kRMQXH1pT1gjE7X+Tk755tPg4is4cmeOiQ2Skd2KzBnY9Odmjp7DwsxCZYQs
8SH4H1nxpAWw0LxP+Gtx1hiU9t2KJ2Jf+XFrt/ifjECUX14Hq4SFVxezutOH
BqFJn+dqrWahcWGKCaNFDXHyA0KvJRY+/PJcFq1VubFPEnfm1ApiU+7CT29V
Nw8FkTiqG1XOPemEdcrB9ROxJD4TeVn7q+XwQWWtbMs1Eo0gkPF6ZRNUCR3C
HRUk1jeEqLL21QPjje6zXz8msTDToWPv1hpYWGs7lmrKRoGqK6F9qAwORPH7
F63Y+ChopKlTXALHCmtKLJzZOP5bxsmF+quwP6C355EvG//QSX3FWimce/ee
IewjNqoKhF7rkgzIdg+bKDrBxn5FgT33eDz8A4/4sZM=
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {2.311726722939087, 0}, PlotRange -> 
     NCache[{{
         Log[10], 4.0943445622221}, {0, 0.8341293146117844}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.8341293146117844}}], 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"X\"", TraditionalForm]}, 
     AxesOrigin -> {2.311726722939087, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> NCache[{{
         Log[10], 4.0943445622221}, {0, 0.8341293146117844}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.8341293146117844}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.\"", "\"\[Beta]: 1.\"", "\"\[Beta]: 3.\"", 
       "\"\[Beta]: 10.\"", "\"\[Beta]: 50.\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757421505456357*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 703},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 567, 8, 44, "Subsection"],
Cell[1150, 32, 1915, 30, 80, "Input",
 InitializationCell->True],
Cell[3068, 64, 39057, 847, 2035, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[42162, 916, 406, 6, 85, "Title"],
Cell[CellGroupData[{
Cell[42593, 926, 634, 9, 59, "Chapter"],
Cell[CellGroupData[{
Cell[43252, 939, 834, 16, 57, "Subchapter"],
Cell[44089, 957, 2339, 54, 119, "Text"],
Cell[CellGroupData[{
Cell[46453, 1015, 404, 6, 44, "Subsection"],
Cell[46860, 1023, 2639, 57, 199, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49548, 1086, 785, 16, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[50358, 1106, 432, 6, 44, "Subsection"],
Cell[50793, 1114, 3389, 74, 317, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54219, 1193, 413, 6, 44, "Subsection"],
Cell[54635, 1201, 2412, 49, 281, "Text"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57108, 1257, 602, 9, 59, "Chapter"],
Cell[CellGroupData[{
Cell[57735, 1270, 870, 20, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[58630, 1294, 257, 4, 44, "Subsection"],
Cell[58890, 1300, 526, 8, 65, "Text"],
Cell[59419, 1310, 610, 9, 65, "Text"],
Cell[60032, 1321, 1067, 15, 28, "Text"],
Cell[61102, 1338, 315, 5, 28, "Text"],
Cell[61420, 1345, 633, 17, 28, "Input",
 InitializationCell->True],
Cell[62056, 1364, 309, 5, 28, "Text"],
Cell[62368, 1371, 487, 13, 28, "Input",
 InitializationCell->True],
Cell[62858, 1386, 1163, 18, 28, "Text"],
Cell[64024, 1406, 6195, 93, 28, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[70256, 1504, 363, 5, 44, "Subsection"],
Cell[70622, 1511, 739, 11, 28, "Text"],
Cell[71364, 1524, 10170, 192, 284, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81559, 1720, 207, 3, 28, "Input"],
Cell[81769, 1725, 711, 18, 32, "Print"],
Cell[82483, 1745, 69030, 1147, 254, 19543, 335, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151574, 2899, 858, 17, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[152457, 2920, 387, 5, 44, "Subsection"],
Cell[152847, 2927, 1802, 26, 104, "Text"],
Cell[154652, 2955, 962, 18, 32, "Input",
 InitializationCell->True],
Cell[155617, 2975, 1267, 18, 28, "Text"],
Cell[CellGroupData[{
Cell[156909, 2997, 699, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[157633, 3011, 577, 11, 33, "Print"],
Cell[158213, 3024, 629, 12, 21, "Print"],
Cell[158845, 3038, 748, 14, 21, "Print"]
}, Open  ]],
Cell[159608, 3055, 193999, 3265, 195, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[353656, 6326, 388, 5, 44, "Subsection"],
Cell[354047, 6333, 1199, 16, 28, "Text"],
Cell[355249, 6351, 1103, 21, 28, "Input",
 InitializationCell->True],
Cell[356355, 6374, 1318, 19, 28, "Text"],
Cell[357676, 6395, 2708, 48, 50, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[360409, 6447, 200, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[360634, 6454, 215, 5, 33, "Print"],
Cell[360852, 6461, 251, 6, 21, "Print"],
Cell[361106, 6469, 427, 11, 22, "Print"]
}, Open  ]],
Cell[361548, 6483, 28769, 572, 220, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390366, 7061, 397, 5, 44, "Subsection"],
Cell[390766, 7068, 476, 6, 28, "Text"],
Cell[391245, 7076, 1310, 26, 49, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[392580, 7106, 115, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[392720, 7112, 275, 6, 33, "Print"],
Cell[392998, 7120, 324, 7, 21, "Print"],
Cell[393325, 7129, 536, 13, 22, "Print"]
}, Open  ]],
Cell[393876, 7145, 69509, 1250, 237, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463434, 8401, 467, 6, 44, "Subsection"],
Cell[463904, 8409, 524, 7, 28, "Text"],
Cell[464431, 8418, 1480, 28, 49, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[465936, 8450, 241, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[466202, 8458, 365, 8, 33, "Print"],
Cell[466570, 8468, 629, 15, 22, "Print"]
}, Open  ]],
Cell[467214, 8486, 73032, 1307, 242, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540319, 9801, 696, 10, 59, "Chapter"],
Cell[541018, 9813, 821, 11, 28, "Text"],
Cell[541842, 9826, 1376, 29, 50, "Input",
 InitializationCell->True],
Cell[543221, 9857, 843, 12, 28, "Text"],
Cell[544067, 9871, 592, 15, 28, "Input",
 InitializationCell->True],
Cell[544662, 9888, 944, 13, 28, "Text"],
Cell[CellGroupData[{
Cell[545631, 9905, 118, 1, 28, "Input"],
Cell[545752, 9908, 172, 4, 33, "Print"],
Cell[545927, 9914, 29407, 590, 255, "Output"]
}, Open  ]],
Cell[575349, 10507, 2258, 47, 69, "Input",
 InitializationCell->True],
Cell[577610, 10556, 897, 12, 28, "Text"],
Cell[578510, 10570, 637, 16, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[579172, 10590, 315, 4, 28, "Input"],
Cell[579490, 10596, 146, 4, 33, "Print"],
Cell[579639, 10602, 29000, 583, 255, "Output"]
}, Open  ]],
Cell[608654, 11188, 1834, 50, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[610513, 11242, 110, 1, 28, "Input"],
Cell[610626, 11245, 162, 4, 33, "Print"],
Cell[610791, 11251, 28859, 577, 254, "Output"]
}, Open  ]],
Cell[639665, 11831, 394, 11, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[640084, 11846, 157, 2, 28, "Input"],
Cell[640244, 11850, 163, 4, 33, "Print"],
Cell[640410, 11856, 28882, 578, 257, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

