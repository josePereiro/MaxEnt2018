(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    527048,       9913]
NotebookOptionsPosition[    521445,       9729]
NotebookOutlinePosition[    521802,       9745]
CellTagsIndexPosition[    521759,       9742]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Graphics funtions", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242896782218*^9, 
   3.756242899800069*^9}, {3.7562429490631113`*^9, 3.756242949674492*^9}, {
   3.756487873784925*^9, 3.7564878756951303`*^9}, {3.757975803294304*^9, 
   3.7579758049194193`*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "vl", ",", "vo", ",", "polytope", ",", "cg", ",", "Vg", ",", "R", ",", 
    "\[Delta]lac", ",", "mE", ",", "y", ",", " ", "\[Lambda]", ",", "Nf", ",",
     " ", "Nr", ",", "vatpMinGlobal", ",", "vatpMaxGlobal", ",", 
    "vatpMinLocal", ",", "vatpMaxLocal", ",", "vgMinGlobal", ",", 
    "vgMaxGlobal", ",", "vgMinLocal", ",", "vgMaxLocal", ",", 
    "vgDistribution", ",", "vatpDistribution", ",", "totalIntegral", ",", 
    "normalizedDistribution", ",", "distributionOfCells", ",", "showPolytope",
     ",", "showDensityMap", ",", " ", "showDensityMaps", ",", " ", 
    "showVgDistribution", ",", " ", "showVatpDistribution", ",", "s", ",", 
    "showSubstrateConcentration", ",", "w", ",", "showWasteConcentration", 
    ",", "\[IndentingNewLine]", "showCellDensity", ",", " ", 
    "showDilutionRate"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.753718292374029*^9, 3.753718353918015*^9}, {
   3.753718424688546*^9, 3.753718454645062*^9}, {3.753718485062379*^9, 
   3.753718502093173*^9}, {3.7537186174234447`*^9, 3.753718667256631*^9}, {
   3.75597477642002*^9, 3.755974778304697*^9}, 3.756239601838296*^9, 
   3.756239758332052*^9, 3.756239816526243*^9, 3.7562399299044247`*^9, {
   3.7562399633746223`*^9, 3.75623998335929*^9}, {3.756488153738346*^9, 
   3.756488174430813*^9}, 3.7564928995560417`*^9, {3.7564932351735277`*^9, 
   3.7564932374087467`*^9}, {3.756563571901679*^9, 3.756563572792345*^9}, {
   3.7565648659096203`*^9, 3.756564867363846*^9}, {3.756567109853632*^9, 
   3.756567120867792*^9}, {3.756636517949595*^9, 3.756636527555641*^9}, {
   3.756644201447524*^9, 3.756644203341969*^9}, {3.756663960247656*^9, 
   3.756663963701057*^9}, {3.756681330623766*^9, 3.7566813458878613`*^9}, {
   3.757401110910009*^9, 3.7574011124696617`*^9}},
 ExpressionUUID -> "f62f2fac-b79b-4052-b912-e8f1d59b2f9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Polytope", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Ghaphics", "  ", "--"}], "--"}], "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
       "vertexes", ",", " ", "range", ",", " ", "style", ",", " ", "labels"}],
        "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Layout", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"vertexes", "[", "\[Xi]_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ">", 
           RowBox[{"Nr", " ", "*", " ", "R"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vgMinGlobal", ",", "vatpMinGlobal"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Nf", "*", 
               RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", "Nr"}], ")"}], "R"}], ",", 
              RowBox[{"R", "/", "Nf"}]}], "}"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vgMinGlobal", ",", "vatpMinGlobal"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Nf", "*", 
               RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"range", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "0.2"}], 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
             RowBox[{"1.2", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "0.2"}], 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], ",", 
             RowBox[{"1.2", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}]}], "}"}]}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"style", " ", "=", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0, 0],
            Editable->False,
            Selectable->False], ",", 
           RowBox[{"PointSize", "[", "0.03", "]"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(v\), \(atp\)]\) (mmol/h/gDW)\>\"", ",", 
           "\"\<\!\(\*SubscriptBox[\(v\), \(glc\)]\) (mmol/h/gDW)\>\""}], 
          "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Show", " ", "a", " ", "graph", " ", "of", " ", "the", " ", 
         "polytope"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showPolytope", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Polytope with \[Xi] = \>\"", ",", "25"}], "]"}], 
             ",", 
             RowBox[{"Style", "[", 
              RowBox[{"\[Xi]", ",", "25"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Plot", " ", "vertexes"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ListPlot", "[", 
              RowBox[{
               RowBox[{"vertexes", "[", "\[Xi]", "]"}], ",", "style", ",", 
               RowBox[{"range", "[", "\[Xi]", "]"}], ",", " ", "labels", ",", 
               
               RowBox[{"Frame", "\[Rule]", "True"}], ",", 
               RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"Polytope", " ", "region"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"RegionPlot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"polytope", "[", "\[Xi]", "]"}], "[", 
                RowBox[{"vg", ",", "vatp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"vatp", ",", "0", ",", 
                 RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"vg", ",", "0", ",", 
                 RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Show", " ", "polytope", " ", "and", " ", "the", " ", "probability", 
         " ", "density", " ", "map"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"showDensityMap", "[", 
         RowBox[{"\[Xi]_", ",", " ", "\[Beta]_"}], " ", "]"}], ":=", " ", 
        RowBox[{"Module", " ", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Show", "[", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"Plot", " ", "vertexes"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"vertexes", "[", "\[Xi]", "]"}], ",", "style", ",", 
              RowBox[{"range", "[", "\[Xi]", "]"}], ",", " ", "labels", ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "Density", " ", "*)"}], "\[IndentingNewLine]", 
            
            RowBox[{"DensityPlot", "[", 
             RowBox[{
              RowBox[{"distributionOfCells", "[", 
               RowBox[{"\[Xi]", ",", " ", "\[Beta]", ",", " ", "vatp"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"vatp", ",", " ", "vatpMinGlobal", ",", " ", 
                RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], " ", "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"vg", ",", "vgMinGlobal", ",", " ", 
                RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
              RowBox[{"RegionFunction", "\[Rule]", " ", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", " ", 
                  RowBox[{"vatp", ",", " ", "vg", ",", " ", "z"}], "}"}], ",",
                  " ", 
                 RowBox[{
                  RowBox[{"0", "\[LessEqual]", "vg", "\[LessEqual]", 
                   RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "\[And]", 
                  RowBox[{
                   RowBox[{"vl", "[", 
                    RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "0"}],
                   "\[And]", 
                  RowBox[{"0", "\[LessEqual]", 
                   RowBox[{"vo", "[", 
                    RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", 
                   "R"}]}]}], "]"}]}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
              RowBox[{"BoundaryStyle", " ", "\[Rule]", " ", "Black"}]}], 
             "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
         "]"}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Variant", " ", "\[Beta]", " ", "value", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ghrapics", " ", "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                  "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
           "--"}], "--"}], "--"}], "--"}], "--"}]}], "-"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Beta]list", ",", " ", "plotLegend", ",", "linePoints"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Beta]list", "=", 
       RowBox[{"{", 
        RowBox[{"0.0001", ",", 
         RowBox[{"1.99", " ", "100"}], ",", 
         RowBox[{"1.99", " ", "1000"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"linePoints", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", " ", "^", "3"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", ".01", ",", " ", "6", ",", "0.1"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Show", " ", "density", " ", "maps", " ", "with", " ", "variable", " ",
         "\[Beta]s"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showDensityMaps", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", " ", "map", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Probability Density Maps\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Beta] values: \>\"", ",", " ", "\[Beta]list"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"showDensityMap", "[", 
             RowBox[{"2", ",", "\[Beta]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Beta]", ",", " ", "\[Beta]list"}], "}"}]}], "]"}]}]}],
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showNormalizedDistribution", "[", "\[Xi]_", "]"}], " ", ":=", 
       " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vatp", ",", "funList"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"normalizedDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Normalized Probability Density Function\>\"", ",", "25"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", " ", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubsuperscriptBox["\[Integral]", 
                 RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
                 RowBox[{
                  RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", 
                  "]"}]], 
                RowBox[{"funList", 
                 RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
              RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", 
            RowBox[{"{", 
             RowBox[{"vatp", ",", "vatpMinGlobal", ",", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<vatp\>\"", ",", " ", 
               "\"\<normalized probability density\>\""}], "}"}]}], ",", " ", 
            
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showVatpDistribution", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"funList", ",", " ", "integralsList", ",", "vatp"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"vatpDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Propbability Density of Vatp\>\"", ",", "25"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<\[Xi] value: \>\"", ",", " ", "\[Xi]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
              RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{"funList", 
              RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", " ", 
            RowBox[{"{", 
             RowBox[{"vatp", ",", "vatpMinGlobal", ",", 
              RowBox[{"vatpMaxLocal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<vatp\>\"", ",", " ", "\"\<probability density\>\""}], 
              "}"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"showVgDistribution", "[", "\[Xi]_", "]"}], " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"vg", ",", "funList"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"funList", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"vgDistribution", "[", 
              RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vg", ",", 
               RowBox[{"totalIntegral", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Propbability Density of Vg\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "   ", 
           RowBox[{"\"\<Total Integral Test -> \>\"", ",", 
            RowBox[{
             SubsuperscriptBox["\[Integral]", "vgMinGlobal", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]], 
             RowBox[{"funList", 
              RowBox[{"\[DifferentialD]", "vg"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Plot", "[", 
           RowBox[{"funList", ",", " ", 
            RowBox[{"{", 
             RowBox[{"vg", ",", "vgMinGlobal", ",", 
              RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<vg\>\"", ",", " ", "\"\<probability density\>\""}],
               "}"}]}], ",", "\[IndentingNewLine]", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"showSubstrateConcentration", " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Substrate Concentration\>\"", ",", "25"}], "]"}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<sg\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showWasteConcentration", " ", ":=", " ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"w", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Waste Concentration\>\"", ",", "25"}], "]"}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<sl\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showDilutionRate", " ", ":=", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"d", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Dilution Rate\>\"", ",", "25"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", "All"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "All"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<D\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"showCellDensity", " ", ":=", "  ", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "listToGraph", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"listToGraph", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Xi]", ",", "linePoints"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Cell Density\>\"", ",", "25"}], "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ListLogLinearPlot", "[", 
           RowBox[{"listToGraph", ",", " ", 
            RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", "All"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "All"}], "}"}]}], "}"}]}], ",", " ", 
            RowBox[{"PlotLegends", "\[Rule]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"StringJoin", "[", 
                RowBox[{"\"\<\[Beta]: \>\"", ",", 
                 RowBox[{"ToString", "[", "\[Beta]", "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Beta]", ",", "\[Beta]list"}], "}"}]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"AxesLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\[Xi]\>\"", ",", " ", "\"\<X\>\""}], "}"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.752928209078321*^9, 3.752928305402968*^9}, {
   3.752928348654373*^9, 3.7529283675308027`*^9}, {3.7529284030693083`*^9, 
   3.7529284042987747`*^9}, {3.752928435395398*^9, 3.752928451242942*^9}, {
   3.75292848482683*^9, 3.752928741701948*^9}, {3.752928776274506*^9, 
   3.752928880741659*^9}, {3.752929023549862*^9, 3.752929090550639*^9}, {
   3.752931564894202*^9, 3.752931567232703*^9}, 3.753708349520419*^9, 
   3.753717464063126*^9, {3.755969226176236*^9, 3.7559692504393377`*^9}, {
   3.755974767824445*^9, 3.7559747689740677`*^9}, {3.756383360982769*^9, 
   3.7563833654107037`*^9}, {3.75638380298702*^9, 3.7563839654243193`*^9}, {
   3.756384001942895*^9, 3.7563840034945793`*^9}, {3.756384046259841*^9, 
   3.756384354810882*^9}, {3.7563843885605307`*^9, 3.756384394268344*^9}, {
   3.75638446027365*^9, 3.7563844845044727`*^9}, {3.756384587686953*^9, 
   3.756384592048854*^9}, {3.756384648028749*^9, 3.756384686627091*^9}, {
   3.756384738938074*^9, 3.756384741776095*^9}, {3.7563848088384323`*^9, 
   3.756384823777356*^9}, {3.756384865373763*^9, 3.756384865653556*^9}, {
   3.75638505161972*^9, 3.7563850635649633`*^9}, {3.7563851607713623`*^9, 
   3.756385171380831*^9}, {3.756385220036057*^9, 3.756385220853949*^9}, {
   3.756385336303493*^9, 3.756385360673058*^9}, {3.756385403941848*^9, 
   3.7563854324530497`*^9}, {3.75648687334697*^9, 3.7564868845470953`*^9}, {
   3.75648722257229*^9, 3.756487250278961*^9}, {3.756487881218576*^9, 
   3.756488004948703*^9}, {3.7564880552470627`*^9, 3.756488078659453*^9}, {
   3.756488146851499*^9, 3.756488147935232*^9}, {3.756488224560073*^9, 
   3.756488304388631*^9}, 3.756488382429356*^9, 3.756488457147736*^9, {
   3.7564885429302387`*^9, 3.756488543413705*^9}, {3.7564897878568897`*^9, 
   3.756489840269883*^9}, {3.756489920572956*^9, 3.756489923695932*^9}, {
   3.756489977536152*^9, 3.756489977934013*^9}, {3.756492899575634*^9, 
   3.756492899588882*^9}, {3.756563631289238*^9, 3.756563631645152*^9}, {
   3.756563674674748*^9, 3.756563675695652*^9}, {3.756563711670443*^9, 
   3.7565637157452803`*^9}, {3.756563827012253*^9, 3.756563849360919*^9}, {
   3.756563935824139*^9, 3.756563985175514*^9}, {3.756564124168364*^9, 
   3.756564125956658*^9}, {3.756564641124723*^9, 3.7565646462566557`*^9}, {
   3.756564885645451*^9, 3.7565648988008966`*^9}, {3.7565719318605957`*^9, 
   3.7565721083411016`*^9}, {3.7566361914014997`*^9, 
   3.7566362056069736`*^9}, {3.756636260788316*^9, 3.7566362613124447`*^9}, {
   3.7566363239337063`*^9, 3.756636350293502*^9}, {3.756636391804042*^9, 
   3.7566363931582737`*^9}, {3.756636428996161*^9, 3.7566364329616756`*^9}, {
   3.756636483798502*^9, 3.7566365004337807`*^9}, {3.756636545560912*^9, 
   3.756636549318511*^9}, {3.756636585086939*^9, 3.756636597825116*^9}, {
   3.75663663195111*^9, 3.7566367902944727`*^9}, {3.756636858964273*^9, 
   3.756636888398233*^9}, {3.756637047097364*^9, 3.756637069756897*^9}, {
   3.756637175689*^9, 3.756637177317712*^9}, {3.756637319267541*^9, 
   3.756637353135886*^9}, {3.75663740249034*^9, 3.7566374029631243`*^9}, {
   3.756637553603161*^9, 3.7566375582131863`*^9}, {3.7566375980121927`*^9, 
   3.75663761046568*^9}, {3.7566376682121477`*^9, 3.756637743374117*^9}, {
   3.7566377942792997`*^9, 3.756637853660326*^9}, {3.756637892577139*^9, 
   3.75663791980173*^9}, {3.756637966168478*^9, 3.75663800213597*^9}, {
   3.7566380348507*^9, 3.756638055236557*^9}, {3.756638125858852*^9, 
   3.756638205849927*^9}, {3.756638238600567*^9, 3.7566383094313*^9}, {
   3.756638414273731*^9, 3.756638463896637*^9}, {3.7566385877854*^9, 
   3.7566386087502947`*^9}, {3.756638649854166*^9, 3.756638676968068*^9}, {
   3.756638744086648*^9, 3.756638797845302*^9}, {3.75663886109798*^9, 
   3.756639016286113*^9}, {3.75663908812144*^9, 3.756639099022295*^9}, {
   3.756639175467708*^9, 3.756639219116564*^9}, {3.756639291454718*^9, 
   3.7566393145417957`*^9}, {3.756639370129339*^9, 3.7566393962367077`*^9}, {
   3.756639776647352*^9, 3.756639798192528*^9}, {3.756639835316206*^9, 
   3.7566398824822893`*^9}, {3.756639918672497*^9, 3.756639939813425*^9}, {
   3.756639973553761*^9, 3.75664000225972*^9}, {3.756640062559654*^9, 
   3.756640175716195*^9}, {3.756640228083507*^9, 3.756640232965291*^9}, {
   3.7566403114135113`*^9, 3.756640311976265*^9}, {3.756640384644977*^9, 
   3.756640387969548*^9}, {3.756640428278305*^9, 3.7566404306876507`*^9}, 
   3.756640477230114*^9, {3.756640578743664*^9, 3.756640612644683*^9}, {
   3.7566406642952747`*^9, 3.756640748593506*^9}, {3.75664249532071*^9, 
   3.756642532920892*^9}, {3.75664312295611*^9, 3.756643228923435*^9}, {
   3.7566432747550983`*^9, 3.756643278349079*^9}, {3.756644626410408*^9, 
   3.756644637515213*^9}, {3.75664950509158*^9, 3.756649573462968*^9}, {
   3.756649608077771*^9, 3.756649941009951*^9}, {3.756649976267125*^9, 
   3.756649988211164*^9}, {3.756650150260676*^9, 3.756650153576848*^9}, {
   3.756650232619513*^9, 3.7566502342309933`*^9}, {3.756650264423964*^9, 
   3.7566502663026648`*^9}, {3.756650389596559*^9, 3.75665040353318*^9}, {
   3.7566518987628937`*^9, 3.7566519983127527`*^9}, {3.756652038339013*^9, 
   3.756652116594262*^9}, {3.7566521509725122`*^9, 3.756652151775086*^9}, {
   3.7566521936082067`*^9, 3.7566522254984827`*^9}, 3.7566522623392572`*^9, {
   3.7566523003926277`*^9, 3.756652334622999*^9}, {3.756652993279009*^9, 
   3.7566530006010513`*^9}, 3.756662951105842*^9, {3.7566630225168552`*^9, 
   3.7566630272839518`*^9}, {3.756663123333406*^9, 3.7566631248322763`*^9}, 
   3.7566631752172318`*^9, {3.7566634964859533`*^9, 3.7566636158836937`*^9}, {
   3.7566636478900023`*^9, 3.756663706453771*^9}, {3.756663928404806*^9, 
   3.756663936817573*^9}, {3.7566639779595423`*^9, 3.75666397866961*^9}, {
   3.756664615005191*^9, 3.756664639637916*^9}, 3.756664827179878*^9, {
   3.7566648682342787`*^9, 3.756664886393805*^9}, {3.7566649208542233`*^9, 
   3.7566649297529697`*^9}, 3.756664966661028*^9, {3.7566650074645967`*^9, 
   3.7566650183455877`*^9}, {3.756665710894405*^9, 3.7566657350209208`*^9}, {
   3.756665811308867*^9, 3.7566658370955467`*^9}, {3.756666031445753*^9, 
   3.7566660456105347`*^9}, {3.7566660894401007`*^9, 3.756666118084015*^9}, {
   3.756666822298153*^9, 3.7566668737687387`*^9}, {3.75668008342187*^9, 
   3.756680087391893*^9}, {3.7566808507233973`*^9, 3.756680859302164*^9}, {
   3.756681186479781*^9, 3.756681236124996*^9}, {3.756681292362279*^9, 
   3.756681307012558*^9}, {3.75668135394235*^9, 3.756681367125931*^9}, {
   3.756681876273799*^9, 3.7566818941514797`*^9}, {3.757158056914877*^9, 
   3.757158076006866*^9}, 3.7571592526832733`*^9, 3.757160020095564*^9, {
   3.757401115158844*^9, 3.7574011542433567`*^9}, 3.757420478884816*^9, {
   3.757420597756323*^9, 3.757420617624136*^9}, {3.757420674614646*^9, 
   3.757420695054151*^9}, 3.75797629485891*^9, {3.759851602076022*^9, 
   3.759851750618569*^9}, {3.7598517916223288`*^9, 3.759851791765966*^9}, {
   3.759852403916395*^9, 3.759852429710216*^9}, 3.759852472269494*^9, {
   3.759852504734301*^9, 3.759852508472126*^9}},
 ExpressionUUID -> "6672b86a-fe49-4582-9ca5-25b2607aca44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Toy", " ", "Model"}]], "Title",
 CellChangeTimes->{{3.720537273139526*^9, 3.7205372740422792`*^9}, {
   3.752464304010475*^9, 3.7524643060778093`*^9}, {3.7524644903370953`*^9, 
   3.752464490339396*^9}, 3.7524645209425087`*^9, 3.7529279351789494`*^9, 
   3.753708349408224*^9, 3.753717463993252*^9, 3.7562429984795628`*^9},
 ExpressionUUID -> "33c906a0-8504-4a10-8c71-22e4f4765129"],

Cell[CellGroupData[{

Cell[BoxData["Introduction"], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464253827971*^9, 3.752464267146635*^9}, {3.7524643219350853`*^9, 
   3.7524643281657333`*^9}, {3.752464520954516*^9, 3.75246452095525*^9}, {
   3.752925172625963*^9, 3.752925173330151*^9}, 3.752927935185779*^9, {
   3.752929360481892*^9, 3.752929364810026*^9}, {3.752929494784725*^9, 
   3.752929514509107*^9}, 3.753708349426414*^9, 3.753717464002063*^9, {
   3.756242339979738*^9, 3.756242373031191*^9}, {3.7562430424747477`*^9, 
   3.7562430472823753`*^9}},
 ExpressionUUID -> "fa126ca0-6c5e-479d-8304-467a5ea62b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"--", 
  RowBox[{"--", 
   RowBox[{"--", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Parameters", " ", "--"}], "--"}], "--"}]}]}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242832144678*^9, 
   3.756242834915044*^9}, {3.7562429333851433`*^9, 3.756242935308424*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cg", " ", 
   RowBox[{"(", "Millimolar", ")"}]}], "->", " ", 
  RowBox[{
   RowBox[{"glc", " ", "in", " ", 
    RowBox[{"feed", ".", "\n", "Vg"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
   "\[Rule]", " ", 
   RowBox[{
    RowBox[{"max", " ", "glc", " ", 
     RowBox[{"uptake", ".", "\n", "R"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
    "\[Rule]", " ", 
    RowBox[{
     RowBox[{
     "max", " ", "uptake", " ", "of", " ", "pyruvate", " ", "by", " ", 
      "mitochondria", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"max", ".", "respiration"}], ")"}], ".", "\n", "mE"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Millimoles", "/", "Grams"}], "/", "Hours"}], ")"}]}], " ", 
     "\[Rule]", " ", 
     RowBox[{
      RowBox[{"maintenance", " ", "ATP", " ", 
       RowBox[{"demand", ".", "\n", "\[Delta]lac"}], 
       RowBox[{"(", 
        RowBox[{"Millimolar", "/", "Hours"}], ")"}]}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"lac", " ", "death", " ", 
        RowBox[{"rate", ".", "\n", "y"}], 
        RowBox[{"(", 
         RowBox[{"Millimoles", "/", "Grams"}], ")"}]}], "\[Rule]", " ", 
       RowBox[{
       "units", " ", "of", " ", "metabolite", " ", "needed", " ", "per", " ", 
        "unit", " ", "of", " ", "biomass", " ", 
        RowBox[{"produced", "."}]}]}]}]}]}]}]}]], "Text",
 CellChangeTimes->{{3.74919530497782*^9, 3.749195407327724*^9}, {
   3.749195467647613*^9, 3.749195646248128*^9}, {3.749196282476817*^9, 
   3.749196282876801*^9}, 3.749196605596325*^9, 3.7491976142772284`*^9, {
   3.7492000639817533`*^9, 3.749200263139267*^9}, {3.7492006299928217`*^9, 
   3.749200687794754*^9}, {3.749200747930554*^9, 3.749200795098422*^9}, {
   3.7492013169198303`*^9, 3.749201346071619*^9}, {3.7492013864247103`*^9, 
   3.74920149915821*^9}, {3.749201555077005*^9, 3.749201606283115*^9}, {
   3.7509851650732193`*^9, 3.750985186350546*^9}, {3.752464451782661*^9, 
   3.7524644574825583`*^9}, {3.752464520949976*^9, 3.752464644645865*^9}, 
   3.7529279351832542`*^9, {3.7537083494214993`*^9, 3.7537083494230223`*^9}, 
   3.753717463999422*^9},
 ExpressionUUID -> "9527f172-6472-4cea-9aa5-576f6dcb5ecc"],

Cell[CellGroupData[{

Cell["Values", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242896782218*^9, 
   3.756242899800069*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cg", " ", "=", " ", "15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]lac", " ", "=", " ", 
   RowBox[{"0.0022", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mE", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"1", "/", 
     RowBox[{"UnitConvert", "[", 
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{"0.24393939393939396`", ",", 
         RowBox[{"\"\<Moles\>\"", "/", "\"\<Grams\>\""}]}], "]"}], ",", 
       RowBox[{"\"\<Millimoles\>\"", "/", "\"\<Grams\>\""}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nf", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nr", " ", "=", " ", "19"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Phi]", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "cg", ",", "Vg", ",", "R", ",", "y", ",", "\[Delta]lac", ",", "mE"}], 
    "}"}], "=", 
   RowBox[{"Rationalize", "[", 
    RowBox[{"{", 
     RowBox[{
     "cg", ",", "Vg", ",", "R", ",", "y", ",", "\[Delta]lac", ",", "mE"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7491964104600983`*^9, 3.749196537593293*^9}, {
   3.7491965749371147`*^9, 3.749196645609914*^9}, {3.749196698055991*^9, 
   3.7491967082410994`*^9}, {3.749201636492626*^9, 3.749201695571808*^9}, {
   3.752460775210764*^9, 3.7524608050838747`*^9}, 3.752464317807102*^9, 
   3.752464520953059*^9, {3.7525005723424597`*^9, 3.752500572467318*^9}, {
   3.7525006460379467`*^9, 3.752500646434787*^9}, 3.7525007451808367`*^9, 
   3.7525014362635*^9, {3.7525891521990843`*^9, 3.752589159019998*^9}, {
   3.752589815041995*^9, 3.752589815406968*^9}, 3.752927935185192*^9, {
   3.75292802706329*^9, 3.752928028237091*^9}, 3.75370834942562*^9, 
   3.753717464001478*^9, 3.7566434694720488`*^9, 3.75664354663006*^9, {
   3.7566441876455603`*^9, 3.756644197111684*^9}, {3.75664424235629*^9, 
   3.756644242701189*^9}, {3.7566665273253403`*^9, 3.756666531888381*^9}, {
   3.756680168175559*^9, 3.756680168400786*^9}, {3.756680217416677*^9, 
   3.756680224417522*^9}, {3.756680780533588*^9, 3.7566807940237103`*^9}, {
   3.7571573356699333`*^9, 3.7571573567191467`*^9}},
 ExpressionUUID -> "bd974370-c24c-4d80-b533-817a24a9be8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"--", 
  RowBox[{"--", 
   RowBox[{"--", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Functions", " ", "--"}], "--"}], "--"}]}]}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242832144678*^9, 
   3.756242834915044*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Balance equations and Constrains", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242844552231*^9, 
   3.7562428579111137`*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{"Balance", " ", "equation", " ", "for", " ", 
  "P"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nf", "*", "vg"}], " ", "+", " ", "vl", " ", "-", " ", "vo"}], 
   " ", "=", " ", 
   RowBox[{"0", " ", "\[Rule]", 
    RowBox[{"(", "6", ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Balance", " ", "equation", "  ", "for", " ", 
  "ATP"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nf", "*", "vg"}], " ", "+", " ", 
    RowBox[{"Nr", "*", "vo"}]}], "  ", "=", " ", 
   RowBox[{"vapt", "  ", "\[Rule]", " ", 
    RowBox[{"(", "7", ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Constraint", " ", "of", " ", "vg"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vg", " ", "\[LessEqual]", " ", 
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", " ", 
       RowBox[{"cg", " ", "*", " ", 
        RowBox[{"D", "/", "X"}]}]}], "}"}]}]}], "  ", "\[Rule]", " ", 
   RowBox[{"(", "8", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Constraint", " ", "of", " ", "vl"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vl", " ", "\[LessEqual]", " ", "0"}], " ", "\[Rule]", " ", 
   RowBox[{"(", "9", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Contraint", " ", "of", " ", "vo"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "0", " ", "\[LessEqual]", " ", "vo", " ", "\[LessEqual]", " ", "R"}], " ", 
   "\[Rule]", " ", 
   RowBox[{"(", "9", ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Taking", " ", "the", " ", "upper", " ", "bound", " ", "of", " ", 
  "vg", " ", "you", " ", "get", " ", "Mg", " ", 
  RowBox[{"(", 
   RowBox[{"The", " ", "maximum", " ", "glucose", " ", "uptake"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mg", " ", "=", " ", 
  RowBox[{"min", 
   RowBox[{"{", 
    RowBox[{"Vg", ",", " ", 
     RowBox[{"cg", " ", "*", "\[Xi]"}]}], "}"}], " "}]}]}], "Text",
 CellChangeTimes->{{3.74919530497782*^9, 3.749195407327724*^9}, {
   3.749195467647613*^9, 3.749195646248128*^9}, {3.749196282476817*^9, 
   3.749196282876801*^9}, 3.749196605596325*^9, 3.7491976142772284`*^9, {
   3.7492000639817533`*^9, 3.749200263139267*^9}, {3.7492006299928217`*^9, 
   3.749200687794754*^9}, {3.749200747930554*^9, 3.749200795098422*^9}, {
   3.7492013169198303`*^9, 3.749201346071619*^9}, {3.7492013864247103`*^9, 
   3.74920149915821*^9}, {3.749201555077005*^9, 3.749201606283115*^9}, {
   3.7509851650732193`*^9, 3.750985186350546*^9}, {3.752464451782661*^9, 
   3.7524644574825583`*^9}, {3.752464520949976*^9, 3.752464644645865*^9}, {
   3.752465810682805*^9, 3.752465949644471*^9}, {3.752466005699912*^9, 
   3.752466117106015*^9}, {3.752466169514428*^9, 3.752466214852681*^9}, {
   3.752466295663093*^9, 3.752466297494977*^9}, {3.75292633203976*^9, 
   3.7529264435206003`*^9}, {3.752926489424343*^9, 3.75292648987319*^9}, {
   3.752926523712352*^9, 3.7529265239520607`*^9}, {3.752926555503914*^9, 
   3.7529265618082314`*^9}, 3.752927935186902*^9, {3.753708349433187*^9, 
   3.753708349434434*^9}, 3.753717464003072*^9, {3.756644236026182*^9, 
   3.756644283146344*^9}, {3.756650061441642*^9, 3.7566500644979153`*^9}, {
   3.756650202078431*^9, 3.7566502027410183`*^9}},
 ExpressionUUID -> "051bc624-7d61-4272-9c84-bae25e2c88c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Growth function", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9, {3.756242867424712*^9, 
   3.756242879922934*^9}},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData[{
 RowBox[{"Rate", " ", "of", " ", "biomass", " ", 
  "synthesis"}], "\[IndentingNewLine]", 
 RowBox[{"We", " ", "consider", " ", "the", " ", "ATP", " ", "requirement", 
  " ", "of", " ", "growth", " ", "and", " ", "maintinance", " ", "and", " ", 
  "ingnore", " ", "additional", " ", "biomass", " ", 
  "components"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", " ", "-", " ", "mE"}], ")"}], " ", "*", " ", "y"}]}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Death", " ", "rate"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "We", " ", "assume", " ", "that", " ", "the", " ", "secreted", " ", 
   "lactate", " ", "is", " ", "toxic"}], ",", " ", 
  RowBox[{
  "so", " ", "the", " ", "death", " ", "will", " ", "depend", " ", "of", " ", 
   "its", " ", "concentration", " ", "in", " ", "the", " ", "culture", " ", 
   RowBox[{"(", "sl", ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", " ", "=", " ", 
   RowBox[{"\[Delta]lac", " ", "*", " ", "sl"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Net", " ", "growth", " ", "rate"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", " ", "=", " ", 
   RowBox[{"z", " ", "-", " ", "\[Delta]"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Maximum", " ", "net", " ", "growth", " ", 
  "rate"}], "\[IndentingNewLine]", 
 RowBox[{"The", " ", "growth", " ", "rate", " ", "is", " ", "maximum", " ", 
  "when", " ", "vatp", " ", "is", " ", "maximum", " ", 
  "too"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]max", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"z", "[", "vatpmax", "]"}], " ", "-", " ", "\[Delta]"}], " ", 
   "\[Rule]", " ", 
   RowBox[{"(", "0.5", ")"}]}]}], "\[IndentingNewLine]"}], "Text",
 CellChangeTimes->{{3.752465053095471*^9, 3.752465319756385*^9}, {
   3.752465380732068*^9, 3.7524654367311583`*^9}, {3.752465517469027*^9, 
   3.75246553856374*^9}, {3.7524655873524837`*^9, 3.752465693783753*^9}, {
   3.752926477657195*^9, 3.752926540816968*^9}, 3.752927935187914*^9, {
   3.7536320525451937`*^9, 3.753632076879727*^9}, {3.753708349441621*^9, 
   3.753708349442939*^9}, 3.753717464004011*^9, {3.756644292962027*^9, 
   3.756644300656057*^9}, {3.756644392709746*^9, 3.756644395702445*^9}},
 ExpressionUUID -> "b23cd6b9-7cac-4d36-86c0-e036a181d135"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Model", " ", "Solution"}]], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464253827971*^9, 3.752464267146635*^9}, {3.7524643219350853`*^9, 
   3.7524643281657333`*^9}, {3.752464520954516*^9, 3.75246452095525*^9}, {
   3.752925172625963*^9, 3.752925173330151*^9}, 3.752927935185779*^9, {
   3.752929360481892*^9, 3.752929364810026*^9}, {3.752929494784725*^9, 
   3.752929514509107*^9}, 3.753708349426414*^9, 3.753717464002063*^9, {
   3.756242339979738*^9, 3.756242373031191*^9}},
 ExpressionUUID -> "fa126ca0-6c5e-479d-8304-467a5ea62b90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"--", 
   RowBox[{"--", 
    RowBox[{"--", " ", "Polytope"}]}]}], " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["\[ScriptCapitalP]", "s"], ")"}], "--"}], "--"}], 
   "--"}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242410193131*^9, 
   3.756242421706142*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Definition", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.753708349448257*^9, 3.753708349449565*^9}, 3.753717464008903*^9, 
   3.756241953853486*^9},
 ExpressionUUID -> "b1ca67f6-c4c2-49d2-a72f-b1ff54ded0c0"],

Cell[BoxData[
 RowBox[{"\"\<The constraints and balance equations defined above define a \
polytope of feasible metabilic states that we denote (\!\(\*SubscriptBox[\(\
\[ScriptCapitalP]\), \(s\)]\)). Each point within this space, in the Toy \
model, consists of coordinates v = (vg,vatp), wich fully specify the \
metabolic state of a cell in the model. \>\"", " "}]], "Text",
 CellChangeTimes->{3.753058314518096*^9, 3.7537083494529676`*^9, 
  3.753717464011091*^9},
 ExpressionUUID -> "f215c142-f21a-4492-ad7b-61576f6d9208"],

Cell[BoxData["\"\<The constraints and balance equations defined above define \
a polytope of feasible metabilic states that we denote \
(\\!\\(\\*SubscriptBox[\\(\[ScriptCapitalP]\\), \\(s\\)]\\)). Each point \
within this space, in the Toy model, consists of coordinates v = (vg,vatp), \
wich fully specify the metabolic state of a cell in the model. \>\""], "Text",\

 CellChangeTimes->{3.752933523249996*^9, 3.752933663056302*^9, 
  3.752933739769668*^9, 3.7529338109621277`*^9, 3.753058320072535*^9, 
  3.753708349454076*^9, 3.753717464011653*^9},
 ExpressionUUID -> "f7bb4b42-6860-4111-be7b-091882bdd78a"],

Cell[BoxData["\"\<To solve the model we put all the unknow variables in \
depende of vg and vatp (chosen for convenience)\>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, {3.752925338913213*^9, 3.7529253393771*^9}, {
   3.752925459879816*^9, 3.752925737639296*^9}, {3.752925818349126*^9, 
   3.752925847084935*^9}, {3.752926166011025*^9, 3.7529261661544647`*^9}, {
   3.752926216418215*^9, 3.752926263609626*^9}, {3.752926313569674*^9, 
   3.752926324842073*^9}, {3.752926589366989*^9, 3.7529267382226677`*^9}, {
   3.752927686879444*^9, 3.752927829069762*^9}, 3.752927935191126*^9, {
   3.752930493529579*^9, 3.752930504349216*^9}, 3.752930757538364*^9, 
   3.753708349454649*^9, 
   3.753717464012*^9},ExpressionUUID->"f3b79a30-3161-4122-981e-693de82e2e4a"],

Cell[BoxData["\"\<Clearing vo from Eq.6 and 7\>\""], "Text",
 CellChangeTimes->{{3.7530583415112553`*^9, 3.753058361652829*^9}, {
   3.7530584204725437`*^9, 3.753058430510653*^9}, 3.753058470119246*^9, 
   3.7537083494562473`*^9, 
   3.7537174640127983`*^9},ExpressionUUID->"1dd4d10d-a7a0-4510-a2b5-\
638b19533c8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vl", "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", "-", 
      RowBox[{"Nf", "*", "vg", "*", 
       RowBox[{"(", 
        RowBox[{"1", "+", "Nr"}], ")"}]}]}], ")"}], "/", "Nr"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7530583415112553`*^9, {3.7530583774940557`*^9, 3.753058393269991*^9}, 
   3.753708349456704*^9, 3.753717464013319*^9, {3.756651750842675*^9, 
   3.756651761266405*^9}, {3.756651806354629*^9, 3.756651847178319*^9}},
 ExpressionUUID -> "b1eacfc6-efea-4aab-b059-abcf03c3b187"],

Cell[BoxData["\"\<Clearing vo from Eq.6\>\""], "Text",
 CellChangeTimes->{{3.7530583415112553`*^9, 3.753058361652829*^9}, {
   3.753058404816309*^9, 3.7530584279159737`*^9}, 3.7530584659719353`*^9, 
   3.7537083494571867`*^9, 
   3.753717464013646*^9},ExpressionUUID->"155cf895-4351-45df-bd2c-\
495292be0acc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vo", "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"vatp", "-", 
      RowBox[{"Nf", "*", "vg"}]}], ")"}], "/", "Nr"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.7530583415112553`*^9, 3.7530583774940557`*^9, 3.753708349457632*^9, 
   3.753717464014125*^9, {3.75665176639321*^9, 3.756651777597395*^9}},
 ExpressionUUID -> "8e6d06c2-3719-42e5-9db3-20ca8fd8e2b8"],

Cell[BoxData[
 RowBox[{"\"\<All points in the polytope most solve the constraints 0 \
\[LessEqual] vg \[LessEqual] Mg  &&  vl \[LessEqual] 0  && 0 \[LessEqual] vo \
\[LessEqual] R\>\"", " "}]], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, {3.752925338913213*^9, 3.7529253393771*^9}, {
   3.752925459879816*^9, 3.752925737639296*^9}, {3.752925818349126*^9, 
   3.752925847084935*^9}, {3.752926166011025*^9, 3.7529261661544647`*^9}, {
   3.752926216418215*^9, 3.752926263609626*^9}, {3.752926313569674*^9, 
   3.752926324842073*^9}, {3.752926589366989*^9, 3.7529267382226677`*^9}, {
   3.752927686879444*^9, 3.752927829069762*^9}, 3.752927935191126*^9, {
   3.752930493529579*^9, 3.752930536169989*^9}, {3.753058446836197*^9, 
   3.753058460358975*^9}, 3.7537083494582567`*^9, 
   3.753717464014477*^9},ExpressionUUID->"8ac17d9b-26fb-42dd-adc3-\
90fa00ac2d58"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"polytope", "[", "\[Xi]_", "]"}], "[", 
    RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"0", "\[LessEqual]", "vg", "\[LessEqual]", 
     RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}]}], "\[And]", 
    RowBox[{
     RowBox[{"vl", "[", 
      RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "0"}], "\[And]", 
    RowBox[{"0", "\[LessEqual]", 
     RowBox[{"vo", "[", 
      RowBox[{"vg", ",", "vatp"}], "]"}], "\[LessEqual]", "R"}]}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.749202140574168*^9, 3.749202199360901*^9}, {
   3.7492072696114264`*^9, 3.749207273259781*^9}, 3.7492120907596188`*^9, {
   3.749212137159401*^9, 3.749212147567031*^9}, {3.749212408381659*^9, 
   3.749212527253311*^9}, {3.749212752251713*^9, 3.749212796315857*^9}, {
   3.749212874858179*^9, 3.749212900282939*^9}, 3.749212941010502*^9, {
   3.74921333222438*^9, 3.749213420432701*^9}, {3.74921410105215*^9, 
   3.7492141018919573`*^9}, {3.749215097129808*^9, 3.749215229373934*^9}, {
   3.7492152746094913`*^9, 3.749215460892693*^9}, {3.749215893342661*^9, 
   3.749215900450272*^9}, {3.750985367075029*^9, 3.750985426051023*^9}, {
   3.750985485204116*^9, 3.7509855375614147`*^9}, {3.750985597490034*^9, 
   3.75098562403225*^9}, {3.750985673977062*^9, 3.7509856858565187`*^9}, {
   3.750985754967391*^9, 3.750985833766829*^9}, {3.75098589326208*^9, 
   3.750985913715073*^9}, {3.7510143709364223`*^9, 3.7510143874197474`*^9}, {
   3.751014467099848*^9, 3.751014534635768*^9}, {3.75101528883079*^9, 
   3.751015332407366*^9}, {3.751015401958969*^9, 3.7510154076861477`*^9}, {
   3.751222954518268*^9, 3.7512229958403673`*^9}, {3.7512232403402157`*^9, 
   3.75122334641395*^9}, 3.751223386118971*^9, {3.751223437803546*^9, 
   3.751223440698057*^9}, {3.751223492779727*^9, 3.751223492974498*^9}, {
   3.751223548044216*^9, 3.751223570889072*^9}, {3.751224152224432*^9, 
   3.7512241835642147`*^9}, 3.751825593849558*^9, {3.751825656734974*^9, 
   3.751825870283942*^9}, {3.751825929196954*^9, 3.751825950635355*^9}, {
   3.751825988953738*^9, 3.7518260738993607`*^9}, {3.751826139773387*^9, 
   3.751826145943561*^9}, {3.751826242776675*^9, 3.751826246561747*^9}, {
   3.7518262913874893`*^9, 3.7518263131682243`*^9}, {3.7518263467102003`*^9, 
   3.7518263555790577`*^9}, {3.751827640587096*^9, 3.751827727639947*^9}, {
   3.751827762555789*^9, 3.751827763880947*^9}, {3.751827916657777*^9, 
   3.7518279169868193`*^9}, {3.751828037348584*^9, 3.751828148228833*^9}, {
   3.7518282384429827`*^9, 3.75182827851226*^9}, {3.751828451815099*^9, 
   3.751828452059354*^9}, {3.7518294823623466`*^9, 3.751829506404498*^9}, {
   3.751830354536604*^9, 3.751830405377186*^9}, {3.7518304461303167`*^9, 
   3.751830447031962*^9}, 3.7518305566959047`*^9, {3.751906601564062*^9, 
   3.75190664637346*^9}, {3.751911104784292*^9, 3.75191114578225*^9}, {
   3.751911185981398*^9, 3.751911243979504*^9}, {3.751998812785035*^9, 
   3.751998813135584*^9}, {3.751998872671236*^9, 3.751998873158175*^9}, {
   3.751999010804852*^9, 3.751999020219652*^9}, {3.751999071482976*^9, 
   3.751999073476569*^9}, {3.7524324154690037`*^9, 3.75243242596104*^9}, {
   3.7524324584014177`*^9, 3.752432495027521*^9}, {3.7524326025941963`*^9, 
   3.7524326987935266`*^9}, {3.752432752441649*^9, 3.752432796746372*^9}, {
   3.752432846526588*^9, 3.752432898182074*^9}, 3.752433066561088*^9, {
   3.752433106574066*^9, 3.7524331742359753`*^9}, {3.7524332121421633`*^9, 
   3.752433218362021*^9}, {3.752460035464567*^9, 3.752460050337606*^9}, {
   3.752460116522315*^9, 3.7524601169995823`*^9}, 3.752460156405404*^9, {
   3.752460272384076*^9, 3.752460394559545*^9}, {3.752464192579155*^9, 
   3.752464198855771*^9}, 3.7524645209650106`*^9, {3.7524649136087093`*^9, 
   3.7524649173601027`*^9}, {3.7524649573804617`*^9, 3.752464957648262*^9}, {
   3.752466539037788*^9, 3.752466567131217*^9}, {3.7524691312848988`*^9, 
   3.7524691335700274`*^9}, {3.752471166527216*^9, 3.7524711674525642`*^9}, {
   3.752501401667347*^9, 3.752501418398407*^9}, 3.752587430667922*^9, {
   3.752861055909884*^9, 3.752861060761668*^9}, 3.752862708605536*^9, {
   3.752862803374445*^9, 3.752862822653764*^9}, {3.752862856475273*^9, 
   3.752862867956513*^9}, {3.75287481496216*^9, 3.7528748435125933`*^9}, {
   3.752876479065824*^9, 3.752876509071992*^9}, {3.752876813149148*^9, 
   3.752876830787569*^9}, {3.7528779835465593`*^9, 3.752878132237485*^9}, {
   3.752878168632679*^9, 3.752878261657584*^9}, {3.7528782937245398`*^9, 
   3.752878468365843*^9}, {3.752878524439631*^9, 3.75287853299188*^9}, {
   3.752878620598132*^9, 3.752878813616458*^9}, {3.752881254729713*^9, 
   3.7528812862361526`*^9}, {3.7528820041931067`*^9, 3.752882047199188*^9}, {
   3.752882788773197*^9, 3.752882838873505*^9}, {3.752882919181575*^9, 
   3.752883106786106*^9}, {3.752883187051491*^9, 3.752883421953068*^9}, {
   3.752883470808524*^9, 3.752883550238308*^9}, {3.7529225863053093`*^9, 
   3.752922756903014*^9}, {3.752922799976521*^9, 3.752922984011631*^9}, {
   3.7529230175447903`*^9, 3.752923020729622*^9}, 3.752923051146555*^9, {
   3.752923103213099*^9, 3.752923139115272*^9}, {3.7529232257704268`*^9, 
   3.752923229155459*^9}, {3.752923262517638*^9, 3.752923337289015*^9}, {
   3.752926680999213*^9, 3.752926689031809*^9}, {3.75292785109726*^9, 
   3.752927880623377*^9}, 3.752927935198411*^9, {3.752927993899378*^9, 
   3.752928000774272*^9}, {3.752928062468251*^9, 3.752928111071563*^9}, {
   3.7529282931520147`*^9, 3.752928326003873*^9}, {3.7529284634688187`*^9, 
   3.752928477735977*^9}, 3.752928766046103*^9, {3.7529289267548437`*^9, 
   3.7529290103571053`*^9}, 3.7529291147722597`*^9, {3.752930400926515*^9, 
   3.752930412690782*^9}, {3.7529304429575453`*^9, 3.752930480514982*^9}, {
   3.752930521675785*^9, 3.752930542056172*^9}, 3.753708349458797*^9, 
   3.753717464015049*^9, {3.755969334396475*^9, 3.755969348933741*^9}, {
   3.755969627316334*^9, 3.755969629854424*^9}, {3.7562425197578506`*^9, 
   3.75624252017439*^9}, {3.7563833462849197`*^9, 3.7563833504238253`*^9}, 
   3.757401170668236*^9},
 ExpressionUUID -> "bfe932a7-8a67-4864-b744-7eaa94e80d8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polytope limits", "Subsection",
 CellChangeTimes->{{3.7529291436309757`*^9, 3.752929148469964*^9}, {
   3.752929183771289*^9, 3.7529292259467077`*^9}, {3.7529292733942947`*^9, 
   3.752929274218402*^9}, {3.753708349471632*^9, 3.7537083494729843`*^9}, 
   3.753717464022737*^9, 3.75624206207765*^9},
 ExpressionUUID -> "60d3bed2-6811-4207-a7e1-4cc2394cd2c9"],

Cell[BoxData["\"\< To calculate any integral through the polytope it is \
useful to defind its limits... \>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, {3.752929602153782*^9, 3.7529296486240387`*^9}, {
   3.752929793614394*^9, 3.752929850845911*^9}, 3.753708349475071*^9, 
   3.75371746402321*^9},ExpressionUUID->"ddf0a8b5-bf4f-4b90-b82e-\
75b9d5635ef5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "vo", ",", "vl", ",", "vatpMaxGlobal", ",", "vatpMaxLocal", ",", 
     "vatpMinGlobal", ",", "vatpMinLocal", ",", "vgMaxGlobal", ",", 
     "vgMaxLocal", ",", "vgMinGlobal", ",", "vgMinLocal"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vo", "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vatp", "-", 
        RowBox[{"Nf", "*", "vg"}]}], ")"}], "/", "Nr"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vl", "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"vatp", "-", 
        RowBox[{"Nf", "*", "vg", "*", 
         RowBox[{"(", 
          RowBox[{"1", "+", "Nr"}], ")"}]}]}], ")"}], "/", "Nr"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vgMinGlobal", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vgMaxGlobal", "[", "\[Xi]_", "]"}], " ", ":=", "   ", 
     RowBox[{"Min", "[", 
      RowBox[{"Vg", ",", 
       RowBox[{"cg", "/", "\[Xi]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"vgMinLocal", "[", "vatp_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"vatp", "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", "Nr"}], ")"}]}], ",", 
        RowBox[{"vatp", "-", 
         RowBox[{"Nr", "*", "R"}]}]}], "]"}], "/", "Nf"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vgMaxLocal", "[", "\[Xi]_", "]"}], "[", "vatp_", "]"}], ":=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}], ",", 
       RowBox[{"vatp", "/", "Nf"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vatpMinGlobal", " ", "=", " ", 
     RowBox[{"vatpMinLocal", "[", "vgMinGlobal", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]_", "]"}], ":=", 
     RowBox[{"vatpMaxLocal", "[", 
      RowBox[{"vgMaxGlobal", "[", "\[Xi]", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMinLocal", " ", "[", "vg_", "]"}], " ", ":=", " ", 
     RowBox[{"Nf", "*", "vg"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vatpMaxLocal", "[", "vg_", "]"}], " ", ":=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"Nf", 
        RowBox[{"(", 
         RowBox[{"1", "+", "Nr"}], ")"}], "vg"}], ",", 
       RowBox[{
        RowBox[{"Nf", "*", "vg"}], "+", 
        RowBox[{"Nr", "*", "R"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"polytope", "[", "\[Xi]_", "]"}], "[", 
      RowBox[{"vg_", ",", "vatp_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"vgMinLocal", "[", "vatp", "]"}], "\[LessEqual]", "vg", 
       "\[LessEqual]", 
       RowBox[{
        RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]}], 
      "\[And]", 
      RowBox[{
       RowBox[{"vatpMinLocal", "[", "vg", "]"}], " ", "\[LessEqual]", " ", 
       "vatp", " ", "\[LessEqual]", " ", 
       RowBox[{"vatpMaxLocal", "[", "vg", "]"}]}]}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.749202140574168*^9, 3.749202199360901*^9}, {
   3.7492072696114264`*^9, 3.749207273259781*^9}, 3.7492120907596188`*^9, {
   3.749212137159401*^9, 3.749212147567031*^9}, {3.749212408381659*^9, 
   3.749212527253311*^9}, {3.749212752251713*^9, 3.749212796315857*^9}, {
   3.749212874858179*^9, 3.749212900282939*^9}, 3.749212941010502*^9, {
   3.74921333222438*^9, 3.749213420432701*^9}, {3.74921410105215*^9, 
   3.7492141018919573`*^9}, {3.749215097129808*^9, 3.749215229373934*^9}, {
   3.7492152746094913`*^9, 3.749215460892693*^9}, {3.749215893342661*^9, 
   3.749215900450272*^9}, {3.750985367075029*^9, 3.750985426051023*^9}, {
   3.750985485204116*^9, 3.7509855375614147`*^9}, {3.750985597490034*^9, 
   3.75098562403225*^9}, {3.750985673977062*^9, 3.7509856858565187`*^9}, {
   3.750985754967391*^9, 3.750985833766829*^9}, {3.75098589326208*^9, 
   3.750985913715073*^9}, {3.7510143709364223`*^9, 3.7510143874197474`*^9}, {
   3.751014467099848*^9, 3.751014534635768*^9}, {3.75101528883079*^9, 
   3.751015332407366*^9}, {3.751015401958969*^9, 3.7510154076861477`*^9}, {
   3.751222954518268*^9, 3.7512229958403673`*^9}, {3.7512232403402157`*^9, 
   3.75122334641395*^9}, 3.751223386118971*^9, {3.751223437803546*^9, 
   3.751223440698057*^9}, {3.751223492779727*^9, 3.751223492974498*^9}, {
   3.751223548044216*^9, 3.751223570889072*^9}, {3.751224152224432*^9, 
   3.7512241835642147`*^9}, 3.751825593849558*^9, {3.751825656734974*^9, 
   3.751825870283942*^9}, {3.751825929196954*^9, 3.751825950635355*^9}, {
   3.751825988953738*^9, 3.7518260738993607`*^9}, {3.751826139773387*^9, 
   3.751826145943561*^9}, {3.751826242776675*^9, 3.751826246561747*^9}, {
   3.7518262913874893`*^9, 3.7518263131682243`*^9}, {3.7518263467102003`*^9, 
   3.7518263555790577`*^9}, {3.751827640587096*^9, 3.751827727639947*^9}, {
   3.751827762555789*^9, 3.751827763880947*^9}, {3.751827916657777*^9, 
   3.7518279169868193`*^9}, {3.751828037348584*^9, 3.751828148228833*^9}, {
   3.7518282384429827`*^9, 3.75182827851226*^9}, {3.751828451815099*^9, 
   3.751828452059354*^9}, {3.7518294823623466`*^9, 3.751829506404498*^9}, {
   3.751830354536604*^9, 3.751830405377186*^9}, {3.7518304461303167`*^9, 
   3.751830447031962*^9}, 3.7518305566959047`*^9, {3.751906601564062*^9, 
   3.75190664637346*^9}, {3.751911104784292*^9, 3.75191114578225*^9}, {
   3.751911185981398*^9, 3.751911243979504*^9}, {3.751998812785035*^9, 
   3.751998813135584*^9}, {3.751998872671236*^9, 3.751998873158175*^9}, {
   3.751999010804852*^9, 3.751999020219652*^9}, {3.751999071482976*^9, 
   3.751999073476569*^9}, {3.7524324154690037`*^9, 3.75243242596104*^9}, {
   3.7524324584014177`*^9, 3.752432495027521*^9}, {3.7524326025941963`*^9, 
   3.7524326987935266`*^9}, {3.752432752441649*^9, 3.752432796746372*^9}, {
   3.752432846526588*^9, 3.752432898182074*^9}, 3.752433066561088*^9, {
   3.752433106574066*^9, 3.7524331742359753`*^9}, {3.7524332121421633`*^9, 
   3.752433218362021*^9}, {3.752460035464567*^9, 3.752460050337606*^9}, {
   3.752460116522315*^9, 3.7524601169995823`*^9}, 3.752460156405404*^9, {
   3.752460272384076*^9, 3.752460394559545*^9}, {3.752464192579155*^9, 
   3.752464198855771*^9}, 3.7524645209650106`*^9, {3.7524649136087093`*^9, 
   3.7524649173601027`*^9}, {3.7524649573804617`*^9, 3.752464957648262*^9}, {
   3.752466539037788*^9, 3.752466567131217*^9}, {3.7524691312848988`*^9, 
   3.7524691335700274`*^9}, {3.752471166527216*^9, 3.7524711674525642`*^9}, {
   3.752501401667347*^9, 3.752501418398407*^9}, 3.752587430667922*^9, {
   3.752861055909884*^9, 3.752861060761668*^9}, 3.752862708605536*^9, {
   3.752862803374445*^9, 3.752862822653764*^9}, {3.752862856475273*^9, 
   3.752862867956513*^9}, {3.75287481496216*^9, 3.7528748435125933`*^9}, {
   3.752876479065824*^9, 3.752876509071992*^9}, {3.752876813149148*^9, 
   3.752876830787569*^9}, {3.7528779835465593`*^9, 3.752878132237485*^9}, {
   3.752878168632679*^9, 3.752878261657584*^9}, {3.7528782937245398`*^9, 
   3.752878468365843*^9}, {3.752878524439631*^9, 3.75287853299188*^9}, {
   3.752878620598132*^9, 3.752878813616458*^9}, {3.752881254729713*^9, 
   3.7528812862361526`*^9}, {3.7528820041931067`*^9, 3.752882047199188*^9}, {
   3.752882788773197*^9, 3.752882838873505*^9}, {3.752882919181575*^9, 
   3.752883106786106*^9}, {3.752883187051491*^9, 3.752883421953068*^9}, {
   3.752883470808524*^9, 3.752883550238308*^9}, {3.7529225863053093`*^9, 
   3.752922756903014*^9}, {3.752922799976521*^9, 3.752922984011631*^9}, {
   3.7529230175447903`*^9, 3.752923020729622*^9}, 3.752923051146555*^9, {
   3.752923103213099*^9, 3.752923139115272*^9}, {3.7529232257704268`*^9, 
   3.752923229155459*^9}, {3.752923262517638*^9, 3.752923337289015*^9}, {
   3.752926680999213*^9, 3.752926689031809*^9}, {3.75292785109726*^9, 
   3.752927880623377*^9}, 3.752927935198411*^9, {3.752927993899378*^9, 
   3.752928000774272*^9}, {3.752928062468251*^9, 3.752928111071563*^9}, {
   3.7529282931520147`*^9, 3.752928326003873*^9}, {3.7529284634688187`*^9, 
   3.752928477735977*^9}, 3.752928766046103*^9, {3.7529289267548437`*^9, 
   3.752928987383675*^9}, {3.7529298654828176`*^9, 3.752929926642386*^9}, {
   3.752930161509399*^9, 3.752930182478071*^9}, {3.752930719246436*^9, 
   3.752930725327242*^9}, {3.753704543624488*^9, 3.753704562964754*^9}, {
   3.75370486813017*^9, 3.753704953329324*^9}, {3.753704994153006*^9, 
   3.753705119479807*^9}, {3.7537051665910892`*^9, 3.753705179870452*^9}, {
   3.753705248230303*^9, 3.753705343502005*^9}, {3.753705384778369*^9, 
   3.753705421453126*^9}, {3.753707168713571*^9, 3.753707169254553*^9}, 
   3.753708349476754*^9, 3.7537168551154413`*^9, 3.753717464024143*^9, {
   3.75371847946766*^9, 3.7537184803655357`*^9}, {3.753718516605296*^9, 
   3.7537185265732183`*^9}, {3.7566506034530363`*^9, 3.756650654928528*^9}, {
   3.756651557085034*^9, 3.7566515683656187`*^9}, {3.756651613485903*^9, 
   3.75665163758293*^9}, {3.756654713468211*^9, 3.756654717527791*^9}, {
   3.7566660016292048`*^9, 3.756666004400297*^9}, {3.757401053503894*^9, 
   3.757401082981196*^9}, {3.7574191373705378`*^9, 3.757419150694708*^9}, {
   3.757419318194989*^9, 3.757419363022629*^9}, {3.757419657321843*^9, 
   3.7574196577127028`*^9}, {3.757419907268776*^9, 3.757419908418324*^9}, {
   3.757420149840357*^9, 3.757420184283955*^9}, {3.757420258687552*^9, 
   3.7574202837652817`*^9}, {3.757420837629322*^9, 3.757420847627475*^9}, {
   3.757421662084166*^9, 3.757421663661031*^9}, {3.757421702241831*^9, 
   3.7574217023866787`*^9}, {3.757975924866295*^9, 3.757975941858878*^9}, {
   3.757975997901198*^9, 3.757976028815647*^9}},
 ExpressionUUID -> "2b5930b4-5404-40c4-9f61-9d2c75aad358"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showPolytope", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.757159934790625*^9, 3.7571599450670853`*^9}, {
   3.757419165381269*^9, 3.757419194453476*^9}, 3.7574193242833633`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   StyleBox["\<\"Polytope with \[Xi] = \"\>",
    StripOnInput->False,
    FontSize->25], "\[InvisibleSpace]", 
   StyleBox["2",
    StripOnInput->False,
    FontSize->25]}],
  SequenceForm[
   Style["Polytope with \[Xi] = ", 25], 
   Style[2, 25]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7571599413911657`*^9, 3.7571599570294333`*^9}, 
   3.757160035559016*^9, 3.7574013070785923`*^9, {3.7574191564193907`*^9, 
   3.7574191951282043`*^9}, 3.7574193251601*^9, 3.7574193686292887`*^9, 
   3.75741966246929*^9, 3.757420000578532*^9, 3.7574202873867407`*^9, 
   3.757420852095036*^9, 3.757975947151702*^9, 3.757976001550005*^9, 
   3.7579760318975573`*^9, 3.759851714726379*^9, 3.759851755590534*^9, 
   3.7598524833525133`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
      PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
   GraphicsComplexBox[CompressedData["
1:eJxlmntYzOn7x5MkMaFymk6TwixZp2pF2/2pSDZSaUmYyIaMJa1TCEslLGJb
kuPkWGhSOZQkHTUqlWo6FxqUnCYKi36z1/V9P11XP/+4Xtf9+Tw97/dzup/7
M6a+az381NXU1Ox6qqn99/9l8yNpI5ecttO6ckVHYr/Izv5gb/PWjlrKfmju
Hq6MpkVemhNedbQyRtw1a8jaPco4FgcXrNcQvkv5yHjV3dBbLR1fGeP9xRFF
3gqrZPY+GO+D8T5YY/fuc0q+OgeeO2raq7cpvRijfT0a+D1MmcraB6N9MNoH
o30w2gfHPNSY9NqrD+P3a3O2tHT0YyzQdnzyh8sAxuiPoj3WLVKewfoDRn/A
6A8Y/QGjP2D0B4z+gNEfsPMis1AlX5dxQHzPH9a16DFGfzlXl+EKq2zWXzD6
C0Z/wegvGP0Fo79g9BeM/oLRXzD6C45Sayp4mzKIcYZHdsCavUMYQ8+JC61t
VpF5TA8YesDQA4YeMPSAoQcMPWDoAUMPGHrA0AOGHvDL8+f1X3sNYzygI+S2
WGjAePJMv0UtHYaMob/964GcMKWM6QdDPxj6wdAPhn4w9IOhHwz9YOgHQz8Y
+sHQD4Z+MPSDoR+85MR0Nf88Y667fnfPccfkbkVMPxj6wdAPhn4w9IOhHwz9
YOgHQz8Y+sHQD4Z+MPSDoR8M/WDor/h1pWWkvJjpB0M/GPrB0A+GfjD0g6Ef
DP1g6AdDPxj6wdAPhn4w9IOhHwz9IT1sTqWFlTL9YOgHQz8Y+sHQD4Z+MPSD
oR8M/WDoB0M/GPrB0A+GfjD0g7PbdUv/cBEwhh8Tr/XRVFiVMT/A8AMMP8Dw
Aww/wPADDD/A8AMMP8DwAww/wPADDD/A8AMMP8DwAww/Gr2q1/AU5cwPMPwA
ww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADDj4MaV+RWkXLm
Bxh+gOEHGH6A4QcYfoDhBxh+gOEHGH6A4QcYfoDhBxh+gOEHGH6A4YdtwlZO
5FjF/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPxo
WTgrNkxZzfwAww8w/ADDDzD8AMMPMPwAww8w/ADDDzD8AMMPMPwAww8w/ADD
DzD8iOptpCuV1DI/wPADDD/A8AMMP8DwAww/wPADDD/A8AMMP8DwAww/wPAD
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
qPK2uaI8kyKSov9cLxzy/+pXe1aPiZNHZJEk7MslP1FXvWrERM7RPsiI3Zdx
/g1f4VcpfplHsXWh9YaRJv+vnnU1dfMRpXfXfdpilVxX8bGALHzeP3sc01Xf
OqkZIjTd85TVp2wv60UaunbVp74eqW/Ssm5i5zvL1xbOMZaq8or4bet2hx3u
yq/Xj/ipc/3VrvzadcfD/j5Br1n9sqKgj9sU/yrSrvaeaeMZQuEXC7RLhJdV
4+7W4mMWRQvN12022HGaRlq/+cFz+0FKDvdpfO37hqrffNQYPSeKBKP3DC+0
/0Bh+tftdKzOUqqZZn6LThtNGVHm57H9NBX4J80btew72SQWed11vUxcWZ/v
YVmddHNNsN40/1jKXxGanZ7Sg3N/pPGP9aKr5JsZdnygrSbn76e1RZp/nTan
K3sv9ujD2QTlkoFDMkU5R5+K3jCAOzvv3Srpr6mkPXz86ISUgZyFX98+qxel
0Qab6S/mbR7I7b5/wlvWdofet7nda7bX54Za8hPklhl0bETYh+AL+pzsVqBC
HJJBywqfu3SGDuJEd0Z1Wk2+T6kD83pcKB3CFR08dkqpk0X3b+7xE3sM43Tj
0vTVHLKJ72u3J9XYiKtNFPVXm5VHR6KS9vzra8z1+LsyjDfnAXU2Oxu2WRhz
tbZPeGrmD+i9S3lG6Kga2nTmx5ww4UPijPit7cdqaaLD5cywowUk8Nt+J3Rs
PX19seaY3KKIdLj5vfLsBZzaX86Wkc3FVBFu0atjgYCblrDyVJq4lGb5lm79
QzUfntdfOZ2WXEIp0SVxn+JaSVibHyWJqyXhT2UvB4x9QxsOBHxosqgnJ++f
lhnve03J81c4Oe6ro7+WC321DUw5iw/ePWTB9RTzZeOFNjNTzv1ggojXr4G+
u2rqWzhmU+rgtQkHJgZQqUbjlEZhFM0rWhW/1CycjCdWtz8p66qXn+ZSLW7K
BZzZVnGOm3M1ed/c8jmxXsCNqa3xEt6upqbqM4HFb7vq6WH8whW27QLuta/M
2XF8LQ1v9A4uU/GWA7uSxVNqKW6335t0bVNWb38lHB+s0d+US7seYxSZVkcf
s+XLh09JZvtThvXWDaNH3CaT5sWlMrPLdPbnvSuant6k2oeBI35ouEj4/eZ4
XeGjPmMe2nlMswxI6Luf1Q/XeE36d2n/LGot5lcodZIoubT53rsEGQ0KOPos
LT6VXu6fFLD2gYD7uoyf5+ZZRSV+Tlc+PhdwuS5Bvzja1lC2rXP9S3VTrsEh
+ULYv6o8X/Dbqt97mXJ7LrrX8M3rWL6Hv6ebu9i53454tj60zUN7LBySSKMD
W3R9DGLoUfgPrd7j0sku8tXCGIt4Mrc2WaMjyCHPQxEnRSY3WH1AVG7ySCRa
QVHpSx6/8a2n7M7++WPmhLP9pX7tbmtP0R4aZPhPUlSugPNqer9bblVFNkVf
tyzL66pn79S8a7ngaVc9m91vq/5wdlxay/aXmzudMx6KD7N66Pna9ASDX86z
+qfXrr3T1c7eJo1Ncb3fzCli9U4tnyt+E4KLaP32pLEG29Pp01fxmznHVfN6
xyKZJKqr/lk2uW+mclU6TfPcty03tJTVNy+2jh+0pP9jwnqsslq3aqfqnF7z
NPZP4aks0vidPv7zrJzVNw9sNx+Vf7aC9EuDx8gkuay+Ga3nYazYkEurnGzF
GtOrWD0z/Vihaf7FKormp3/jX8ynxHnhJ2mogN0XYlL2Cg4bCbjTvzQWiWcV
0qbO2UN/nCRg35/E6j6C+1YC7sjMCDeRsJiCfr975t2d56zeeblvhEJW/5xy
m2caSlV5pn5PF/V23xe0dMELnsxXTmOr71RfWv2S1Ttt4u4e/THvJUWUXD4j
ya2kgEvnl0Q3vSRL95KnfEWlav0OPnbIoIXVO3tbfl4cvaKFNm547+K4oppe
KwPmbpK9YvXOjcX/nkhsfkVZI6MuhTXX0He9CvOEygx2n9o5nRs8R3WOda9f
tG5e8Kd7vZSm2hu4l31T5xrqTCa1+caz74NONb4lytQb9GdAXbyBfx/Oe7hg
tppnMrUcC48MPKrN/alWdjBo+g26HK2V7HO0H4f8c4zTVceAUSW07/XWv3mj
7pPr7t4Xf/pURoK7NtHK9uyu74mLbVLT+JlklDpBV1s4mFPfET9SkXKfpvYc
rvGzeSWVSr0NFGYPyKgxfe+4vEo6FdhyR5L7gH1vHJhh95uoZw7JVgb2G+0/
jJvxu1lvA89s2nKudMzGD8O4m7872kqzsqn2W+/+BZ18rsIv7deg4zmktu3w
1P3/fd/IWdtbTXU/BFc2bGu1UnHH1Lnx7mqN7Huk/7MvdkO219PS/JsvrLYX
0dxhYd4O8Q1UtbpB5Ch9RGqP7hvURDWSywjRKGlUMWndfbli06RGqtxqoeRP
KianwZv+vPCDgFt+w/G6pKiIll9KTvt3nICbpXXJQHb8Ec1/cG2VjfQJ+745
Y8AVt7WjntC2WVM28VQ+Oh4/NtrU+wklVB8aKltQQt5/GGzZobpvGxs5f+1U
5d1g3Yj7fRQqvuWpNcpU9IzVCxKsolfa1D6lb/ut1/NqS+nVwJljnqk3Uf0m
wQG5ehmpu1f17+vfVQ9WH7JgcupiAafT/vVk2uVS2pxr3vLVT8AlKgV/Ki0e
E99M12VgoIAbctkjkPfmMVnaKm5+Xi3gEnK1h0tPPqahT3yfafG6vr/2q27L
rVvcRMW7BTNFojIq+Gnv7sEhXfXllnfiP7htAq6qbqFAGlFG9v2/NFtsV91H
B9u38KVlxO9Q37huv4ALMH2WGBZSTp4Z5kY+LQo6U/rJSNpSTkcaXTs1znTV
m8NiG8bNOCrg8nXG3BNPqCD1kkHXO2JV+2EfB+ug1XJSiDyKMktfkH/qfImk
VE5ee/W3tqV01ZdnPb6XtDJewA3OKOFLk+SU6282x/NiM+ll3PMWqvaRWbwf
M+xSm2n0oPETg1KrSKATfO3TqFf0/FbsuCBhDdVdWbguJuYVffh68IY4poak
fUcWOAnfsu/H0Rdixuzb/oZq19ye5qiaV+IecR3z3qjyLYcYRefregqpGTvj
Rvxbcgr1zreSNpD802/6uwLfUjDl5lsFNtAX8+/Thqh11a/HZw3KMh5lyh2K
/UvZZNfQ9b1g7DfPnmoH6PnImhbNb3HsPlA52qfIzKOZBk/5sCjcIZLdr208
a1/5OB4ju00L+8SkvCdlXwv7c4tO0uZ2e6/7H1NZvYd97xu/NE3x8Sp92JHU
9n3lZ9rx17Aq2dzzJHPQXuNa/S9ZcOrDps28SDNaJTdbNn9j9aCIvNAXZ0Y+
pNNrJr+TCO+w+4zzVW8Xxcc0crpyzPnC+a56d8at0/Eml/pz3o+eGrh7pLD6
94GLvYTW+qnkYaVYdmHIQK6p7lsKb8EdCol4975GR4/DeWTTW/Nz/Rk9rrlx
5ED35ffIobz0fGdnV/176Ya2DOk2Q27yW/kLN1kuq4cntyo9gsbm0WPXvbNz
Moy47RsV1tLCPDpVXHrqsyoPswzue0MSV0ATbxSoL1HlMfhe9tcrl7N33OtZ
fXzUrp1/5ajuZ6ifYHywfs9uay/5e2HX71FfPr7SO2pj1+8xUS9/4/nDtbDM
SgovG3D6bEZX/TzyrqTQyf1N1++J6hKnfspvJ12zglrZ1Biaf/DtT7Eb1Lic
jOb2oF/jSFOxaOsMHS2u7f3td2l2SVTwS/K1U8Y8jtf/rYX1rFuUrbP1XepC
XS6wdaiXzOcuXWk8EfrhmT6X1nFWHnYzg7RktmeWJAzl1jy3eu2WkUVvTyy2
jJ5swClXyKKUuTk0K/T7bM1eJty5eT7xacUPqPpQ7Mm1vQScxssjQxQzZJRw
ctrymtmq9Wa/ZYQ0roQuLHfOrmtUkO5lLjGssZxK1//6ZZ74NUUZ79omF9ex
38+sHrp1lVI1301HDpkRYGHKvs8YfXBa1Rnai9v2Le4n68nX6ei7i7ouq4dw
Qh/haWVaJv0fksA+3Q==
    "], {{
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[0.3], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgn8j8UWxmfmp6JFtClKWdpFhUhuqdC+KaHNUhJtV9stbYRWqRQtt4VK
G5GKyhLSIhRRyZIICVkqS1S653vP837m//k4npn3974z55k5M+9z5v3X6HR9
q+tSCGFhKQT7FxbEEOabVTCbaDbU7DKzU8wONdvRbJnZUrOdzH40286eq2C2
1cpbzNaafW421ayD2almdcx2NvvJbLnZLmY/RH9uV7NKamNHs8rCncx2E+5s
9rPdv8JsitnpZvXMdjW7Inobe5tNt/I0sy5mZ5rVN9vNrJrapb19hbub7Sfc
w6y6cE+zSfbMcLNOZmeYHWVW2axr9H5qme1TxvcDVa9qdpCQPg8W0uchQvo8
VEifhwn3N/vL2v/TbH30NirJ79riRx/XRO//SLOzzJqa/cvsaN2HL/WF+NJA
iC8NhfhyjBBfGgnxpbHwcLNjhXXMmgiPMFtlPqw0+8TsbLOGZnuY/Tu6X83M
TpSPR5mdJMTHk4X42NqsuVkL/V5LHFrKV3w8RYiPpwrx8TQhPp4uxMczhMeZ
nSlsqn7qazwmm5+jzK4zO8eskdlezG103881O68Mj1ZCeJwvhMcFwoJDA/n9
nNlDZv3Mnhc+bNZWfODRTgiPi4TwuFgIj0uE8LhUyJxfJjzbbJv5/LfZb2b7
RPe9g1nHMjw6CeFxuRAeVwjh0VnInFwpvNCsi7CN2W1mV5l1Nesh7CZrJx5X
C+FxjRAe1wrhcZ0QHtcL25tVi+77v9VPG43ZDeIDjxuF8LhJCI+bhfC4RQiP
/wjhcauw4NBWfl+o+SPubhcfeAw0623Wx+xO8YHHXUJ43C2ERyvz/wSzfc32
i86jl9lqK3c3vEftdRenPkI49RXC6V4hnO4Twul+IZweEMLpQSHz85Cwh8YP
TsTcHeIEh/6qw+kRIZweFcLpUfP5EbOeVv7McJxZdbOx0Xk8bvZEGU791Cfj
N0jc4PSkEE5PCeH0tBBOzwjh9F8hnJ4VwulhtX2Hxq+DYuIF/Qan7cy3DYYb
zYaIG5wG2PXHMMY1uu8vmw0tw+MVIXP+qhAerwnh8boQHm8I4TFMCI/hQni8
KYTHCCF7w0ghe8NbQnhMMRtl9jbPmZ/PmL1D/4YDzV5kzqP7PtpsTBke7wnh
8b4QHh8I4TFW+Lr6oc/BZuPFBx4ThPD4UAiPiUJ4TBLCY7IQHh8JCw6DNQ/j
1Cd99Iju+6dmS8xmms0ymyo+8PhcCI9pQnhMF8JjhpC2vxDC40vhBLU9QTxm
CeHxlRAes4XwmCOEx9dC5uQb4cdmd0T3fa7ZSrPvzOaZfVZmTuaLDzwWCOGx
UAiP74XwWCSExw9CeCwWzlQ/n6qfH8UHHkuF8FgmhMdyITx+EsKjZnTfV5j9
LB5lOeB3oQmO0RyytlhLv4gPPNYI4bFWCI91QnisF8LjVyFz/psQHr8L4bFB
CI+NQnhsEsKjVnTfN5v9UYbHFiFzslW4yuxP4ergOrRidD25XBq0opW3iQ88
/hHCI0RHeMToCI8UHeFRio7wKBcd4fGX+mTMto/OBx7zpanLBdfXO0pDL5We
Lh9cQ6OHub5FOhpNPFU6Gk38t9peI37MH3HHc+hGtCn6d/fomq3Q0+hJNDRl
xmGFdDQ6GE1dKboO7ixtXUVtoT33VttVVaetaqoX2pp6oa2pF9qaOnqaMhp7
uDQ1urebtHVN9YEGrKXxm6+YK3KDSiFr64NC1tYHh6ytDwlZW1NHT1Omrz+V
H6Brpyk/qCM+B6rva6Pr7HryA216pH47WvVCZx8dss6uH7LObhCyzm4Ycm7A
cw2km/eIWXOz3gqdjZZFW1Nm7lbqXrQsWnvP6Jq2uzT3CfIPjdosZM19Ysia
+yT511x1/GuhOv61VL3Q3C1D1tynhKy5Tw1Zc58WsuamXuhUdF6hU/+v96LX
yVNGSWujXc8zPLaM7kajnhuy5j4vZM3dKmTNTb3Q92fIbzRca/ndRnX8bqt6
obnbhqy524WsuS8KWXNTbyoOZ2qMWqtvdDa88B8dida6VX6jRzqErLk7hqy5
O4WsuS8PWXNfEbLm7hyy5r5Sfl+lOn53VR2/u6leaO5uIWvuq0PW3NeErLmv
DVlzU0eXok/RqeQQVaLrcPxGl3YPWXPfELLmvjFkzX1TyJr75pA19y0ha27q
VaP32z7k/OE2+X276vh9h+r4fafqhea+M2TNTR2dfbf4dJC/cCne/V/qGvr0
npB1dp+QdXbfkHX2vSHr7PtC1tn3h6yzHwhZZz8ov/upjt8Pq47f/VUvdHb/
kHU2dfT1o+IzTtp6gHxFiz4u3weqXmjQ18RhkH4rtPWTIWvrp0LW1k+HrK2f
ka/oz2dDzlGfk68vqF5o90Hye7B+Q0cPEYebo+vpl+Qr+vPlkPX00JD19Csh
6+lXxX+I2i1yod4ha2t4oqfQJJ+GrKeHh6yn3wxZT48IWU+PlK+jVKePt1VH
R7+tvm+Nrqffld9j1Gehp8eErKffC1lPvx+ynv5Avo5THd/Hq17kBm+EnBsM
C1lPfxiynp4Ysp6eFLKeniy/p6hOTjBFfG6Prqc/CVm7j5ffUzV2hZ6eGrKe
/jxkPT0tZD09PWQ9PSNkPf1FyPkAfRRnQ41D1tast8HmywtmB8asp2eHrKfn
hKynqe8fvYyuvjO6tv5W840mnSsO81SHw3zVC209P2RtvSBkbb0wZG39fcja
elHI2voH+b1E9UKPoucKPfp7yNp6acjaelnI2pr6AdHL38hvtOgK+b1Sdfxe
pfos9bdEfqPlVoesrX8JWVuvCVlbrw1ZW68LWVuvD1lbUy9ygx81RqvVd6Gt
4VY3+lksGrhGdH36k/xGW28OWVv/EbK23hKytt6qtv9SHb//Vh2/t6leaOtt
IWvrf0LW1iFmbR1j1tYpZm1NHb/J86kvIheTxi3yBLgdjI7mWcbT8OLo1w6J
fraN9t6Etpf+Pjz6eTba+zBp7B2Czp6j62TaRcfT9/dmH0fPJY6Qft4luO7d
VfoZQ0ujdTfDTXr3aGnOGsH13m7S57Wjtw+HIkclRiYp/qijSdB+6Kg/GBdp
qcZ6d59j129AJ6reLLi2Qh82kc5CpzwYvc55YVNhh+DPVZUGuJF+VH9Y93E+
d7yQ9yy/76v3Ou8wyj0Nm0U//0JbnBh9nX+ssayj8TxNY8e4XWjYInoMfmg2
IXqe2lxIPD6vei3tLyDxyXO1NW4vGg5R/aToa5L1SCwcpHh42bCl4mGBkOuv
GbZRjCwTFnHCt4/tg3+/OFxxcrL8Zb2g59Hnda3cK/q6KtZUC/lGLBxZJh74
pnCA5r++YuCs6G3RDu2h9Ys5P6bMvDfSXJ+ruT9H83ys5vrd6Nq6mOMmmvcq
ig3md7ThQ2XmtalioKrmnTk9Tn40VVyTHxLXnAc20/w+F32Omd/9Ne6MOWN/
ssbnEsN2qn9gdn6ZuWyu+d1PsUVcXWp4gcbuYM0Xc/hq9G9RrFnWKd+WdlYc
8U0IH0dE/2ZTrDW+AzHGxCZns8RncbaIpngn+jcA1tGtFghHJY9N3nHkiaxR
vmd1jL4n9DW8SnP3heGM6LnrdF2vETxXJWffSfeQ31ZRzLRT3DDGreRXc41J
TXGGOzHc1qy1uBOPxCf715fqk9y0pe4rr/67yLcl0XP4ilrX/aLPLfHyQPRY
YB94V/HxuNmY6GeMrPfRigm+u7HXsU6vVJtV1P7i6GcEM4Tk7pdHz/OJc3Jw
yuTdvaP/Vnxfo7yXlXtqbFlfcL1IXLjWQdfvjr6HV9BY9pEPrKfeapP11Ffc
WTf3RV835PL3Rj9b+C66XkJffBNd/6FdZ0XP98mhr4+er7LWyP8ok+vdH/03
rk9W+fjg640cnL2W9XFP9LU+1+xb9ceY9dJcMId3iwv73qWa8/bRz4XYizao
zPnPXfqN6xNV5lvt1RoLeD1l+F70s+KZig/4sG/11BjiD3oRrTsv+ligtyYI
5+o6Ogw9yX55l/pl77lf3GdqTGtq7b8fff2zP7O2ieXXzd6Ivl7IFwYorhjv
pzXmzCd7MesbTYiuZQ95TM/8P0eK/h2Ca0WdMufhT4nvAMUu7Q/Rs5TZS/pH
39t66lneUYzrUI0t+csT0XOuV3S9pDJ7DfvMS9HfK6xH3jvoW/Yt9mD2X/be
5TZIPyXfT4cZnpV8/DjDf068mJ9n5fOz+o3yBeqjtuqMA9r+I/W7g37jvYY+
eEbP0ib+viI/WbtPijs4SOWBKtP2GsNfoueZrEvO4Fib46PnnwMU/8Q3cT9K
ZeL8bdUpjzR8K/pex54zUmV+5769yjzP2nlTfbHeQeqVhSNUhutH4sl+wxkl
OoFzRcq7a2+ZJN/Zmxhv3m+srWHR37sdFX/EXsGfuHhbZcaBNcRaukz+viOf
WQvoD3KQYm1Qnq0xe1z+TxKXoWqnpLFlDHsFR8aU72U11Q7r66voew37BWXO
7zhjvC362mBt8j6bKv/hwruHfRCNi9Y9Qu1/pr5W6TqagX2Y900Vvbs43+T9
xbuC39ifyXe/VV+76R7mDpxeZk4p00axv9NmM/VbXW3MVTsd5DPvux76jTya
s4HZGjd8YF9i3+gu/owDewl7yjX6fabu4bk50WOSsWG/xvevVWYP6Sa+Xcs8
X0vrmmdvkn2t+4vnyfWnamwZZ85aOWNF75AP8W2AvZozebRgOfFiz/xEewjn
+ElxwnXeKeyd7KHFtXm6nxwErcmezzeHxWqfPXChri9Qmf2Q+CfH4J3L3C7S
/HK2z/Poz8Vqi7P5CvIHP+erLXy7XXPUQ/O4WPcXGpecZ2P0903x7QGkH35b
qmsbVS6n/pfrOmNOPNeTP0vEC//RDazbzrpO/2hnNPQu+o1vD0XOtEJ8V+hZ
yst1f3m9Y+mLd/QsxQ/9jlWMESd8N+F7CfqL3AitfI7ik+u8B8n5+Ful4t6t
us7fUfyu+zkj5Zy3vdYR3wwOCL53cmbK+RxIvZd8+EXXwTW6vk798K5pJH/2
ktEXeyN54Wa1z/2b5M8t0eOYuJ2jMhyJfWK4WMfgaN3DOBTxDhLn3eUrurqi
Yot99Sj1y957mWKgnOZ/g3zeoPgop7WwUXFyqPzkvUN8sn7Yl5ZZ0C1NrivH
aRzGiutvZfjyd058k7nF7m2VXMtfbXhi8r1loeFxyfVbI8O5yTUc7WxTW3+r
zHxVUZ1yE63nIndhXdfVOlolX++y9i5Nnh8UbTHXJ9u1v5JrgpYsoJLrle+s
fGzyPbih4bfJNeiv4sE7lO84lMkbKuu34m+6ftX8Ml7rNLZbVd5e63qt4na9
4o12Vspn/J9tfdZPri1PMvwzue5pYfhPcj10puHQ5Bp6luGRyef8T405Psy3
azsnXzvofvJEcsfr7dpw6ZZphuVKvn/MsPL2Jd/bkuEpyfXLdlbeO/n+9oDh
oSXXWQ9ZeZ/k782uxELyvKuC/V6+5DqxZFgl+btjP8PK+vvDfey/qiV/l+9r
2CP5e/a/9JlcO79jWK3kWuAlK7+cPKd6Gt+Ta+rqyZ/n2fOt/ELyvWdHu7ZT
yTVcB7vWoKTc3cqNS+5nZys3KnmetIth05JrE8ZmmManC/GYPN++0rB2ycuH
G9YpuSZ+zK4/nzynqWR4TMn3gIpWblhyTb0DMVjytbgduWfJc5rDrfxl8j34
Quax5Dkuz3VM/izxW7/kMcwaqlfydfSqlV9J/m4ZRbyUXO/sYbh7yc85Btr1
Qclz9OnJ55u5HkBMJc/jabu81shWwz+Sa224dhH3S2ij5Fpwk5Wbaf1Wt2v7
l1wXjrdr45K/5xmDK5KPQ10rn5t8L2EMLk4+DnsybyXXcIxH2+RjMtHww6Rv
nmDy3JfYuSF5/DCHXRVvuxrWSJ6fnWdYpeQ5yQgrD0meszBmUfvPW4ZVk59V
jDR8MflZBrFQOXk8/G74a/KchNjZKXn8vJ48zoixtYbHJz/P+CH5fDNfrLn9
te6Yz1LyOf0m+dzD8Q3aVsz0N3wkeX6wt93fJrm+rWnle5LrcF7yjCNjeEDy
37i+wso/J8/5pxjWSn6eN5l7kp8RnpDcV/zsY9g7+TnIBMat5HnA51aemlyf
LjZckvzsgPV9oNb4WMMPkuejYwxHJz8n2GzYLblmXGd4VfKc7BBr+5fkudlq
w1XJzxu4tkbX+3Et+ZkI+2775Hsv83y25vomOCWdBxnOS36O1jj5fs39xMsC
xcwTyeeVOf3ecFHyMwLmc6Pm9A7WQfLzo56GTZKfyfFe2qTYZk9ql3xv2UDs
lDwnrZZ872NM2BdrJ98bPwWTv8+/SL6fspfWS75Hsz9XtDYOSZ5vn558fbI2
2b9b6x762ZK8r7qGM5PrKMZ4vcaZPfi35PtwMvwq+Xkre8lhyfcTnjtCzxJT
gxVX2wybJ88d+yZfP6yd05LvC+wJcwy/Tn7GQQx2UhzeRzyU/F3yZvI1xvr6
H4sHkkk=
          "]], PolygonBox[CompressedData["
1:eJwllnmwT2UYx8/7HLmWtLi4ubr3uleEdKWyZEspS7Im2UqIMUmSiBHJWkKW
BpUtZGsqcUOlfZ+mP9qnhfZ9mpqWaU+fb98ZH/fznnN+Z3ne53net3zM5EHX
RpZl26Aa1GZwC/RLWXY2NMcfhlH4HJiGT4eWeAHXH59n2XWMezDeBlPwFjA0
+dhsfA6ciZdz/af457CEcUOogd8MFydf8zT+DFyPF0EXfBx0wAdAS3wnNMdr
w+n4LjgNrwNHYTfjS/nLv+xUfDI007PgZfwlmIHPhAvwf2ANvlbP43sGM67D
bw8zLsa3wjB8JPyInwsleDe4L/wM3Xs49MQT97gHXw8vMH4epuHT9U74jdAr
OYY5PhMu0rfAWHwB9Mf3QSt8L4zG58I3+HewDG8ETfBC6IJPhQq8LnRKjuEa
fC10xxvDrXg9fQM+CFbjd8L5eBlMwiP3ux/QHDB+JRyrKmJyDf5vOFb74WR8
OQzGL4dCfTvjy/CdsBHfEJ4LzUkD/MVwLLZmfne9k95F37AIX6j349w5jJ/F
nwt/WzE05f7jw+cGwlXhHFFutIc2+JBwLHtDR/zKcC73hc74E8oJxQKacb/F
4XtVwSblUji3lFOK3Z7w3CuG2/B1UJ6cE+3wAzABXwhL8NtgbuYY19e78oxD
+CqOrVCuh3NF8diMV4Zzt1I1h++Dsfh85QS/Xcr4EvxRWIarYCuSjx3BP4T6
+GLoj98APfEdcBb+NpyBnwBDw8/QvXWsSrWpmsfHQTX8TZiHt4a38DfCv9Wx
pvhrMBt/h+/5AH8fWuNTdAyvDkWMFzA+BX8VZqkWOFad7zkmt+seZZw7BJOS
77Eev1s9ITmHmoVzTLk1RPmeu0ZUG3uV07l7jHrLHtUL4wcYn4cfhM/Cc6y5
Vc85Gs5x5fY6+Fb1y/lHkmtKtdpdNZFcsxPUazi/HO8Kf4VrQLm/GgaEa1S1
2QJq5J4zzdVG1SheyvkGmee0nHFjxl0z5+DjeHtYlByDL8M9Ur3xdvg6XAPK
/aWwRb0iXMuq2U74R9AuOQdGh3Ncua1jdfDD4dxoCyfiHytHk3vqJ+Geq16r
Y93w38K9rVQ5w/uWMObP/2vAH/ifsApfmTl2X4TfVTE8iLcNz/3VyifO57l7
h3KgnHNPhXNFNT4iXEOqnTbwu3pROLZ6xvfhnqdepzn4Ff8l/OwVmhP8h/Dc
qCer930VjpV64E/4z+FrVZOqxYnhb1NNdmTcKJzLTzLupfrPnTsbYEw455Rr
mjP1atWIakM9+wrNfbi3VGZeOxVzxVprqHrFXeHcVc/oh9flftuTY1rAfzVz
50oT6KPfM96Cb4V7GfcO92bldE38MZiIV2TuBfoGvbt6wjDGJaqB5Jybxbgg
HNs+ybW1A0Yk19hw/KbwuQfVk8JroNa+4+B1fWvYW6kHhedYc6t3eA/vAIXq
Nclrea2wa02fr94R7s1a00Zprrj/keTfqFfsh/HJPePd8Dfq21QTWuvr5V5L
tOZPZZyFa0097o5wzBQrrUFayy8M17bWdK31PTQHyWt+Z+7VCQqSY3wsXgs2
4Zuhdu450Vzo2N/hHq7erZ5QxrmR4V7zUHKsFUPFTjHXpGqN09qmZ2ovoJxS
LmlPoLWiNPdvtWb0VWxz7620R9HeaWV4bdAeSnuFCMdeewbtTWaE1zbtUYpy
78m0F9utGgz3dPVyxVR7h/pcsyt5D9EAHxi+VseKGZ+Ue+25P3ktaJjbtSZs
D+/xtLdTzih3tcZobVEOay5VA8p9zel/sXkOPw==
          "]]}]}, {}, {}, {}, {}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJwl1HmclVMYB/B31mqaxiiaiswko5ImUkhJIUREJFFapCjNEMkaWqxZWyyh
hRZLCtmlmkqJIhQhu4oWlWVaZvF9Pv743t85z7ud+57n3kYDSroXpyRJ0tNH
FTF+JjVJnuVRmnEd13JAWpLMkrN5iqeZQh31g5hjfBRraM5ULuQFWvApRUyj
J/Vc04D6tDJfwBu8SSbracPbvMO71OArTuA93iefbL7hWz5gEY1izYzjbgZz
hGcNkoXyHnmk/EX+ys9s4jeaqP8ht/I729lGU/Wr5J90YAensJMhlNGRf+nE
UNq65mBZzmksYzkfUpfE8TPkClbyEXmkqaezyvjjWHu8MzLUMvnEeHV8F+rz
AIdwkmPF8kHGx7s3r04NqlGTLLKZZsMLKbOMPexlH/spp4JKqojmSCGVNNLJ
IJPplFKNdu7bnlqc4/kP8xCHxvvmSZ7geZ6jAfN5nMlM4mxmMI+JTOAxujCd
V5jL0Z7RnLOMU+SZMlUOk1V0poLTqeQa9nMqe9jH3uhb1/wt/2EXf7GbZur3
yfu5mhOj1+W91KExSyllC5upzeEsYTE/8SMHRt+6/kp5MgM53jxXjmEsV8Q9
1QbI0XEf44LoZblQtqc/bcxz5A+04zu+ZyO1uIuatHZev+gJ7uTy6Fu1vtGX
fB3fiQ1kcQfVOc45feQobqfAvLfMl4fxVqydy2gVfSVv5TYupaFaL3lL7Htc
E70pX481cQnHmmfIdfE8PudLviCdm0njGOddHOdzExfF+1PrEcf4jJasjb1n
ZPRC1JzTXd7ICPLML5B14/fIa9E/nE+ReSKv5wa6xT6qnSeHx94ZN5S58lXZ
lBzjc+VLvEwJTZhJVx7hxdT//1f/A2ffmQ4=
       "]]}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.757159942285576*^9, 3.757159957188558*^9}, 
   3.757160035709195*^9, 3.757401307295856*^9, {3.757419156562833*^9, 
   3.757419195272182*^9}, 3.757419325322102*^9, 3.7574193687921143`*^9, 
   3.757419662631242*^9, 3.757420000764819*^9, 3.757420287549108*^9, 
   3.757420852255309*^9, 3.757975947421156*^9, 3.7579760017248096`*^9, 
   3.757976032081855*^9, 3.7598517149334717`*^9, 3.759851755764114*^9, 
   3.759852483510478*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvXd0Z1eV7/lDVVIFGzAGE5rQNKEZupvY0HSa5q2efjNr5nVPXtDdwCPT
GLAJTkRjGzAYG2fjiHMO5YqSSiWVVFKplENlqaTKVSpVOedU5Tvns8O5597f
lWH+mLdGa1XQ/Z3fveees88+e3/33t/zL188/etfPeWLp5/85S++83/63he/
8/WTv3zaO//Hb38vXJr3qlrtVV+v1WqPvbPG/7PwX/tLfk7mL/ul4v/3yT/z
shdeeCF74okn5Le24kc7duzIbrrppvSj2+Wf4+QbQ0ND2fbt27MDBw5kjzzy
SPbss89mmzdvzjZs2JBdfPHF2cjISDYxMVFbYLd76qmn5Jb89m75e372/PPP
Z+Pj49nAwEB2+PDh1yWd2rp1a/byyy/XTtcn3yb/vDp78cUXswsvvFA6dscd
d2Tf/e535UmrV6/Ofvazn2U9PT3Zd77zHfn8oosu4nqtyW576623Zq2trfLb
u+TvJh6R/e53v8vOO++87Prrr89+8pOf0MsT7CsvvfRS9tvf/jYbHBz0ntws
/7wu279/fzYzMyODSq94enNzc7Zz587s3HPPzSYnJ7P7778/W7dunVxjTPg5
ePBg9vOf/5yXDCPAvRbLGJ5zzjnZ008/Lfd97LHHYtuHH35Y/n/o0KEGfqmd
wH/l0qOPPipf5Ycp2bdvX/x/6HE2NjaWPfPMM3KN227atIlxbZCnvkGaP/74
4/IxM8jb7NmzR4aen6NHj8osb9myJZuens5uuOGG7Pbbb5fpYeY3btwot+Sz
MALzTDi47ezsbOY/TPzU1JQMNT989YILLuArtdN0TFXITsyOHTuW/eIXv8jO
PPNMGQt+kJm77rpLnn7WWWfJrR588EEZV/5/9dVXx8cwhkEOdVg/kS1dujS7
+WaZsOzyyy+Xr/BzzTXXyFTxg6CsWLEiW7VqlUt7tmbNmnhbxPmyyy6TsWba
uA+/M52MM/9nUK644grpPj981tvbK/9va2sTwWKQLrnkktimu7s7O/vss+X7
p512mvSTef36178uQ/CrX/0q+/GPfyzC7uKAmHHt0ksvrekkLshaWlqyr33t
aywfacPk0M8gfuXRZYX+9Kc/lXWxZMkSaX7vvffKUDApP/jBD2REWQ9ILvP+
7W9/W8Ro2bJlMmyh+zq6f59dddVVMlL88H+WHj+8rS0zWXLcnl7yf346Ojqy
6667Tv7f398vt+Xz3/zmN3KNEeINurq65DNGKrxxfENGrK+vT/7f3t4ugsFb
M1IPPfSQKBVGCfHk55ZbbpE2iDcC9Nxzz8l1RJ+RRrhsgWWnn366fBdh8nf5
5je/ST91wOeJAKxdu1Z++146wPNlLXLHXbt2cZcGlkFYEHTgyiuvFB3FakY7
/PrXv5Z1hojy+Z133imLu1Fu9Xp5YR9Qvuuiy4twH35uu+02EVsGz8Wcnvng
olWvvfbaICpBU2r33ywfIu/IN4rz7rvvjrLKQ31k01mig1xnSX7/+9+P8kin
EBYf2TBq+pjj5JbIGj+dnZ30Q5YFk4Icnn/++bJswq1rPrJ0yZZlcWQbs+Hh
4SgfiGbQyTZU8+SVWaX8tkj+/pDIjcsg8sLKdhmhK8gIMksbhhPFgVw88MAD
2Q9/+EN5U67TJeSQ7YHPn3zySdki0K58nxGkb0wFP7wi/2ffYNRuvPFGuU7/
2K64zr34PvqQviBjyQjacLw227ZtmyxJ1gPvwzAiLixdliY6FEljmHk3ftAw
Yb0UV36TTCbd4QelxfIKK32+jSBPYETSEWRkEDZ+GD3eGtnmaYwKt0AW2DCY
AUYNof7Rj34kOya9O+OMM6TX9M6/wzbJqHCNmWEkWG20Z4QRdtQ/v3N/X8Vs
UFxjBNmUGEUUGc9lBfsIhv0ujiDyiR5lD2TRsQ2j4Pge2ghJQqcy+3zGGPB+
4Z3KI0gXzU6SH5ZAuHaCiTu7Az2ilzRDThgZrjO6/N/0V+gds3ySbO6+k9N7
dmjfI9l6+Q57qV9jblnSrhJQ2cgg8knbI0eO2Ju/Tr6PosII4Qe1QxvvG89G
1/Evr4KsMeroU9qFkQz3CvMR5IERwczCuOOHnY5dbXR0VDRGeD8frWYTqJUr
V2bLly+X394gfy+U10ChsGT4QXMhl2iucM1XM7rJ1et8k0isCeYW+fnlL38p
PWLOeUvaBtmyN18o8+ormB/eCNljxII5enqxo0iTz8tJ8vcCGSNbDSKRPvXh
WtQ5XLcnWC8bpTfsP/SWe4bvWK+aZMx9T+GH7wbZcM3HYgjThzjUztAeSrPf
Y8T/f/H/f7UuIY1MT5j1oA10ZHhDpACDgDXI2uX3cL324WRkwjiLVHzYxgcp
Rw9gLIa2fpmlyCNY4uHyB+0OrEiMPqTPB4jVyUyG62bO1z5tw757925ROigV
tu6wUdU+mHSYZYlRhbJh4ZvyiR1mCSAwQRTsRRtlCXANBYjQhW3BPmsScwTF
hKBxbzbQINsfMFllxSOfbpejqWnOY7ll2PRNiuwNmmRj8A2EYeWJQdh8PBgL
vsmLfdhejBH1r6FtTznlFNkXmIkP2m15IlssP7wke0mQww/YLdzW5n34YcJZ
ZMEsqvnLoBroDV/nhzH0bRUVEMaz/DJoBLcn0GrYuOE2H7I5R2mhaFjmYdR8
ongA78D+i+L43ve+J3smUuQdRoGww2D884NuxHIOOrfQBp3IfZAjrBZ2HCZc
2ywuvBTt+Zxu8cNY0+Mw/POL78WTXfuyuhG1oFVdivbu3SujF7acKEXYZZhH
TBZbTD452lEUOlvkPffcI51A2nB5P5hIIS/Io0499VSWnX22WJQJL8EQ86Lu
cfLDYkEEw7ZXegnmjxXHDz3mVYOaconBmnDbzkcu3Nz7w2pC+aOxeR4K0d8V
FcvEsMzZdpkU/ww7FkljvSOsQXXbZBwn9h4SyOe8C+PCvX3bx0bmXVidpZfB
PnPvCDeG/S7Ii78MPeJpbMn0jNEKd3FBZA4ZfIQxSIevbjZTWrKMEUDmKOqm
RrkROxD7AesryFqUK6Se6QJ+cGAAsx4bD18DOy8ojcJ6aZSdhm2RAUA9hWUY
B44lyRvSIT4PuqT2ERM4PCeMaCTb27ObseJpi8ChMfwzLACmn3thE4W5NmFa
JL4p33Gvnd4ymtyff3PHJG4PaA9uyeO9SzyeDRDF/Zd2jY3PDJiocRlb2wzj
Nd88kSlXcrThuv9wf57JOrJN4B380yArgJ//Wa++3W6AIPK+/HGzAwENs1Cb
Zw9235zfpMEn9R5vk38WyuJFcyKIKGfsYCQO/R6sJr8NMsv2Vr7NG5O1jBHP
4/gT/h82N2ClRpli/2HaWOduaNB1M7xil5kett7geIRnhb//ir9exbVXoQRe
lT56oSwARoJlyB/+T3fw3cMC8S0W98o8ztr8V3g6g4AOCYMW3oC/54nKxhDj
t8V2DVeFwU6vsUXx+PQaS2r9+vWFaxjm5Wv33XefrMj0GsuehVBux+ik19ij
6Xd6DQMSoUivodkwa9Nr+E1glOk1HKLyNdSBoWGFa4wfvx2XPMMQtdiOXQIT
PL3GblB1ja2q3BcMrnI7doPyNba39BqSiFYu95kFwW/z+ftVNHkV4/WqdGmo
AkY9+A/uWVCC80yE0LBYg2iRMAguU4w5O1QmrpBeM/dFflts17Dr0AjpNb5n
eGi8xlybsRWv0X/byOI13t2R7vQaGiq9hhovP4PxNSC1cA0kI73GrmXwUrzG
KLm2S9uZyx6vIU+mxwrX0HqZ7JV6DavCnXVvh0FuwGLhmmveV7rGDlz1Xft5
xWuslfI1/Dq/JlrsVbiDJdHhZmzrjjxgwIfJcNHBxmRDwkUNijcVHQ8hvN+u
oRIQH37zjQgVY3tZvIZL6iLxUbuG2vJp9XYAnT4Nfg1V5sNmrxTs19IrMe/u
X2B7sDIiKq6hDqbuy1/+8u97JX53yfcusOoNq4/XEng/vhIz4tLxkeQZto/G
a4BWc77S263PbNQY6pj6QYQ9jsKQ+/DOS57Bis18//uE3jRIg930A0kP2QeC
UtGWH7cPWFBYncFmqlV8h/0FPLXwHewsFntQ+uXvpHom7VEujGlLn4O0ZT4g
acs//C1xQnBYCz1mIg0NrHpLdsygOIvfwQbhVf4bvuV/s/Fgi0PlzjEe2OMA
W4XvIHz4Kv+/nHVsF4IvvpozdD8G5kMP6bcXJW+OkTPHm6PEghaovU+uLeD7
WXAxs+xd78qy178+y9761iz77GezcB+9rwda2XfRiHOMjhu7f+r9C+Zh9slP
0gy7L/wdrr3tbUAR+RsvKI+iqojjxbhEPWBMOj7Kw80WFl2EVYn6Dbt0ldqL
Hfn+9zMBo0IXGr0jdMzUmdyvqTxJqn5fI+oXHx1vC9WLCmbr5OEe4QEtwUjB
pAO6CfvBvIoOvTeduXe/W7rSIH83ZS+/6lXeSf3TED6xXXBBdd+aZLvHQUDh
MiCgOWEaGsTbbxJrAx/fwWAglLADVqlW7dpx+PgqBNaNTe/5aHbWKddmd//n
L2Zb3vXh7OlFx+tny5cWJjAXWe8bpjxOvf8wPkE/OXCJdchO7GFk1nAYPt/V
fFmzgoP+fo9cfrXKFDJk3Wv7xL9k//cFXdm/nr8m+6/nrspOOf327OJ//XHW
dseabPrAY9kLLx7VbmrnGqNWYD8oaQfvOJsp/r3/4L90d3d7x9Gz4Bdmoske
HkzgtOOIBiBSGH8d1xOy7HOfi53e/sd/kX3+nJXZD0++Mrvosz/Nvvft67Ov
/uj+7FM/bc4+f96q7HuXrc2ufXA86x7fn+0//GSwZV4+at3HluXOOPD8G3RC
ufuAHoy1/yAfoVPefSYcdMasU0EbgxeTykRxIQdZCPtn9o53SN+fWbA4O/X0
W7MzT702u+6/fD278V++ka24YUV2Y8vW7KI7BqXvvMO//nh59qWft2Q/vqYn
u3P1tmxo26HsocefqR3Tyag33NhwEV8mCBsCuQ06wLvt9j5YLS9vnnPVKlO9
9kZdPf/0T1k2f3529lcuzr55xh1Z6//6lWzt9Q9mbcN7s+Xrd2TNfTuzjuHd
2brRfdl9HRPZ+Tf3ZV/7VWv2bz9Zkf3b2Suyr/2yNfvZjRuyJZ2T2abpI9mT
z6hxXWXUOBoFCBJ8QkfvGU0u0XsDJyuNm//OVyBm+cbx7HfXrwlSsiK7Y+lI
1jqyL1uybjK7edWm7HcrxrPmDdPZurG9QXmsG9sXlOVN4fqVD4xkVy8Zy355
S1/2jV+vCa+wPPtskLJvXLgm+02Ymda+Xdnk3kez51946Znymn2H9QeZdiPP
gQLcCTcGXcsi5LjIpOH8mVx7a9az6aDM+iX3DmdLu3dkPRv3Z+v5s+lA1jqw
K+sc2ZMNbz8kw8j1DZsPhqEPu8na7dm9Hduy1v5d2RX3jWTn/a43+49frc4+
9aNluhouXZtdtzSshrH92d7ZJ4LBeaz2mPUD7AR5v/3226t2OmYEvFC7+MfZ
5p0PZZ8LWuLs63uyFeunwgLbxzBmg9tmsvEdh6Vbrf075V/v/prB3dmynh1Z
S9+0XOsJ3xnaPiOveE/79uxXt/Zlp1/emX3xZ81R6L9/1brslubNWf+Wmezw
o8+EKc9qD1m/sL9LK7dqE9Uuvyt77MnnZAbPvLJTRnBV71R2w/Lx8O90tn6c
7uxHBrIlXRPZNQ+OZre2bJIu0/Wu0b3ZA50T2W+XjMgo8/0Nmw/Ia9/Tvi27
8I7+7PL7hrKfBwE/9eL27HNBWniFr57fmp1zQ68sCIbl8aeeP1JetlXGzp+Z
1sD6/8Fv14V+t0lfVgZpfTBIL31cHSSBPrQP7ZYpoH8PhOvMPteZiv4tB+U6
n8f2QVKWdk9m94frq0T692UDWw/KfW9YvjEs0t7su0FS/j0sWqT+6xe0ZRfe
PhCmDal/JHv2+Zdmygu36h3+XP5+f3bp3cMyHjet3BjGbW/WEsSCPi8PfWKM
6ctYGJveIN30lzFtCcpkQ/h9ZGJWxn7j1OFsdXgvViefjUwcyrpCv8d3zMq7
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
tXgWevlUrLV2gqGfwhS64qdiOSnSTVZYZW9Q6Omo1mphRjobTd6LJjsVa59w
b8jZQqrhmwod2KsfG6JXPhR7XMknbm3ZJFJl52bXyqd/0Qs5/auuF8kJYRaR
aDEfp3w+N21g5KP8sTQWcm4XjLsrNsahKo0Fk7xcWGI2hxHdUeqFHWQ2tleU
2XUSqOBkaFosFCUFhTKzbjMpB38Q9Lni3hGXWTI7KcJeunRplFnhzJFPOIWU
9GbgdojNbr31Vg6YFI07MTFRBfyo0J4g55yQzU/fxY4Y2RvpPayURIJmSKJT
YXf7ofNTRfLe4fSc+XJ0c14s3lfkNqxxco62lts5Dcg++YPKEG2ggfpiOYzX
59jGVggkulfbZSvK6kmkTRq3dAbfdVbHYzTBOXXJwvQASxFId/gqSIdpxrbr
s2mR0dgrNvh4UlN/FWVIThPPH0xdZsVmpJaEdpsK4dZX6DaziFvSYdZCRbdR
Fz225tMu5bTLSooWo6H9Oy0aeiS/1QlyZ09L7bSSBubBMwO6RvbGzdVh/rOu
XBf+dGVHjx2rY/vwg98RcU6HuPfee6XAsr29vRK7+YSB9LzSZ85eKQzFDBLa
RM+dm1bS3olDsSDSKYIdpLcDnmrOb+fuJfcM8q+1dvNSmKby7Cb3vJ2VeKSA
jVbzBJfYDWopau+uZw6KVvJ2eLWWViZJN6qATKeQTrzPSiAT69YoAlMmgzSb
xp2vFBs1FLtM3uG1iCUCg5S8w+HLFHop1CYXPcvqI6pyAmP56mSBqKBIYOwN
HcmLmOj2EiaaYJdTxTpRp2HQtieUAExXokoCCFyN0HsaGYYMj4KMmKjS4Uef
qVsEpuaJuFKk1dLSIr4j5+eRMwbTDUcxHj16tMp9/ITh+4899by4jlCxYSKR
qGb2cVXeZYTeHGBPEJfoNxdpN9SZY6twrNEdpBKUGZGpiABvUHL4MplFEcuc
zRP+B3Z5+/R4MyGjigQDBa6LqsTLPDTgbxZzeYusG3n1c4tx3Y3PkcvsHc2z
0SLjwNwExVaumCSkjc1NUByrUjdUnOE+r4TEqA5xOtqEY7eWHkKTkwxESvkq
8g1/N3E7CkmaNmx/VIlkzg2SltKay/mkeQShjGQq7HOcXOLlxKS2BAbGyjnr
z71hvZjjW3c97ERSuX9q7IGUKFMLhjtAWk5wANKKgKJ3erxUBEB3D0bKJoah
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
NurQWJwvCXe1lZ6dUx+D45KYCklBcWxenSO2YWbgA+YtQU8imh4+x3gGjv3m
hW3BwtgQhQrlWErN+ECiI43d3eRtkex64ECQsTsd9bBhPAxLy4ad8VRmDRnv
Ev5eJ24Ia7QhE9ZyBc1YKO1DSjyL9BgsJypnfgIB0o4x5hleCjE6WQ8Bsg4B
Gj2uW4YJQRednLceMl0gOoLt6H6jQkjblPtDf73ffiJ1Y6kNQifo/LCCp2kb
+sf7st7iibilPjtAs8zYcvs2l/uj56pJDNs45Lyi3cax3G3SC/y0uOFSl4x0
U7rkCWpltHXUKrKWWbe769BWI/A1bl7fbIrT2hSf5fiy4WZubq80GPWsq7qy
b1/SkT317Iu1vzDJ9BOtEtczFVo3cz9pMP3e2SfkJGb4f7buekh6fmtYC+4Q
64kAh2NEnUCiowyD25Ich3pUb5010fqW6ciglcbqoxGseCLTE2xQSUlKkZg0
Uc8M7ZRmV+kf1KRw+uXxEhUvt/ctJkVe0h4LbBSur9+Y87uVAEbxG0f2xMd6
1D7PXJqXJTy8NU8YTHzJWhms9G51W5VZEaxMvMDREiyad0eM+ySjQW2ApM2w
drkMpaTmuMOUI84vkPt9aTNHKD2Q0xWThqzZ8dIsR7Y13V0GxFBZxvTiuwZF
8HbNPP7BstE6t8C+MXvhRS0LgEldwitG6CAnBhu42l6Ir+eIh5uDThDghNMl
/MlRRVU4moIaXbzJKt6I3PF3Dgq7VpjHCpijjCc6B5870wkWU6CMcKfO4Y0k
TzvNx0uhRM1YU2lMkuPqGGodxlDMPoc2xubEEpNzqkfqmX9zPogj0RQtofe1
Auq6ve5Ux7lIIYbtkCCHJctEHQ4kpplDabnnXECi+BVJhquJd1rPnNfhHom+
XcyJi904voBojCX1xY68MjK/W75RDNUwqv8vlsJb9dSl69ZnXz2/VQwsyRqw
c3gxmS6/b9hraSMqUA/+FeW2X1H2+FkZ/HOMwg/FTuG6OcA/P2Fn7UgJq8jp
Ph2rMHGvSpl2WIwF2S0VHbv/n+auPjivqsy/pHmT0ILVKf6zI4vOLosozMgf
O+swu1IV/1GH2f2DxcEZRQexjrLUbpexfLZUEbFQZ8uAXdtqd7dgKQPSVtM2
XyRpmyZt8iZtaE2gCV81tEhZpXSQCsfzez7Oec65900yq7tjZpK877nn3vvc
c59zznN+53l+j04F9WhxbYQ8NhpyAt+EFvd8KlIHFkUucogsMj6YiHmb+DD4
bRahSJpOhxSbsGkam0oBwEHAcba/WndzTeFW4HcpBwAljeZBzlT7VITpcwAw
lTY4sL4oWy+Q+a8KrA9WsU10QziWQ4ApUJ8mcSuD3THSQUERVP7T9qfJeQMx
CY91/rIybY9BMhl8W0h/5yMrofv8Hdtd14HnA1AFDnbaaRPyR6vVZYS3qibW
pBmOhLcWuQpzzd441wyPF6kcIqKeYImWykEtIAx36qlVxnpr4XS7j2IRPTuO
BSXOeHkVG0+AODvZyAwyPF7kcNDHUWBctbeMwyH4s1kQvS7Ap8P40eAsmwGf
DJrHzGCKJElnMM7qOtHwsL3v6UhhUY+6QWcbaOw+geWK1A2RwkL3zhVBLMJ9
3CvVGtGZRuWV9BWG9+u5gKoCYABZyapNA9oDykERuH0CFNEeAJYnBAhsbj9C
5pICdQriqZteq/BqKYWAxt/ZDBm6JtgnjcBknQZUknlFR6feYVunKfhr7lJX
Bda9Jr3EeOrvq6HdUZSW4IGphAMQQ0njAuakqFvsjBpGf+BIlNg6XqrxaBhs
IzI3HiMHugS3Eli6kWcjtvsC5Eb8DL9K6ogjp1pvARQeTx5e0XbK0ysSW7xx
5BmTgtASMoxNlUj8UtgDA7Gn0FGHdhT3S7hMasIxtLfs0HK19wT6sc7ByLPX
JUvzThlDlYO3S0xUaAAShcMtwRvvslfK6Ar2Z+qgK/DFOXPmjChuizs8+WuC
Ae/e2BcIDfuFx86vhxskOl8Xm+q6KGQDVTSAzLMaFo1o7y7OtcSHm+lsXJgZ
BMYIsEOLMQGt1Bk9Ri2o/Anag/qyOnuEYwHXAEIlkoQ6OIeS/Zio/4GkTsq2
AG9LvI598jQNIhWGBcA2QN/keOEeKgeGDVqS57ISnwHnCtK8zKjTSHVaqF1I
FjBiCmMn8UrwczeaS3Hz8Qj1aMdhAsyDSCzzHEErx0CA64fY8H5UYO448A/R
npEII0FWePNKcqE4kxeUq82lajxkMGwLixiEEbikCkpEDP4l+msjTAu6BWP6
2Cuvq5YiZAS7+jPAKQsFcz51+i1yCsCePAerc2A5Xh7wV4X71W7klG8jgRkW
kVpV4Q2gwHR//hO+oVDPNzrv79sK6McA5IAdgxKcqFOJ3pRd0bcKme9OYlx4
sckcxktAtCWqPMX3DoeH+RUAy1ZmWL0xuxg0EtqKx9rOO1HxVA6Vx2H84i5E
1hBvjBHhv3ccYqbfwefKboxoT3VX9IfNjav0KIgRCseHpc1UMiWNBSLfm0qG
+oB6wbxMXujx8G7xKgCSjH6dNwk23QSLVjKF8C5aSPDdRFA2SvffYfZ2CNj1
hdAyf0+4pGMKHnnmxKWzWe6pbmG5t+zBbkI/VO/Jo3b0pRCKpJvlgO+U6Zwe
rI/wAY57j4EQwvkqGZokDNbUaaY6aDgl49ec8SNZRsthncsHJoPxkrO9yrtm
XtWhEoYECTTqFYaEImNDpHHFjNom8tRhSEA1JfbWeKGUxpVNEl3zqWtsUufI
r8LuI2w/iVpIGBKGxTwnXvI6xA5BnkMvhS29egwJIjazz0axLfsB3hi0SzPJ
05zLLAm2mm5GK7RaoMU9l6p1CZKtoSlU7VkbcTRJ+PA1tz7pe8hEZVqt1SXX
x+nvArdh20Eiltc4AljPe2QdGkHlF5PlFppBlYlAidFjBWwngHRYWIwqIFFM
5KR1dfFvXQRT+Kk5WbNlnk0FwlYKZjKLMqmb8xsoDcJO4WcXMUoJW2V7+Rd9
anqXE7bqKj26NRUxwkjYerwkclykbAyrrBHmdVW4YX8EdQI0VwwSL+Vr1fB8
pc6UWNnCClrZDtTKbpXUGMPlbAf6HKnDYurIYnOMJOmNknY8twDJKaEMk6lz
klychz3jr3x3h3vwsZqq/PRrLFb5C8j5DvkasF9LA4cXWPlXdfOtDI+rjb0c
Vhdouw7ZGLMwTYHCQOLioK7+QSoczT0vx+OS+m2C9eHBaybdW/Q/mrAYdn00
TgO+I6Rdi556OYGBhbW7o8NtjsYFSUt4MBM32RSOMy64+zIyhyKDgcLb1kep
ZgkPivyrASMZynCHuEEVHG8ZC6xHYlACPcSb/0WhlyfIQ3+erKvIwKo9QVfN
aQqsjMWAaUJ6LACRVbdQnC5ZMeQBW95ENidFl9EK75aHetzb77xT+dDsVniH
Dx+mFR53m3dRG157+zb3w8drdGsMmWggzBySjTgok+k2Ac3i7WFOIcK9IUid
chUwRKORosa33PaYBHXScFFNDjNs/TCL3rMqZSlNgZli9qQ0JQWaAoXSVLGD
8ywJm0J01RTu5l3QBNOSzpJs+KS+6C8XYLrU51fzciU7o2UcBfqKNISkzzI9
nx2coLBnZ0JCbFdJnkr9wESfZ0TqemTvBhaZom8Wqcs9mdWHNtCZp5g1Vz8v
PFXMRXksvGo7oQyJj16rKC/nmJykS3/nx30U7fnK/5zWbqJLzK1bt063xNRu
cuK1N9xX79nh/m1NF63PAhWnDHAdZifHsA7ojrECx2ovGcaBZDc4tPvemGFa
+Avj5rOBuGUoFUCuUjWX0jGDzCTfK/fHbpG7vlozSRWolm53a6yZekQK60Ii
fC2YUs+KfRO2yW01BbRVRUtIB2pBVSOWXUI6oDPKzrBhakg5uNHV21Xd9JjW
dSqROxK2sjU0Iki8YRzQqZFjeHnoKjAOtBS2RzVWUFRa0+rmO6MqWNgL64sO
eeQ4Oc6+Rhu2jVAoKggjjzz36iWzWceyAs8jz+qlXnkxZWAI7JS07nDSVH9F
8WkMAecjQu5Xk6j6wL81/nJIRAPC0P3B86MIVbdmiRAsVF0zULWu32Kd1DTS
yDovU9UFwLfK7PJiC4mTacE1VHFq1FO7NK/TNsA9ExGfg0kdhsz74ak6MBHa
7qDIYbxUdQeId5hfMKLwgDoyzlkpxP+SYYF6Lqq4kBhZRX9QeW9QM61T5p+q
m5RinyfvB9eCW5GGJqR13lPgMyDnygPPRRNVCDOIKoAJMsnkBocettURHD8r
Bf0E/T3XrX5kP7mmwOURNwIQCc/I6DPICZmA9SAK3Fsb/lGCs2aj+y+AW12/
1Ox71tMS52HUBj61a6AQuQ7DBcHleEY5nLugIpwOq4k6Qfns5Tmis3qRFYAz
ReWelrLTi3ghYGPCCGBJA2CvYjZDq2wX1Su6yE4SDr1he0EAdVKFfE/2PqPz
SuqFyqwFZPAV4/Jxxronh0Nqi8wTFEs3tCpoG9E1yuLyYb8BlOTQXHOH+cFR
dO0TQ4lhKz6nhEiCuhZ3hgR4hi+u+Lm/1KHptUsBEdaud/unnHD/DIqubQfd
zgPPu96DL4UVoCXLgTGiXhZomT72PqrSFhDSHzIFkGIV7fuD5yemkcawU3Rc
mCQmqQHxsGTP8HWapf4U2UrbNFhePC0b5V4a7q6kHBowX7P3YidS2qzcNxFo
PgCysSE3GJxa0ZwaPKaR83mddrmVZlCPzp9cp18olgkiEk75oRKxOSf80cSw
GCqKPSS+pNJExvnTiE2eEy8EEp/okBHr4GVRAPse9sfKRRoSv1Y8Eokli9VM
JKomUOGOEG9jRXoXT9UHYksqfahaozrlYRMGx7++qs3dtX7vJTMhGcgeybp6
NhkWn/NLsntWPuI6ftrmBg74t1EjOm9dDVcaRGYGxdgMgjlhlmtFME4QCYNc
8PQxVkZHOhV2kg1qkYMW2fKsSEcal2gFR9SWYNJRVJYS/ca49zI6Uuuw0ZeC
f8kaXji50CHEOsnpSIGx24VY5kvLe5YM0qlnqkKzdWAIs+ZSqM8CdF7TyjyL
cnyOtTAatdJm9fC5PkUdBnPIL+JzzEMUV2jWCdD6ROjt43KLw+AJ+j88RS26
9sma2zn4grvzR7vdv6zc5n676VHn+vY69+ablYtmD0Ego4WurVxnh3v+U1e5
L936uLvv2jtd96UL3ZZrFruH1++gsdp6xyUQBCsu9hBl40eephimnkMPgm2X
hakrstWfoQ81y0Ebl2CtfQn6EFbESay6gCQKP2DYtC6tKWinjFWTFrquyzpq
7HbrpTkdZrdHtqYMoBxpRFP4kHdYEvShNFxd1/QZ9JCAnJp9wGAP9dG6abhR
35v09OB/NPJC4n8UQc6il2mEv4+WsLoWk8rnNHm1NL44R+vUOwRbnjC8KDTS
v87u729w37vh++6623/mJt57AbqFcwsXgvpNGatBPopYAoNKcCzhOVQMTjhw
xwG8wA+ibo8fP06fUQYKFQTInDp1qizKVt2R/A2dW7DAveUFWPyvG92yrz/o
Wj96ldu88Fr340/f4Haufdz1j50o63SGmjOuzXbxvmdgvLQ9T99BjmxYgDpx
X43dS11G7DxVNben+WkgzE8VHRDKki2FpaTUV2++oTIEsOoCbC7d5IB5Otv7
9OmGxiIfneG1sN0vh79CVzFYZClPqeW5OBr2rIbG6vKU6nBgAi7sdGXdwWVG
q09VmqEjWSx/Fr8e+8pEdHEbrxO/rr600d/dklUUgEDu9WUYe6ELGgctBJlh
IbnLW5Db717vOj7ySffQPy5213y3w+275GOg0q4QmdH73++c9JK/ydcV75N5
Cp1TSUzB8rV582ZyDwC/EcrRA/EflPQgMUI93zvLqOiukGUJstm6q66ioeCd
s85yd96w2i1a9qj7+eX/5A7+9WVu94f/wQ3+/WdcW/fTrmeEFWXkGbaWRide
meMOHT3hbYdDR1/BJ/KQ2iXJYUd9GdCGobGpJqpGCSqopfoPHzOHvQGFw1WK
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
ZYGUdA==\
\>"]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"--", 
   RowBox[{"--", 
    RowBox[{"--", " ", "Probability"}]}]}], " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Distribution", "--"}], "--"}], "--"}]}]], "Subchapter",
 CellDingbat->None,
 CellChangeTimes->{{3.749201769027467*^9, 3.749201792088149*^9}, {
   3.752464520956758*^9, 3.752464520957654*^9}, {3.752464782707111*^9, 
   3.7524647902315607`*^9}, {3.752464838978795*^9, 3.752464841594952*^9}, {
   3.752465765732271*^9, 3.7524657895086527`*^9}, {3.752465858100855*^9, 
   3.752465860335457*^9}, 3.75292793518624*^9, {3.7529293703536873`*^9, 
   3.752929466400461*^9}, {3.752929531882945*^9, 3.752929534019573*^9}, 
   3.7537083494268513`*^9, 3.7537174640025*^9, {3.756242410193131*^9, 
   3.756242421706142*^9}, {3.756242567353114*^9, 3.756242586274626*^9}},
 ExpressionUUID -> "373fb788-960e-4af2-ab9c-11e0eb193921"],

Cell[CellGroupData[{

Cell["Maximum Entropy and Probabolity Distribution", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, {
   3.7562426049479437`*^9, 3.756242637924632*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData[{
 RowBox[{"\"\< Let P(v) be the probabilistic density of cells with metabolic \
fluxes v. To determine the form of P(v)dv, we adopt the Princile of Maximum \
Entropy (MaxEnt), which in this context can be  stated as follows:\>\"", 
  "\n"}], "\n", "\"\< Given the set of allowed metabolic states \
(\!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\)), the dependency of the \
cellular growth rate with metabolic fluxes (\!\(\*SubscriptBox[\(\[Lambda]\), \
\(s\)]\)(v)), and the average growth rate of the cell population \
\[LeftAngleBracket]\[Lambda]\[RightAngleBracket], the distribution of cells \
within \!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\) has the form \
\!\(\*SuperscriptBox[\(\[ExponentialE]\), \
\((\[Beta]*\[Lambda][v])\)]\),\>\""}], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349487423*^9, 3.753717464028084*^9, {
   3.756235756822732*^9, 3.7562357731281023`*^9}},
 ExpressionUUID -> "ad26a90e-9ad7-4f25-81e9-f492df604ccc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distributionOfCells", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_"}], "]"}], " ", ":=", " ", 
   
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "\[Beta]"}], " ", "y", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}], "-", "vatp"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7536210422173023`*^9, 3.753621060056937*^9}, {
   3.75362109751334*^9, 3.753621104145206*^9}, {3.7536212245560226`*^9, 
   3.7536212272113543`*^9}, 3.753621266472271*^9, {3.753621777542453*^9, 
   3.753621778467432*^9}, {3.753623215153349*^9, 3.753623216162744*^9}, {
   3.753623293562064*^9, 3.753623381509952*^9}, {3.753623534504046*^9, 
   3.753623536620682*^9}, 3.753708349488627*^9, 3.7537174640287333`*^9, {
   3.753718556315134*^9, 3.753718560452236*^9}, 3.7562396017980537`*^9, 
   3.7579760994798117`*^9, {3.7579761727601137`*^9, 3.7579761730968647`*^9}, 
   3.757976234704894*^9, {3.75985186702085*^9, 3.759851885051342*^9}, {
   3.759852047557022*^9, 3.759852173263932*^9}, {3.759852212626094*^9, 
   3.759852240707439*^9}, {3.7598522751721153`*^9, 3.759852275972712*^9}},
 ExpressionUUID -> "7a735811-24d7-47b9-9d0a-e4e34810d5f2"],

Cell[BoxData["\"\<where \[Beta] is chosen so that the expectation of \
\[Lambda] under (\!\(\*SubscriptBox[\(\[ScriptCapitalP]\), \(s\)]\)) \
coincides with \[LeftAngleBracket]\[Lambda]\[RightAngleBracket].\>\""], "Text",\

 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349489089*^9, 3.753717464029531*^9, 
   3.755969981992999*^9, 3.7562358366788883`*^9, 3.756239520400701*^9},
 ExpressionUUID -> "1d19d643-9ca8-4848-b7f4-203e6fa12078"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showDensityMaps", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.756384011774404*^9, 3.7563840223553143`*^9}, {
   3.756384612185986*^9, 3.756384612312175*^9}, 3.756384763364163*^9, {
   3.75638483321093*^9, 3.7563848333394547`*^9}, {3.756384882813324*^9, 
   3.756384895224327*^9}, {3.75638493120504*^9, 3.75638494650436*^9}, {
   3.756385092735599*^9, 3.756385103917757*^9}, {3.75638517786574*^9, 
   3.756385198387044*^9}, {3.756385453971998*^9, 3.7563855243249273`*^9}, {
   3.756385717591535*^9, 3.75638582163024*^9}, 3.756486711064025*^9, 
   3.756636250119508*^9, {3.7566363329318733`*^9, 3.756636334585719*^9}, {
   3.7566384285838823`*^9, 3.7566384300973053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Probability Density Maps\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.757976238940669*^9, 3.7598517602879667`*^9, 3.759851798808112*^9, 
   3.759851889063107*^9, {3.75985206661996*^9, 3.759852086303771*^9}, 
   3.759852287523611*^9, {3.759852415966606*^9, 3.759852435742629*^9}, {
   3.759852486974504*^9, 3.759852514486974*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.757976238940669*^9, 3.7598517602879667`*^9, 3.759851798808112*^9, 
   3.759851889063107*^9, {3.75985206661996*^9, 3.759852086303771*^9}, 
   3.759852287523611*^9, {3.759852415966606*^9, 3.759852435742629*^9}, {
   3.759852486974504*^9, 3.7598525144953117`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Beta] values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.0001`", ",", "199.`", ",", "1990.`"}], "}"}]}],
  SequenceForm["\[Beta] values: ", {0.0001, 199., 1990.}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756638480431879*^9, 3.756639037413085*^9, 3.75664020369066*^9, 
   3.756640241581678*^9, 3.756640448488163*^9, 3.75664048426264*^9, 
   3.756640621037386*^9, 3.756640681137965*^9, 3.756640756650717*^9, 
   3.756651701726575*^9, {3.75666401401645*^9, 3.75666404045044*^9}, {
   3.7574204615420637`*^9, 3.75742050277039*^9}, {3.757420700043853*^9, 
   3.757420721017304*^9}, 3.757976047655864*^9, 3.757976177385255*^9, 
   3.757976238940669*^9, 3.7598517602879667`*^9, 3.759851798808112*^9, 
   3.759851889063107*^9, {3.75985206661996*^9, 3.759852086303771*^9}, 
   3.759852287523611*^9, {3.759852415966606*^9, 3.759852435742629*^9}, {
   3.759852486974504*^9, 3.759852514504859*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlXAl0ldW1ZpAhkTkMQiDcID5BkckHfbZPz/V1UfqqrSyXRSur4mMBrfC0
ikqloIJjkdZCQGiLyBRABCRMNwwBMkMIITchNyHjBRJmwhSkWBHe/ffe3/7f
Oc1irawv5z/n32efPe/zkzzhd09PatGsWbOpdzVr5v1+/4dfxv7Vm5T+/x37
t8owbnIwxrc641tN7rOz8p6d9b0z3jJo43pTHXo59m+PzgfGfHu8ZRCYlklp
qziPnm+vOO3mJ5v/2L9z0J4PerMderMderMderP1fcB4H/DD9NM5aM9PUHz0
8T5lj/fp7ozXGyKvOl/pAQY99njLIDDoAQY9wKDHnp+gGPQA30vr3aP49TFt
3hzTJtGZX2+q6A+FSi8w6LXHWwaBQS8w6AUGvfb8BMWgFxj0AoNe4Bxav4/i
hPFXu42/2tdZv97cvuP9FOt+gLEfe7xlEBj7AcZ+gLEfe36CYuwHGPsBxn6A
sR9g7Mdev94sIMJKdT/A2I893jIIjP0AYz/A2I89P0Ex9gOM/QBjP8DYDzD2
49LP65Qp/cCgHxj0A4N+YNBvz09QDPqBQT8w6AcG/cCg316/yewg/SlX+oFB
PzDoBwb9wKDfnp+gGPQDg35g0A8M+oFBv71+kxlNBqtS6QcG/cCgHxj0A4N+
e36CYtAPDPqBQT8w6AcG/fb6TaaSDZjSDwz6gUE/MOgHBv32/ATFoB8Y9AOD
fmDQDwz67fWbzFRyYLVKPzDoBwb9wKAfGPTb8xMUg35g0A8M+oFBPzDot9dv
Ms3o57jSDwz6gUE/MOgHBv32/ATFoB8Y9AODfmDQDwz67fclB2ti27l9Jyrv
OyrxQYpiji82CP03FWOcjzNE+1kyuHnwFQ++s8GUEb2tgxjH8/z+TPMG0Xu3
jncn+joGMd42Nvrm7DKmZ0auvLeLjs8kBvYIMl255sYnm2/G5/cM/q/34Be5
JpEI6B38KS1QIHKVpJjPq1H8+VHFND8UMZMmT5689s8BthfrIjrO/qjCvOCR
+1kgCIzx+URQlY4DY7wf0Vuj4y5mftQ58VyKcz6rHLzViSd9/t9Hw1uc89zj
xFc+//nvu8yKDudXdHi+VONFWz4zVT7pvEP7VR5xHuA/L5+v8ujy3/Z/jeo/
YuyffGh5gM4zsaBcx2H/wC/bfjeq/cM4MPndLDnffbU6butzjvBnqcjnd4bo
TV1jZpG8tZH9bTe87w7Cv52G2PdZJ+HHXvOUN/2bHhIP55jLseFu0d5BEpc7
B4T/Z0WejvJ7GiAvdUoPz3+P3j/qeCC4ncS1Sp//CT3g08/nk+bMT9Hn+X3V
TO+yMn5+9mx9nvezVvQvV/Rvu/k6lm9knmd+jpxRrevZ9rtR5Q8Y8jqc5Ke5
yhsw5PfBfSdj/7qq/ADb+UujwTj0A5jHaw0vn2cKD3s/PVXegO38o9FgHOvZ
8lkr8eQhxz4U6fPAD8TofSxUR/LbGDrirF/irF+i9tTW9ybFzJ+rws+oygvk
05bXDaYrHegdPX/6c14cy9vy7boffj7HeOL5ZrizyisNj+oapNf0z9LnIa//
iNnXT4b0DIK/xM5ZNbyfNw6zHHdKYvvQ6aDaW/AH/gfYtsclOg78XzHrMefR
AMnD3NQwve/JpwKc3+SV6HzYbzv/Ocr6Oxr2tFQx9A385PdFFLP+lTv0Rxz6
I7oe5gNjPtZjeir0PKHfsD/wx9AnnDewLR85qk/0a/BV0d+lKj+2/b+h+mzL
21qhq0XQthctRR42q7/geTks5zO68fNDszQegf6t8ybs7h6EfME/Ay/3/MmU
Xio/ZMeu9eL15uc551lojLf8M8iXDjn50yHlt53fnVV/gnE7fzqr/gX8p32N
LDeeeR7/yDmW4x9UKr/gn8FfYJwn7C8w+Eti9m433T/OE+eN+MeNh+CfsR7s
tV0fCen5wR8h/oP9Ar+hv7BHsH/ghztu1zPAz8NO/FOs4/w7rPyCP4D82f6s
3vEPtcovO55ca3rTAu1kP7tUHlx6wD/b32Q79jLH2X9I6QEGPeAnxu31aw3s
pR2/Zyq9GAe9Nj9vanwIjPgE/MJ52/oaUgx/Cf3CeQO7/g3P2+e1XeMb6D/i
FeinXZ8L6fOYj3gP78d8yBPzb5u8f5ohd353svAnqtjOd1bL8xPMTc/f9E0O
ptP7o4rx/FkvQB3+PevVxHUaz/L62zQe47/v1vgV52PLX75it77G8d8B1UfI
NzDowfnx+itVPiC/f/9b7OdAR5bfabvUXtLzI7Mp3v70i+s8/50VhshuAP0Z
sv5pkR+p57xdKO+frvxmeZ+n9sa2X9s0nuT4L1f8x6sqL3x+SzQ+g3wgHmNx
yHT0JVfjK1t+ajWe4vi7VuLvIsde1ml+R/lKyl6KN98aFdB4APYc/h3y7Ppj
YC9+6HPlDL+3sULljdeLSjz/D3n/Kn4uDv4q2wz0Jqzqy/o0rsC0j5nT8xdv
M78yv+R86elOzJ/AbrPWY/A5ycev5Eg8dtkcowVq9f3w71coH4B9S1f55/GZ
Ku+8z6ijH9N0HPrkLf/gkZDqDz+/UNabyvQOTOZ4uiDK/u+XS+X5n+h5IL6A
/4I99fYTffsCy+ftz5z4APFlkcTfO8S/NhP6Nunz0D+Sl0HFxqs/hNrvl/Xv
5udv75B1j4l854p+dJX6QqY54e33HcT3eeac98AriO/cfL2a9O3HqRdIXpam
VsvzabzP8StUP1geFhtiT5dkXq/JPz+2e3XGY39Ci2TKxzY11jCf79sl8r5e
+cH838bymV6k+8f+mL/5Tn31MMUjy3tLPDmsyMl3wnJeJ2S+xMfh48azl43F
YdLvLe+eonglbnZE5ZH5uULs3DXD+rZM4xumbznHQ8O6yfllMb+OdBP99OM/
ri9kqX1i/pWp/EEen4uxo91wrjeFGqMqj7DvkG+mb4xp7bmTDsmc32bUOvHb
EeUHMPjB+yp28p2lipmeFOU/7KVtH1Mc+7VL5RcY58v2Ml2fR/6E54HJPB6O
U38ADP9K9ZYp8azv/XaYJZ6/6Jmk8S4w7Okcb/3fJok9Oajyz/uPqLza+UO9
8sM+r8WK+bwX6P6YH7vV3yA+xftw3oPohXdpPAqM+IPqNKmJGh8A2/63SPnr
6dfmttCP9/l3XLqTzxwz0H+cP/vHI7qeFd+1C2s8R/ZzSFwQ9srbfdkc9Dcz
zCbvgUN9ZD8HlT/I97B/N3/k9RdJ/Wyr2tPWlG9LvWPuRtKHWaPAnzSW40TE
67nm12SAEvl8G/P0/W69zM1/2P+VKD9wvtBvxJ+w9/y8Xz8DxjjladV+/RIY
7wtJfg0M/wx6eb2jTrxdqufD81I1/0N+gfgZ+m33b47oOOwhxoHtespatXd4
HzDOB/YM+QLsHc/PVuzmF6hn2PHZEae+UKLxDeIlYKxn77/C6X9WOPFPhT6P
88TzwHY8VOnI71GtD0NfOQ5sFYS/Qv0W+jrME4cm9J8P6Pr9RA+BIR+oV4Df
OC+cr6feN+MTtN7UX/Ib7BfnBwx5xPtQfwY/sR7Oz5bPtYpx3lgP/MT7Ib94
P7Adr5Yq/6GP2B/sgV3Piuj6dj2wSbGtjxLvtrmg/hrzEd9iPjDm433A0Ac7
/12r6+N8sD7qI8hnXP7A3tj1pVIdBz8wDnrAL6wPftn1spuqT7Y8FOt6rr5j
PuQV/ED+Bmz7z4iTn1c49sbvR/eX/Av2FPR43m3DgmMU746L+QdyJxMDrM+d
Wb/WiH8oDR1VfvP8SkPbWXHeJHvrf1Gl8RniSxq/XsDxRRTxxl6Jr9ewPzle
yedTW6Dzkd+858lH5mXzMyI/yvnezyv4/aMP8Lp9YU+Kqd8y+N8k3nzxiI4j
vgTm8w5TPJ3zlsTb48o4npt7mun5sJzzqzunmJ5bEd0/v0/oHniB62cDqpV+
5k+tvs8+/9PGrt8e0/wd85Gfk/9tdkXzc853G8TOzdf8FvkJ1oM9sfsHeRLf
V2o+i/chvkL9jusFO1TevV8jY/Lh1WdaTfHzV8QPVv4a44/tn18Te/WiU29Y
ofkZ4nMvPQ20StZ+kO1ft0u+uVH6WZ9TveqZ7slMz4g63T/yd5q+8LhjP/aK
31ptimLcaTdM4vdoVPUD/tmOn+dKflct+eOHGv8i/oJ+It7i/PyMvH+RIfas
OcRys2y3xpfM/zSNJ9mf5Gt/g1+fofVSzl82aX2U1u+Xp/Em/B2FXdP8fgHO
B/6U4sfa8xoPQR5Q72T6GoQfR81fvf29dln7Od463w0MaDwDeQe/PX2c/IvT
2o8gPPaQxuM4D9hvux9VIvpSLs/7/pGf38f1qYwukn/t43XeAz0RrY/DPlr1
8pBfH2d5TNX6I59ntso3/AEt8/qFf+nPwp+TPGYGglQviRzTcfCX4rO96HdW
K4Y9gdwwPdu5H5cXsO/fvCTy+ZsSs9c7nvQTyq9gbHhZIKD9KY+b7+88pf6V
8O7WGh+hH8z73WpaefI2v7fGR+j3Ekw8IPtZwXwYN1/kY5Ho2we6H/gHYOZP
FdWzlvWTetA/6+h8swYIfj6q9UamN13kPUXrfV6+cWugX3/i8fe0nsT8e0v0
dZLc5/DrS2Rfhkr+HonS/dObu/O03kPqvzCf890PQpxP/eVLXi/lr2R/V/di
e1M+vY7rCwNPaPzD9EwQep42j8QYfvYd6e/sLSP5P/2e+KPmEaf+kULn1+f0
ST7/4Keij1GRh/ka3/LzW/kczrbi/X20hf3XMMGhLRrvwr9QvbmVnOfUfJPh
HV9houiTf3+U5//F1Hv1qaRclUd6rKGT+JM9VKd5eY/EXVuRL67S/RA58+T+
whz2D+Gt/n0TyMf/v1/y+6RkPv/tbM8rA27+78fb9OcbsAeZion+G/udepR/
X8OK92P2kPXTx+59jCne8PRa5u8QyXcHpkk97y6p56VRvffmKOlfleWJv0iU
emCeU0+b59QLZqj+8/hMrt9l+PYF/II9YX2cL/o4W+s1WB/2k/n3kWI+3znO
+9drvmPX//aKP1mn8oH6HuSXny9SDPtDYlNzVvn7I08fHkgOLvQefzvq+OOZ
Us/dI/IzWdabI/hV1h/o8z7M36T1YZ6/QZ4fK/o4Tet33tOnhvr1OvSDeP4G
6X/dcvb/vexnHfvXBbc0/yA8rA3Xy+dvFfsv9fTwbu0nIR7z7MGXP8Z9t1zt
P5E92sT5+vGf3qP5n2f/9x2Q+0etD2g9mt//ld53YHvh15N5fq7Y5+vqX4GR
P3r2cMVb33D9dPhKqbfhflQG+5ep3bV+YPUTqv1+NrC3v+fbyX2H/oWs763F
v719yHjuZcxTDdr/+dZj4MwG9qczyjTeYP0rk35Avtp3xGN0HtOL5FwuiT7X
yvn9SeXJW67fIL//wOOzVF48df1qiN9PgP7x+e+Qet06rT91jDHsgd5+/Zz9
4m7pU62Xeth1qZeuJPs6Yaz0x+qylH9s/wqd+gj3V1/qLPayoJDlqavEMw8e
5v7bFuHfljLzgaePzZCflEk+d1DyObnP9fMDki+lU74z4mOOD74zEeLDjbl+
vZXzgwKtX9r5xAeqr5B/rs9zXSBudh7PmyT9yfI9xnMH52dv03ib/M/S5hy/
Dt/I+nlL7jMV5nL+2SGg/WYSh5QGzcdRb0c+BHlAPRT0Ih6EPbTiQ91PptP/
ybTzn/7SB0m9O4j6OPIh1LN/6b2+Fe7TFDj1nRonnq5x7lf642wfazjerLmo
GPfz0G8BZn7u4f7gMx2DiKdJPnp2+BeM/TB9JeoP6O/P1Gm9D/kF4gvyZ/Et
xd/i/qWPkX8gvpjr2cOdvWS+/30KsGcPR9f48SDZ82OBIPnXF/x6H+oXiL/5
+XKKjx793Md2PyTbyaez2X7WlSrG+SB+B//5/Kqd+nG11lPgz6C/8Hd2faxI
34981u4XSn1wsC+/uG8B+bLfV+Dc96pw8m03n6lw7m9VOf3ESue+b6WTr/vx
D+INW7/SdD/AiB8gD8CoR9j1pkLFiB/s/k3Yqa+HdZzl0r9/CMy/T0o9r0Tz
ZcSHwLAP3va79fXzRVufSx3+lzj35Up4Xzdaij9Jc/pvOWzfBuP+er7yH/mv
fd9xpvAjS/br3n+YKuNbZHyyUz9MlXzgG7WvuI9hyftC3G/LdtafqfET0zvb
6V/6GPTw88tk/FXtjwLb/co9jr3NcOxthtpPxA/AsK+4zw37B3uH+Th/zt/C
HF+M9u+bAIMeu14YcfoREdVHPA/7D3sKDHtqn+8xR98qHPtV5TxfpfEb5AcY
9gzyCX8CeQQG/aiX2fai2umXlGh8BX2BvDP//e/NmH/b1f4zfdsUwz/AvqPe
BPuP+gEw/APkDfJux+8zVb4g78CQPzu/War2BvEZ0fc86jURrj8v6hq07K/6
h8XO/YUU576m39/DuH2/b7Hef4F8QH6Acd8I5wt6oJ+87Fnj1od5vm//+Dm/
fo37IcCo7xB5D/v7h/yEJH+24/U6x1/4mOmNqr8Apnr8mJPaPyF57n2S6U0s
5XroxDDj/8k0v4gt93FjkuRrB6ke3S5N/HtxBecXv7/I+39dvh/ZdJH9z1c1
9PyfYvG9R19DqI7i2ydm+fU4zq+/k3rsGrIHIzvcw+97TPqfr2Qyn8anyX2d
/XJfZzPFlxMKhZ8fV/J9rauCz1QbL3yqvC76m1Qj9dsqqd8e4vrQiXztz1M8
M0jsyaPFwo/jwo8wxcNTfij10T+EKf+If0HqQVtKJV4/I/F6Ba//Z8HzKvh8
l8r93iWVHP/fxvdZ4o9XSv/9KYnH703U+2wUf7UKqH2l9z/s9ycoXq85rf0z
2tfr1XqfkO7nvNxR7R/lGxW+PaO/P3ne/n6o+UW9v0T1i4EXef375d596gbV
Z6qn9EhWeaR6bHoGy9v6jdyv+Va+15hSI/W7iNb7uX9Tzuf7YT7Hv3GCv89j
fRx8nJ9/IMz55/2ntL/H9bdrUn/7Qupr0p/4KEv6UXKvPaNY6n8lej+G+BeW
+xlhuV+4Ml7OYwf3id5N4vOYfJDizHEf+vcvaN6x02pv+L7KHq1PUD78isQh
k7M4vv3ZJa3Xc7x7UvuZFA+0OK72hdtS53i8tpLo75t4nu73TU+sYn5PusT2
ZmId5fO/jflXb/7+l0u5vpAv+p5VSt+XTb52kvP1K6VUn/+PW/59Te6PyXc2
A+T7746Xef34KH+P8SPpJzwS5ftSq/k7p9TUQpbXoaIvXxVzPXGE2KPkMN9f
G8v9vE0PlZo/ePWdX4n+TS2leC/S9gzlUw/FVbC9/sEl3v/DdSLv5dp/o3nV
l7QfRnbm7xc1n2N7m6nxrxdfbbvm+1vv97sv+t9r0Prp57Tfwv2PKv0eh+z7
m2eM1Z9oPMH8OV9C9ubjRsn/9u2k8596uovYt31cX17v9zfGxsTt8yN+f4Pq
38/63xeUevX2dSJvT1bw/byD0l94rlL81+daPyT93ij7W1JB9uJSmPV9YnUl
938iMv4Q63+X+/z7qd5+Xpvt368ieXxV4qusEPuDu4TepEN0nmaW/H8Bi3OI
f/HxAY0Pvf5Tz4SA1kuSPHprG/S+HvUPeh80yKdYvyN6v4r7gWHN96ke98RF
zcfJnj6HflO+9Luieh+P7HlGieZz3vks+drPv6ifUernV970v7WX+1TBhWJf
Wki97mv7/k+XAjPPU6BmDdofZn8m98Ef22aGevI2Qu4DvHBAv5di+7de4w/G
IZKHW0OkPjggU79/4vvaubyfAY329x/xXdheRTOIXxlxydzPeqmW8qkdPQJ6
v5P6SfFler+V88d5ch4jWZ4fP8H2MXUe918+lf7EY1tYfi5IvXxsvnPfZhvZ
82iKH+9Q/y9Ur/ex2J59K/2HVOZHqAfL+7ec7/xzwVna39OxOI/7E9n6PQF/
/3WY6Xsjg+uhSztLfSqD48m2LZi+ho0Uz9z/770Y38iV85X+YXA19Y+aBnVg
/t27U+rDPaQ+7P9/Iuz3jnK965TfD6T85jcJQdwnJnsSEn39z2Ocz1a11vj7
j1SP7q3xNdm3Ee35/ePTJX78SM7jDdbnh5KDdJ9iY9T08h44KPXH3xU49fip
Tnw+TuvBnAfL93UdpJ70xEymf5F8Vzqd89MA7stejpr/A8Iujgg=
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnAnYT8UXx++duQqJkn3Lkn0p+5J9SWQXqWwRQqGVVBItsqSQSvVHu0pp
RYuIRCulfbO0qlRSWlT/83nP9/e8nuedZ+bOnTlz7syZs//eKiMm9psQkiTZ
d0SSRKtfsofJVk7LkqRjmiQdrNxq/S2tbmFlobVrWF3UyvvWPtZKISuFrfxu
836zstHa7e29gUgKWmmTel3MyunW7m/lNCub7PkJK7dZaWiLd7a+TlbqW6ln
5UPrn2z1r1bvtnKM4LHeIVvnbyuvWrusYPN+s5WnrSyxcqnN/dnqz6ycYu0u
VmpbKS58j7JSTvP4jpr2rqSVj61dXn2MrWjlOCslrFSyNStaKWilgt7z7lPh
UMbKLtXVrDS3UttKHSu1Ep8DvOrCm/VrqC6vsbyvBD7qq6D59B1v5UvBPsnK
iYZvAytf8B22h98ZXlM4H6uPtnK+9Q+05wFWelo5Qbixdqvgzw2tNBZO4NJC
69W10lR4gHsz1eDYRGN51yhxOMxvqXn1rLQTbN63Ul99cLZ1a1v5BnjBx7S1
MsjwP8NKa8OzveaBVwfVrNlRNXh1Fk7scRfV4H6KanDpqpr1ewkWMHqr7mSl
avD1u1s5TbiAew/V4NJTNfP/Mfz+svpPvtvmVrOy3Np9BA+8zjgMXj/hB179
VYPX/fat/wLPSgODUd/KPdYeLPyA11fwmD9I8MDrTNXgdZZqvu9s1cyvFxyH
gcKrqfZryGGw2/HtwfEaqbHgXsP6MvvOaKWKtctbuc/6x1sZamWYlXLBx4+w
cq7mgeNYfQPrjFIf+I4RruB4nmrGjdZ73o3TPNboYPCPslI4+HNf7eWpqa85
wcpErQ/uk1SDy4WqWf8X+ICVB6x9kfpY8xLhBC4Xq4/nLVbWWFlq5VK955sm
Cz/24DL18dxW+IFbKzvTutwzK1cchuOVqsHxKtXgOE01eF2tGly+szLVyvVW
blAbeDOEE+vPVA1ey2zdpVamWPty+K2VvdaeLnh86zWqmT9L8MBrvuACb7bw
A685qsFrrmrgzVMNvBaSA8iOGwWP+ZusY6OVa619n405yspr1r7H6retfpn1
bd++tuftVm4SPPDI8UT4CXJmUeKyBFmEXDkycflRUP39JSuQC8gN5An8fau1
t6QuY1LDZbut1ylzGYNMKqo58HlkAPIBuQE/h+/WFB4X29yLosuVghoLr+9g
sPZZ/VjiMgYZUDpxGXJ34rz6WMHim5AVFfTMGhX1jCyhXUJw4c1ltE45PXe2
tQ5Y/WzishAZU1Xj4L3VNK66npFRyLFKWqOWvucuw+0SK/uTfD7YS+Pg+fB2
5EQd4T9AsgWejpzhTtQTLPhJkyRfNvCMTDlJ+IAHPLyh8Gqs5xqax/MbBvP1
1O/bETa3gJUXUsejueAyHz7cVnjAz1sIj1Z6Pqg28mWindWRBmdf6vPhn530
fS0EFzzaC25OxrRP8mVMB31PJz0jr5BVbZJ8edM5yZc3XZJ8ecMzMgG50i1x
OdFV+F1hOB1KXH7wPfBzePRB6//dytYkX/acpjXge32EE2fVU3j10flV1LnV
SvJlVQ/h1E/zc7KH53/UBqczDMerbN2QuvxBZgwQTvDzgcJjkJ6vtHFJ6nIr
J4cGJfmyJyeLztK7aqnzwKnCdbDGgRM8MyeLhugd95Z7wr1BNiF/kDVrE9+b
5YILrx4l/OD5I4TfuXqG3yMnLhB+o/QOvMZoPnIFXj4syZdJY4QLfH2scByv
58HqY1yOp8NDhxm9lZSsmqC+qYIFv704yZdJk4TLRXrOya2cHKOeoDUu1Xxk
Cft4uda/TO/Q7yYLvxGGQ6ngeh+4Tta40Vr/oiRf9oA3vBm+P1Ow4LvXJPly
aJrmTddzTt7MSPJlCe+QOTO1HnCRAcgWZA8y7DrtB33IMfgrfBRetzy63FqR
5MvCq1RmC1ZO9iCLNkeXKw9rfWTGPOE0X8/T1Tc3yZdhwBpr/PMz25sLbB9X
WD0JurSyyuC9ZPWjNuZPq1tZeYf9t/4xVlZae5X1XWTlaCvXWDnGSjErfa30
kHyaaDAfxFaycrGVY618ZP3Frf9YK++nTtvIJuyOh9DJDafbrX5KPLmElRlW
SlspZeVmzshKu+jyYon27RSbN9Xe/2Ltsga7kJW7oG0b96r1b7Zyu7Vvs9LM
Sj977iWZlKZ+l9AzS9i846x8mDovhbfDP2+yOfOstLDym737MfV7t9DGFrHy
PPRgfWWs7LT2c4IH33jB3n9l/e8hp1N/h964A3sJ3p74+sCDN26yMRs5B2t/
Ye+XWLnDygHsPivrgM0ZJU4ni+xdMSsvWnsn323lTitjbczpti9vQWfYetau
bvWb9rxBc4ukrndw1q9E74eWVtr8WfZuupWfrGxLnSZetTGFrS6Uuv3LPNgf
djF0gc5zrc0dZGW/9bW2NYvr7F+Gr1rpYX1/Wn0/+rOVOTZptmxd6AfdoYDo
4gnRxo3WP8bKyVZ2WRkKXonzFO4QOmEHg9HeyivW7md13+i27gKrh6VuB6+3
9jRrH5G6/o6+fo7196FO3a7mzNfo3KET9IvK7I+NmWalZ+b6/3M63/+gcysP
WNlj40cit3hnz8dLNsy0UoE1rVSSTOPMsXHW6tyPsfYfqdPXFMPzQ3v+ztqV
JYtYj3uGL4H7BW+DBtBv0eehI76lpGgBO/d7a7+H3LX3vQ1mr+jfvsPebUt8
/hPR7zx0cJaNPTd1Xfm9xPVTaKKmvd9j7z5JnUfRhx47ABqTft8u83PBh/Gy
eAl6LXcXnwR3rZON7Rj9LMdbGa5zmWp9Hxv871O/35t1t9tnvp/YH58Gh/e6
laI2ZjC2fOq4vCa63Rb8/j+T+D3eovOE32wSTfW0uT2sPGJ9XTP/Tu7Exwbr
ldTv30jrn2v1bCuro+8Ra4+Lzge5UxN1l1ZoH7epzf3bob7ONnZ3cNy/hg9Y
+dH6nwVHK4sNxjyrL7FSOji897Tnz9u7e3UODdEhoScrda1UtvIDtJ267+mD
xHnrh7o7hdSGv7az921T18VPUo2O/ILh9ryVu6PruujG6LdP2fP/ouvDC1P3
AX2SuF7/keCfEt0nxfPniev66PndovtfdtKXur+J9+eoZgzvvtCdqqs2vLZn
cN/WHuEMTOyRhqnjvcvajVSjSzMOvb+qxuwW/ANaA/i9U7fFsIlGCDbjm6Tu
M0IvrxOcn+N7uczan1v7RSvfWrux1V9Z/yirv09cdjdNfT7jl9uYZVZustI8
dRmPTvKS7cMFVh5NfQ5yHx4FjL2Cw/hmqb/rFdxG5T28lrOFdbB+I+EK7UE7
+BurWfsL0etjOps8npm6rOV5UeoyGliXG/zXUrf/Lre5d1p9nPb4Z+0zdxH5
iS4y0DbsapuzO/U7BS2UtHJJdNuPcTm/IfyZu3hQfI1z+FVnMdv6T7fyr737
28pfqdsl5xuM8dH3+JDe/QEf4A6kbgPdaO2+es88bAbshTbW1zK4L+ZUw/MR
qx/mu61vZep7fpnBvjT6nEVW17R3Bay/nNaHt0+ObnecmvhYbAD0/4o25j/1
Vw/efzo0H1zX/09zWQOb5Vnx9FQ8Gl6N7AfHFtLXsQ04UOBcpbGMaR98Dcaw
zr9aC7lRQOP/S123wu4fbWuOiq47XJ26PoEu8aT13Qpfgt7sXTfpC+wV/H64
6A6+Dn1+qbvEPcIPgUyHf6JPIttvtvYgq2vp3Wsal6dn2pjpVqKVK+AV1l+F
+4BsSF2nON/WfSJ1/lRU+COzuIs8cx/pO0b9b6eua7AGOiN6C/pE1+i8Bv3h
T8FG57gV2sh8/hlWT7fnb6GH6HOK65z+1Tn2j64TQPMX2NinU+dti63dL3MZ
NdPez8BOju6vQN9EZhWy54LR5Td9pdU/yOZdY/P32vNQe9/SShvr6x6dD6IL
vi6ag966pu7H5fm06OPKWjsEh8uarMM49ITuqds52Gu3BdcfoYsfUpd7OZqj
Roe4wcb0yfweHhId8+3QSGXRZnXBhAb6RNcJqmitbqnbVM1Uo1u9L10O/aFN
dF8eMJLgdInsWRFdX8YXgszB34TcOddwmWftOanLLsZy/oVFV9BZDP79NcVL
4Cno9YujxyfqpC6X2BtkE8+Mgeds0XvafFNd7RUyrabmnWztpXr3QHSbA/we
jo43sgoZVl+4I4v4DuTRg9Hn8A55wlje70pcHuXiGtwjZAp6U3XtLX2N1Z+T
u6XFG5FVORgN1Z/obLnvBSR3uKNPox9yHw87G+ATL0AGIb/WGY4vRpdL6BfY
a8gI/D30fSP500xnin8S3T1VX3PBxLbjHTo8ekYLjdkrWQUM7BJ8jvgbWwlO
3lqJ+yHxBebiW/Q9Z8DWRj/PCtH5NHdgiLWbowtmDqOV7jV6CnPx+fVJXX63
Vx/vimpMO7WRX7Q/1T631dxyWueg4HTQd2Gb4ieF/+Dz7Cw8sVGxYYjrYSt2
EvxG0e3RzsKhk8ZDg11EqxV0Zxsk3gfdFkncXqS/nL6ht9bFdu2iMR20LriN
SNw/c47qbqJn9hOc0em66a5eIJrvLrqopvETNOZUtRfpm1mXmBc2b+XEY470
ozPgA8S/iS4GX+ulu0bdU23ubW/hSd1HbWwj9K3KGt9P8Il5Ysvl1u+rtRgz
UHCJVTL+bn1ff30jd2yA4HAn+2sucE7X+TF/gHDur37GbAluVwzT+4GCs9CQ
vU79yLUzU+dBZ6tN35M2d7XV81O3femDV12L3hXcP3IDuk9w2wB7AnsHG3We
YA1SPVhwDwaPAQ+x9hr18x77Bn0LXauT9Cyeyxn8J60eZ2VocLsdvoIdgx2E
XTrE+lekrlMX1HvuLzoXffCTYTamd3C9tYPOCxrk0NAR8dMXsHYWfa1r1Ycu
uVb2GfSJjobeDB97zOCdlfm7Janf3TsSt+Ox/diP61P3y0MXbaPLDPwOATtD
746I/s2cE3YzNh7fV8z6P7fnC1O35c/jTBLnbfi/m+j8xmv/kHvIQXTOo21M
kejP2GnYntiJ2GTYaSvUN0n9V9nYK3Wu2FPoydhQ50iPyOnQ1MgH7AZsE/j3
XtkIxJSxabBx4EMjpQvgB+JOUO9ELlh/F9k22Fb4tbCnRgTXw5k/ytrdZQPc
a/XjqeuJ6Nv4tfBloUfjK0fnPA/b9TB9lBpd58zMdSN8ctgSwIN/jw2up+H7
eBn7PbpejC6JHokOie41XTQftD466gTZydim6H3ARndDV8I3h+4yyt6/G9zP
gS5EXV70D21BV5zndTrTldhG0e/WP8HpBpqBlqF55OiIzGkO3894a58U/Q4h
O+jDF3SstT/QPTk7c31uhu7vHN1H7vQtVs5S3zz1PxVcrvJ8tcGZprv9uNWP
Rb/r4MhdP8PKjdaeZeWJ4P7PBaKZ1J7Rh3jGb7lQ55sF128Wao2bdfeJ72Gb
YZdh/yN7kDvrZC+emLhtt1j93MvbRI/E7IhXYY+Viu5jZRy0x/36n2iY8Yut
3djG3JG6DIPOoDfsvfnYCJk/70w1JvH7ebfod3Twe36H7tD9ab5/Ar8ENsHA
6D4gdKy50f23+C3vPuweLIAXZU5/W4P7hoh5MndZ6v5M9Hpsh5et/VZwe4AY
6YXBa9aaFHweY6Bj4B2hdedITnfUfmI7fBPc5/KAvu8h7QM8coXu7pnRcyzQ
S2hjS2KHwg9W6XzP13nj6+Z8VuqM1lr/Y9b+NvG7wp1FH+9h/Z9aPc6++RaD
OSH6uFQ2UZC+8aDwrBxdp8eOvEQ0BP1gp9DGB/4/a/fKfA5nxtlhy2SyZUol
DvtJwafvGfVDy6tF/9N1N7jjv8KDJfO+1Pp5vvDU7xm0uir4nWHO9chQK4/r
3qzVGHgDviroAr/JC9qfJmqjx65L/R39Lwb3Ka+3MiV4btUGa3cOPo4xT0d/
n4tDUNtf8kz0sbwjNgpM/DOXae7XifvbGLMgcV/eK7pHr1n/Q6I/ZOJG9eN7
po1eR71J/cQJtoj+8+guddnSJHpuFnpiX9Xoik2jvyPegE7AXGyTdwVzlfq2
CuYutRlL/Zr68X3gA1mWuD+ZZ+Q+BXsSW5J4ArY+PgJiEq9r/OvBeT3vDlh9
qeyHt61+9LB7RX2U9neb9na72o9onTcE853U39G/TW14147Uv43vOi24/5Rn
eMAO9WPTvCc8hweHBZx1wemAnDrsMewyfLMfqH2EtT9K3a6skrgf/AP1b7B5
64PHEaiJJ/GOWDG27+BMtmjqvl/ykfDvEaeuYXtVNebj+rHOBv8Y50FMYZO1
Nwb38+MDI7aEv6tWdJ7C3UZ249+8M3H6+kI0gz64S2cKbX4u+kS3Q8cDTpfo
/dAq/orv9F3cbe44vo/jo/u24EuP635yN5Fjz6V+l/GVQR/EGpAnyJWTM9/v
r7Tn29X/g3QZdBt8KfhLiM3QxveM7wYejI65R/R2kb4RPsl+EBvjTD4KHscB
70+Cx0Tw258YXQ/L8TJqdDT4NPwfPwPxK+LQ2C+nqn1O4v5TchNaJ35WtL8R
vf0kmlmv9kt6/6PGA+MXwUHmoIPhezkzuA8M+cJ74lEvaDx4kPuEH+Z70dip
wcfQT0zjV+G5X/Dpp++A2tAbsZrlicP4SHC26t1yfctvwpP4zu+iT/wW2Im1
9f4PjcFHdbn8VOT94RfFhiU2gP+LOCzP+EPxheJTwQ+DT61MUB6e2sw9OfE+
/K/ojfQdUj99/6j9l9r4S/sFH4McxBcBn4WG+wefw3j8EwXUj68FHw4+GnQg
BBB4IY9S6UX/qR/ZhN+QZ9r42vL8X4nLCmAiL4J0p1KSZZn0KPoy9eeeawp2
KvjcO3B+QfvKvrPn5CsRFyZefG90/zw+EvoKhvxcVp7xdZNDQj+xEfy45EaQ
FzE8en5DEfWR40CsrZf6hifuP8Hnhd1MLkJhjYFuWRPa5pl8hfGqyVOYItoB
Z+iCOF4xzR0ZPaeB52IaT/9kzWcuvJNYF7yUeCQxsNWJx1npf1w8Fp7JWHgk
Y3IxsuIac5zu+2rxYdqM5VtLal3WL6V174wec+YZ/Qd6hVahWdrwFmLdxFy5
p43VJn56c/CYHTZOIbVLakyjkB+jpR4hGoa+czRLG5oEHmtgy+C7Ol77n5dL
pnMk1lUxd77Bz7uk1q0kOmhqpUnwXCX4RQWtDw8l7ga5EY+j/YHWraJvwcda
RTjw/niNvyN6DJ+9aybY5BOxFnlRebIpeCwAHyB9J6gfHkIbftI6eN4Vfj/i
BYwnb4n4Rg3NBXfystrqPf3EF5AHNTUGOCdrHO/pJ55SR/BZl7qOaHW5cOqm
76qrb0dPps3eNNe31dO5UQ8U/nUE857Ec6oGqG4gmMytr3YR3SnuUS5Gzjz0
yROFD7idqH1A17gyuDyH75wk3MCzoc4gh9MA0VEj4UbdWP3l1S6n72gufOqr
XU900VTfUk3tqirNNL6e2pxvLc1hfFW1ORfOA54yTGM4C3L6OIOWOq+Owdvs
A3mD5BFWS3xsK43n7Mm1JYeN8eQHtxC81tqf2mrXErw2gkkuRBudeyvNYfzZ
wXk9d2qo4IMnsap2ojfoqr3a7dSO4g8dBL+F2vC+ccHlK3ITHDoKT3w5+ILQ
j+rIL3R04r4SfCb4tPBt4OvgInXQ3OHCq51wQyZ3E/xZweOp+D+IDxEn2ph4
3IZYD7kIc4PrrNAM8Xd4FvYa/hL8MPjV0CWJpyA78KP1FswZwfNFwA052Vd7
dU9w2YncRFcEJjwQmYnvBvlbMbpuh16HvYtN+7L1zwyeL8I3EqsZGNwHMyd4
PmKQ/kIsBp7E+vgBsWXxgeArXG/91wfP4SgovM4WbvjFiNGimxAnot2WXKvg
ehI60lDNBQ41z/hjsOXxL6Bb1YvuX8C3gI+BNnol/oQ8f1biOiNt/A3ETPFV
cYabg9sA6HLE+vGLcc6cFf4v9h4bCL8DdhA20JjgNkj96Djg38CfgI1zb+Jx
T9rTdP7jRAPoDNjP2M7Yt9i5t0gnwZ7Hln9KY9AjVqkfXQU/Bz6vvNyO1PVg
dGD8LPhbsN3xf+CbwC9xhc7378TtdMa8m7jtT0z6UclA9GzkYN3obegNOwDb
FVtgndroL9iv2MXovOTeYCfThy2HTbdGe4Xd8pP2CnsAW2CX+reKF8ID4Yd7
NAa7DjuMXPOcfUAb2wHfBnY4Njj6PXo++gJ+U3yl+E65izNFq9gT2BLYEejd
xEPLaD9ma0+4xzN0X+AB5Ift132apTsFDRK3PqA7d4PoEzqlfVD38nrRNvbE
AtEAd45cAe4itEA/NsdzVnfP/NyRD3N139n7edp/7tkc3a/+wpn7Oil6zjR2
Cf7XW4LrJ9A1tH6n+m5Wf1m1yTvCNzNfd6GH1uL8z4muO5IzSI7QkMzzhPBX
4rfMiysHz+dD78PPii8XHgZvIAaMPU0OFX548tzwn92u+4vuhQ5G3hF6xh2C
84j6H0zcL4ufllj2sMzH3G/950bXLxdp7F2CszQ4TsC5MPq+kO/yanBah87J
T1yqMRPVjy3L9wHnjcT3Zmjm+4MuSsyAeAH+NvgmPHN45u/QP9FF79MY+B8+
cXxs52Su16KXoqPSJnZA/aDabwT/ttx3PaxvfzP4XtDeqTa4keuFTxc/b4no
cSBiQOTE4uuC9otHH0c+GLmR+MXwiR0XPc6NjwyfCj4WfGz4p/FdEyvhPb7m
eeJD0CU0if/2Ge0h/gNywhZLJqwO7nOCx6wJ7rOBH7wknlAyemwYPxx08Xxw
u5/3L4Z8W5k2/JZ6ndqcI75L/Jb4tPCJTdBY5uOTwQ5Yr7Mg7xH7HzuAvg3q
hzeQ05nnl4kee0N2r1c//pkSmrtavBG6wcdB3yb102YN/C3guFl4TlM/6/4V
HD7xn9LR/ch5PjnhCQ7Vo/u/3hIfoA1/4Pzf1LmXie5fZj+BgU+QPcjzOQc/
Q34Ts013uaza2AjclSWi83eCj2MMNc/8jmab+vHP4xOYJvzx/eBLwv9DTgU5
mchx4hbEL4iRkdtDf//Ma8aRd0GcirgYvHeQ+plLfii+GPg0eYbkcm9PPI8S
vwzrk7tI7iG+UGB8JjjUn6qNPwu/Fn5y+hlHTnjZ6P5zcs7I/dwt+Nwb7g98
Ap/wruD34i71c6e4f+Qus2dfBp/PXPITgIletFv9yDXi/1+p/0eNW6h1mU/e
6afCgW8BxjcaT+xmjK13U+q/9SQ+R2wOHwX5ZVUT7+Md/gpk7l61yUOj/7fE
9/x77T/xwdGZxyKpkX3EgPYFf6bN+B06C/jBD8H5APC+FXxiSvs0Fx7wc/A7
iw9vf3A/HnznF42hj2+hn/oXjSH29FNwvgR/wnePXvNH8Pgy+i38AJ8vOgLx
dmLwxN1+0xjaG/VMXJ6+g+onRkebODX9f6iNrkycnhg9sXraz6rvkNr/qs1Y
4sn4d+wxz8dDm1ghuiKx58W6L8SxuCPEsmh3UtyJODE6HvD+EXx4PjnW8Hji
45ngl7f6vMx9QfQRzx6dug0BP4IXbVEbO4Ox+JsYf1T0vC7k4DWCydyZgjk2
9XfkYxHH7Ko2OR4FNZc2fqo8mKnLL/LakVu8L6wx+EHxi6KDc7eIc3O/0G3I
Y0bPIXZdVGOQociGd3VP+Z0Gdwe64vfM0Cq0gKyaL/6BDYDezl1EVnEfoUfk
EzQ5VGPgN9Ag8gM6fEZrIXdYv4jwQebAK+GT3DV4AfyB+FI57T97Rpv8AeQV
fBmeTNypvPaZfSM/hlwcbJ8K2pMKujv4SeirKJuogdWVNKaS+mnj/64S3a8M
r8CvRFxoZuK/tyEXHXsO/z4+ffgGejO8BbsB+wH99ITocgIZQdwNnzXnM0Xj
PxEvxH6Dt6Aroq/jH8fWwf5B58UmqB3d1sk7Z+EJ7WHHwu/JbyKGhC1DvIjY
EDFWcooaqk3siDZ5RejQ5DqSbzA4esz7lsRjl401nrHM76y+Ruon5gT8zaqb
HrZW3tzUbQZi6OSgPBQ9v431euh7kQPkdDQXzuQzEltalng8iDa5TOQ4tlQ/
v4tpqTtCrgc5Hw8lnnfXSm1qnsnBo91G/Zw/+QfQAPKPfuL+1TWO/CbiZewh
/nJ+20HuFHkp/IYAPRgdmN8E8Y68AuoOavN7H76FPAH0sI6aS+4VcJYITnv1
o1MDk7HIGWTqdt1B2sgfZAfxmynCp6NwIN+UvFPOkJjgWToLzpCzZN+xi8gL
3Zl43Bp/8fDEa/Iw+Q0Rv/sgJgQ8dHti5EsFm37iRPjHemk8eg2/Z0Amk09K
PKNK4nml3bXmI9HzHbtpHL99QEYTayAv9qnE4x3E8bEjyA/gG4hp8hsBfgtA
PHqK7hr+Zr6vr+ZyrswnVsJ39BFuV+i7+Fa+YYBo4FeNZy1iHeCRW7OfYE7V
t5QV/t31XdBtV+0D/ILYfWvVxO//EN0OFU0SQxmk/iXR/bD47rE7GA+Ms3Ve
rAu9DBHNoMPT5k7wnnHcs1yOC/egtdYgJoPthA1VTDW2BzonNh+2H/bI3xoP
PuzHQO0DuA3XGOxD2pzzXdF96yP0DO742NBpgc+arXW/uFPk8nCn0GHAg3lF
BWek8PlKfBAeyLzWojH0GXRQ7iW5oPzOBR1srNorJYPQmdBveGac/eXFNIin
kG9K/HKsxjOPNr+XIY+MfDLkF/X5ajNmnNYiVwI42CaswTj0N/RmfndAvhyF
WA7xmvuix3Jytjp1Xowlen4Schl4wMUPg/16oeBjx07SPOBMUj+xAODfpXUu
VhubibnMI59jgsazDnoDOgO66zh9L/Mu0Vx8f/xegPjas9Hb5Gbjp7hCd4R+
/v/Fpbo39BMzZexkjYcHwCPQ+fFBXK67gw9hhnDg3nB/0P/JA2cu6+PHAB/2
En0WuwL9Hz8DeV3oP6Ol+/Ie3RP9Fb0UvMGL30cwjzHoxuio6N+M3afx6OHU
V6udlzMm+JnaUYV3xaQXXSmYyG9i9MTV+b0mucPwf/LW+I0Dvj7yUMgdwzbH
Rr9ObfKz0JXRi/iGa4U/eR3keZCTQO4Z42cLzvVq4wNgPvo4OWCzBIdvIxcM
PRy9C/i5sTdoPL9ZQw49Kf6DXEReInfJTUJekxcxV33Ep8aI5sFrjnBDXyJv
uLzmzVU/sOgvJ9nFesivBWqz7jyty9zO+t4jpRPyjexTe+HZTnfiFt0L8mMX
CM58tcmxvE7vntRatLHByevmbOCTxI7IJSSOAE/hjIg1Ed/m7JCt6NTcEe5l
M82to7GLNJ6+2wWzudqMhf/Bv+Bd8G945f3iq7ThifhZ+RbuJTbnHRozQvNL
iXfSj28M2/VOwUS+ERfExod3wgPhn8QH6ed3BCOFA/D2aw7jP7S6Qub5obWs
bpU5bz4anT5z3zb8Bx6Vx3Oi/3aXfFR+V8DvC8h/IXeTu88dhw/BjyZq3n2a
C62uFN0/qjZ0mxsHD8ZnB/wpqpepTc3vNtGTNyTeBgd0AnQDfttAfJffRCBn
wQv9EDkLfT+qtbA5H9O9YN4jGr9CcKqIT/AtxCff1zcCJ4f3GdJNmMv6/LYS
P8UC7cGz2ofL1AYeeVeMeznxwu9V0f/XRM8V43mNYAGHewme3Nm8nDqdG/RG
zAAe8rPVhTPPbVyqvWJ/6CMGQD/nzFz0nxO1Pw20B49rH54RDqz7tPDItXmH
Lw7dcbW+A/1yreh8luDcoDvBvVqsslZ3Z5Xgk/eyQest0H6s0bev1Vxgvh5d
N1mWuH7POUJr1A/pLPh9IvmmyGvyJMixxuffVO0mupvwXO4nNPySxpM7TOyQ
+078kDbyi3qD9naR2pngrRP8DYLJGPaa/7kwM/HflfPbs4fVx/804Ddor6id
o9tX1KbvFY1fJ9zgY/M1n7nkOL4a83/XRpvfHPFjiD+j63InkJeUuc61STjc
rPuN7sv9x7/RIHOfxCf2fCB6nKRG5j5ifKc7o/vq8M9Vyvx3oegV+Pffj56H
Xog8+MxzUuATtcUr0Jfeja4zsB6/X4LnkNfyvGjveeFDu1Hmv/9EPnbVmeb9
Htf6v4zut5glHgT/+cH6vo+u41XO3BdP7OJj6yuWeZzwJ2v/F11/wZdfPXO/
P36SEzP3ZxS1+pvoehx65hfRf1t2nPV/HT1uWSdz/zg+8GPBM/PfoRG/2Bbd
V41vljuIrGie5ce+Xouei4zdeqPwAzdgFBecupn/PwV83Q0zt+HxCRyKHisk
DoYe3yJzfZ04F3Gtf6Pn0f0W3ZfAWO4JdwRbC1/qLnv+zEq5zHPq8TewBvCJ
mbC/7C02CT7WPdob7H/2h/jj3ugxSM7hKJ0FtIMv65D2AF89+8AZfhTd98/e
l9X+Xyw6g8bY76My3/Pd0dfGpnubO5d5TOzv6DFT4oGcM3bjUp1PxczPiHhx
ycxjxo2z/DhtM2v/Gj3OeTC674bYKXv8T3RbAT/MSZn7Yn6P7gMijgrNlsmc
bt+ydunMbRDovWzmNA9dEGODNtBFj9U5brH+rdFz3uplbmthZ7EO8XHWIu5e
SPcFeB/oHrHmDt0X7vFfusvIYeLKexL/7s9Fn9gYRbWH7DdxFvacuAd3mPuL
vXqC+MBU3RPuyJGZ4wqe3In3ot8L4jzQOnQO/6ipuW9Ejz+he3DXCwp/4qKc
H2cHfREXh8YKWDvLPC76XXRbHpv+HfEdfKrbo/tjN1r7j+h3hvuCr4V9Z8/3
Rz/LFaLxKqLzfdF9eRfqPE/QmaJfw0fgIfixoAnogTN8UzB/jO7XIx5VIsvP
C/gl+hx8YNAyd5L7+H/tfOJj
            "]], PolygonBox[CompressedData["
1:eJwtks0rhFEUxu9972UURWMoyWcJe1NkNspCFgobmSxMKVmYshJbWVjYjIWN
ZqVQ/gU7iQwSmYRoUkPkczFR+J2Oxa/7PM85733Pfe/blEgOTQfGmBbwcO6M
aUasEK5BOfqeLI4ehCzM4sPWmDvWT3D09JJvk1Wjj8n68RMwD6fkP2Td1Jbw
w3CF/+Z9l+g5dA09OdZHKKKvj3wKKrz2Sb88V+b1HbL3ALSiu2Ccegpfi75F
j6AXYJJ9e/C77JFnLaZuYTHQGTvQB+Sr1KOs3use8qzMsE9Wj19Gx+j5wL/B
DH7T6tkL+B2r30C+XRtsBfoNG7zOkP+fIYp/QqfJYqw3UEnWiA9Bp9eL2EPH
qX05nVFmk+yC9RWS6BOjZ4nAaKBnKkGHvM5aoKcK/e501jHqZ+gXeKZ+BBmn
M8ksG/hSdBadQyd4Joy/xv/i66z+C3InchfyT7SjH8gygZ5Z7uIQv270Tv4A
az5KNw==
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1XmQz3Ucx/GvRY5sjt0iKtaVu5REB5WIsmyE1DpyLialmEw3WtkcMSPj
SK5xTaXERjRNTQctkvssMkohK3ckPd7TH899vd6v9/vz+d6/zejzTKehRZIk
me3P+pQkSeXrFU2SQ+quxZLkNVkb+qK6Gp2s7knzzW3lW/Hv6g1HOlbivPX5
tArN0R/Ej8aT/DRrOtF1sV7/X3Uj9WU61syDfIr8Pf2G9Kjscdko/UPq69V7
+X14FZl639BV5p/ir/CLcR/f1+w5+Sb6j7UD5RvovXpjZP3pNllDelh+NW7h
S9NGuAm3qqvStvR9a+bH+SMPe+Vl5b/ScvSSY70Ux6Ll1TVQAT/pV6ZtrMnB
QxiDLvhRby2tr/85vayuiVrYoF5gr456GfbNill1zahxM5pjo3yj2V78AToT
c1BLvUOvOq2Du1AXf8gy0T7W2a+HbDvdGfeX30VPojS/0HGHxjnza/kFGKY+
ob+aVqI/0M34APXMfUg/xnGk6feTreBP4lr1SnoGI7DafkP0pzh+dtxvZMu6
ow5KYbLe25iEiZiA8XgLeRiHNzEWuehvTS97d8S4eKftXwbXYbP9r6JFkI4v
ze8y05pvEdeCivwmegc9To9hrj2nm+uOXLTDUXlxM8VQBQfjXps7ptc5vh3+
gOxG/meaRn+jXfXHo1s8X3xk7qw8A43NVIv3EKkogxayLGSjVHwfKIkSWK//
fbyr/Dx7zcVnWGbP5+M70TuDovoX6J1xDq65NT/STDl6Vn2N/Eh8A3Q3vYFm
Wt8v7g1GIyuen/yUflN6mv6FurhdPcs+7WiafTvLVqibqRP8rb6IJnwBPWhm
BpagS7x/9GX7T8AjqB33ErfFd0T34FN5PrbZch3toPdYfMN6lWIPWogr8R5j
kT33Y7BeffURfh6etfZP9SpaMe4fLcCSOK7ZpfFM8Asq6PeVLecLka7+hJ7G
EKzBw/H+2ncNTqkHqifxJ/gB/DC+rHVP00HqLc7/cDwb9Uj6Qlyz/Av6HXpj
q97dsqn0OaRiefyexfHjmlCcH0BHxfdi9h3rHqVf23+L3gV1D703cH88B9k0
0oD+Lusme93MPfE7pd7N78EraC/7Ku6D+d7x/PiFaMn3NFsoL6CX4hziN4d/
QK8B8vg+dJn8Cfqt2ao0R54b3yYupvz//+Y/lOrSPg==
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1: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
wuj41UHf53lIIb9joE752s8m/hc1WYBv
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1: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
/MB6YU9J7g4jXiwz/WJR2a9tAexNyM6bo1uDsN7WXh0l+7ly0i6ap/vkuOo7
83Oe+JHDAduz97SfhOl5n/tPruwr+1fA/NnSV+yf67fhfswCjn9vlPiyrlj9
AeJJ/7yyivlxJuynw/z8ZtVXtvdR099Ua+LtWhMfufyT89uEzod6A/YL+Q/2
E/ae9OtiqU/9ro3s6aSemaa/cpbam7tC8q/ifuOcdn5+9DBX//xB6vG9zwm9
G+pov858UdY7JK70In6DfeT9uo326+zOmZEZoba1J019s579zQKxLz0aTD/R
FpUfYMgP/JffXzdHMa8vS+UT/tv311nGn36q+g4M+ef9zNXn2d4W6PPA5K43
d9d4BZj3J4f7eR/swf7g/LUBpYczxH5uipv8o8HUkxvI/py5QvxLdQP54/fO
l3ret7Y/aI6R57cVs368oetjfqzT+IffXx8MJwE7VfujgPn5Vfo+1uv7i2b6
7vSDDofrXX467MXf+O/uuaa/LhHAPmK/kY/je+An619U+4vIv17ePQJ7Hq62
7nncj8uj/Xjuepbf6dlR5YftX+T53pT+61XqX7pS/6b0z05dSvoz8UbwYwXL
aTr6xYp0ftjvH4b6dElmZFb4/LNt5nyowtQrKkj/7j6T44epQyupXzSvG+KJ
CtU/ric5+4H8K7Q3T5WIvl3bSPbx/TJ5/q5Gij9PXCj24oo2krdHh0t95+8u
P0G8hfMAYNRPWP8dnkHflzxgtcTL2QkdRz4Sxju3zBd7ctj1l9v+Q9RHIQ+Q
Z9h/xHeIBxCv+P3DjTqOeAXjwPhejtQvgFHfwH6i/uP3v9WY851mtde8P0mV
X5432/S/J3Q90Af4OzwPDHmEP2N93aT+jt8vVIx4yOdnlcl/tph+3pjmD0Ml
HwHGfOF6/jo4k/V7TavRp1q9/wD7wXnRaRHEE+jHxfqonva+kxfEo/CH/n2C
hD5P/J7k6vuoZ5G+PiX255o45QtvveTwcjrQSNP+a6bjqN4vwX4AQ37g77Df
OA+CfgBD3tketBr5aFEM/+z7d3dfCvwHvdhvX14XKoZ8gF7vfCe1Psgz1gfs
54815rwwqfQx/x2255HAvn1y54fAsH84X5obTliBeno55xOnSLzVUs72abI7
H4J8YD9I3F5z8oD9QL6F/WA+uPM7YMgLzX+Pkx/IE/jn3y/oUOzbn5j0e+7X
+BXv+/lYh2K8D3/k3xdx8sH2ytVPhkp87ffnLtTvQ7/wfdSHUW+x8gH76/e/
15j4NGn8TVL5i/gRGPzH/PCHmN/3v0fVPvn6WK3PY72oPzHOU/+A58PtXfJG
gvK7e1L5O/iB8xuabt6+IDN8f26T5hvIj8J5GzNcfI16P8cXyC/TJf8r1v3h
84Qmnv8rqXu0IZ7cIPnmhyxfWxsDyDe+D/sR9t9cl38o+CUtr43rS79uYPpH
lnK8PnU3v/9iPddjTu7i94/Fdb2oz9Lfw/Zzv/3Fzfo9yFfYfzzytAzVR9hz
1O+9/o70UuZvg6uv8H1DV9+g/GGx64cL6W3LcvWF1PeiI17m8RNBXOM/5neJ
0gf7SPFYpy+0Xsj1tp3iV2ZqfQ35O+aD/fT7QYol323Uehq+h/3GfQK+X7FW
+Yn1DggZVCb26i/cPxVd5fr9/P6YMupvf/d1V48J603vbnH1FV+/Ec88Kvb8
96ZeOk/rHch3/fhiDc334Ex3fsb1sqVyn+5doueOfpm8P1e3Ej8XDGBcP75V
+cfyWsz3lWZtVf1Dfsr8iqp8s39awPnKqbK+wRWaL9vzJ8QLvj1JBFXh+1dK
PtrG9bIlqXwS53XhfA3zXT4J/Ue+6Od3U0Vfm6Ue9KLmZ8gXwsd+9prrHwi3
e/Y/Xf7F9c49sv43abzbhxWsV++t0/yI+bFC73vx5/P0vgnXI5b557HnF/P+
3CX99zcVcT2sR4bmA7CniL+RT3F8UaryCXmifKhln8a3kG+cx5ydmv+Sga4e
xPTvFP7Jfjx6SO/Dhf547C279X4X4TsrNH/E/sPf+Pf1YmJP6uV5F8/w8xu5
3p/XW/zHRtKPiR/i/mCR+gOW/2zW08f36/0PSse2iv7UuvuZiDfC5TR+JfHC
YKmPpvwCz7eG45MHRH7+GAs2hOzI3ab0k5ydM5jzo3PKgnB1f/tkl/pvyq8G
ivxeWRXkpd7vPMDVh0L5XJ0u8t6nit77fgvTe/z9Js7n/yXyPDLJ+V536bd5
oEX7b14P53+0hfWja2ZkdTj/5S38/Csufgm3/6+vsD3PviNO+nrxEccPon9d
V43Hcb+W9WFVcEsoTqPQn1Pq939kl0q8N4/34Z6ZIj9vir14gftHtzt/iPMc
5leu6EOWnp8wnqL1dd6fp0R/7+d4EP5lY1sQmsuMK6R+FW/j+lSzrG9yE/mL
uXPdeW74vyXv8/j55fXMz6ly/vGHOO3XffNcP0r4ez5H1xVrfZjMy6wSrve8
kMP1hRkfMX1Zfyd//larq6dSPXLYNo0PeX33yfpuJ3l7/mUXX/r10Szqhxm0
ezvLZ+R10d82kdeZmk/x86t4H/aexvx5aSXHB1cKzlmp+sh4RrAjLAAMLlL5
p/yoW6bm78Tf0zI1Xyeqdp4j9no91W0fWi9x5SrUS+Yr/X5/QrnpXygn+Xq5
fbDsZ5nmO8jHiO9fwz7kK6bnv/6Mnj/wDOvzAxPqyD/8aqKrl/v3/RNqH73z
5RS299fp/GJ8C/PvcqnvDFsh9fxTpZ6/wtTHp5l62NNqX3h8gujLTNGXyerv
Wd6a1V4Bh3Ix5rDIx5FmrTfie7CnbF9eUsz7+7yhZ7Hm2359X84FTy5S+UA/
CuQR/hoY8Tnp43CJ766v5njjOsmvnomSPRn1I3f+hfMw9K/R+c5vxB4ecP3j
/Ly7PwZM+nqv6OvKmmBq6EA+GaDnubSeD6T+dqu7H4txOt++DL/HUcLruiBd
z1fD+1kjhkr9bX8Zx8NXyPc/rub+pKvl/D4zavod6jmeQj/EhfWsV8m9ge1n
oO/+LGbuY9Sa/kWH/d/D2ODL06j1om9jgzHhhnRF/16pYrYvpbJ/z8vzj5j+
8lr2n2tdPTHcp0k5Qu+PuL6y9VNXfwnH7/qE8U23J/x6wfyE0LtMzxuZ3iXy
/TuZv0l3ngH5R34Jf0jjv3QY+Sbz5TE9zwi/tusKd35B8clB1API//cvOcL8
vmBYUu9jMn1L5P7pMaMfx0XeF3G89cYxza8JX9mN5WnmKt7/fDm/jq7T+5zI
P8J86KOf4vdhirRfjPzXMq7fbf35eVrf8fp9a8r0fJK//7H+fgD7h3zxv19p
/AXM/JlP9nzeU0f4/OyqD6T+gd8TyeN4Z1w/rR9eGYpLR7qepwMjPwv95fZK
9IuVBGG4e9utO7Wf4puQQRN2cnz2dJ3GlyxfdXL+XaL+HvE68Xt8lbkvU2n6
Lfk+8AO9RF7KK5n/fUSev7eZ/ddlrt/h/pQ4LLzW9TuE/rnXnSzfqy6tofPX
Xf8jz4+r4fOZnni/UvUb/dEsFwcD1OtYfl5T/awIA5Lj0s/3feZfx/DBbJ8u
KOP6/I0inxdxfDnp9+73Fni+iao/8Ccsn2vNfYlytjMT0I9W7p8v3FPO+flv
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
uel37rwsZE8wUf7/St7exPff0jK0fj44nL9lp953ofP5gWW8zlT+zfIa1358
7v+Jan2NzjN+dUDrYaTPd6G/o0T6R9r0vgbZi7yY1g/C4X+cJf32kVmiD53l
POOfVD9d3mmn9p9RPePP8nsj07j/YMF57N+WLdtMdJUXuvvXbO/k/uoNq/X3
mll/F6s/Yyz8vFzOUy7OZ3ovbtffp6X7ffvlvtCdJf7v5aRzfXdEj96sf215
/u8DNpXQfAd+4X4vj+adNJi/P5Z/z3H2zwVfV0brnrHR9YfT9+Oyvkub2P59
6O4jh/brls2uPk/n40N5vOaaLWzfIi4eoP6PHnV6X43uDx2X+HVpkuvdl2ZG
qP9waRvF6zOzpB72DfoLp4n8XMPnK9MlflgUZ3n/8Ta2V9nT+DzmdelHuGEl
70fOuVzf+KaQ8o9dX7jzb78/fDWdJxwb5n5vB/6UcRGf14yR/KFXLd8/Wsr1
kzXT2f9cPNjd36L670lXD6D6fKm7P0H3RT7n/Z0+ppn7wU6V+3T9+J7ufKnn
NfZr1PtX9PrdbXI+KPXamYXc75SzQ+8PsP38RvonuF/q2zf2klzcnpWQfopC
/f1Z/v3vzczPJ/Ko3p/RJUPzUdqvThkaDyE/pP2a3sLn9VOEP6fE+TxwTi85
L8jj+P70zixPO5dSf8ZF35ffW/u6SPRV+q8iC6gfpmN4TznP+sT/vfXsWs4n
/5gWwX1Jqnc1ddX8guzx1Wfx+6NzJR58SeTpCTrfP/QP93svJO+3yv4Vx/T8
n++rF/u/R3Ap///JPDPbnc/75+fjgt+F/eT95fcCRpZyPfIRdx7u5zP38H2Z
b915Ms5LuQ5XwOcvp0l/7DjpR+gp9fhfcT3tv//szve9+zO3c/1n6zmZev5G
/HtT/n8OxnP9JwP39Q61Bf8BVuGexg==
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXf8l9P7x+9tj8zsMlJmmZmJ7JGIMioiIZRSmelbSGSGrJCsjJSKqLRD
VkW2ZO/sPfq9np/r9f7lj/M4133OdcZ97nOuda5z7oadux91TpYkyVkrJUmu
eGiRJAco3FUlScM0SVZQeF3pOyneUWGo4JkKYxSGKXwp3C8UZgjeS/l7Ktws
uGWZJC0E763QWuEIhQMU9lAQerK8QvM04tUUVnfaCgrvOK2+wmyFcQq3K9Rz
/ooKazhWt5PGqmdLhTdoV/E+CpsrbGi8NRV+0EsuUfyuwnr/aXN9x9R9qkI7
hfYKGziN8jspNFLYUuE7dX6JwhzBm6qN1RXech5laPMntfWD4sUKH/g9NqOf
zt9IYQv3g/Y3Nw7PTZy/scJWjjdRSIvAawassX1Gzz+rnTZq/0iFgxQ+VthK
oUkadfDeaymcq+ceCs8Jfk0feYHCMwofuV9NFXZwP+jXjo4bOazvd9vZ78l7
fKfyhyg+VuER1f2wQmeFa9SnIQpbK30f10t9w5T2q/IHKvxP4QSFXRVaOp8x
/jqP99tb4WfB3yh8Knhf59P+fo53UXhb+W8pjBD8l+q6TeFWhVbO31Vhf8fN
FVp4/OhTX/XnUIVK4XD3lb58rfLvKZyo8GYefeE9D3W/Wri+Jv4+hzltH7fZ
2HltkugH7R/pfrfy/KrVd6favkPhAMH/qL27FIanMf8Odd0/qA/fK9wr+Fvl
LVLooHCc8+n78Y6PUBijvE4KSwWPUN33KBwl+ATnt1Y40fGRTmvpMe7gtDbO
39f9nqk6lqrOkawx9WWuwkilv5DH9+/s997F3+YUz4t2ni87+/ud7n7Qflf3
m+f90qjjHIUznE9fznTcUaG726Hu09SfP1TmUYULBO+ssJxCD+ezjs913EXh
ceWNVugmuLf7QTs9nX+aQi/H9Ot+vdd9CvcLPs9plLnIfaQvfVwHfUxV95Pq
ywSFg7U2GyneJI36jvN7bpxG2QsVXhXOKwq7qo1L3Q/a7+d+8/yL6sxV5gvB
/Z1PX/7nmPf43PVdoTBO+E8o9BU8wPn0cZBx6PuVji9WuNZ1gTskiX7QzmDn
X6JwleN+TuO9GeOrnXap83u439e4Duq9znUPVJikfl2hsHwW493e47Kz3v8V
xdOToC/MFejNIPGebxQ/lgT/uSkJngEvgWesmgSfgZcslwRfWT5Zxleg59B3
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
e3/isCrmK3OVPYGd3C5zkz0n5uf/AUuOO1c=
            "]], 
           PolygonBox[CompressedData["
1:eJwlkL1qAlEQhUe9O8EihY0o2FgGG01IEUnQIhJwEwniL/EPhWhAYjoLhfgQ
KfIGgvgYafMKQrD0JfJdpvh2zz07c+bOZseL+ntURNLgIOSxjIm0VGQDTxBC
Ef8Wv4eeQ5PzmTNdgqQz70jYcyDyQ9Y9fgNWUMGb0z9Ad6FNbRzu0K+QiYhE
4UMtw/f6jDfe12q1F7CDL7LOqS3jz+BR7W5ZZ9lTSDmbcYOuwomsX3hB12FC
fcD3sd8N/vh2YG4F3VfbLQcF9AIGfn9q1ugHyNMfBrbbJXyL7ThRu7O/awJq
ajP9rBI9I/RQLWvP+Uot02dt8T7RHbV/tcL7B567JnA=
            
            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1nmQz3Ucx/EvrSt3GDVyRSVnbpIjtCjChtzkTMmRJBFWdhe768w6FilU
VJTQRRTlypFKg2mSY5qmNErHNKXp8Z7+eM7r/Xq/35/39/v7fj/fz271YePT
xhVIkqRIwSTJT0mSkuLGhZIk87okebdwkjwgl0v/UJ9Ih/If0u361ovnievr
vaJe2qBUcU+5TrSqOZ+JL6pdwxZxcWvW0U+tb05/4Z+iV2hBa/qZ0VO8Qa6F
9Wv1NaO5au/L9VD7BPvF5fUeFHdWK0HL02z5o9hp3QJaVq6SWikzTtGDcuOt
W8OvxjNyz8mV0Pe7/Kvix+Tqo7T6Yj5XfhEtpmed/K84hBvlG8rVFe9QPy/e
TtvwN2Epn0aX0OvNSsEU9UJ0Dh2nNsWMV8RnaR4tqXeXfGE9h+k9ckdoEX53
PHtk6VkuX1PuVtRCGRxXWyg/RryP7uWfpEX5iiiGyfw++bLijeKvXHeIuIiZ
x/lT/CFajv/LO9ugdyP68xfwjtoAegDV5BfF+8NkzEV1+eHmpVvbhV+jvwGd
IN+M5vNVaTW+uL6j8T5jP+BjPGxdZvzG2FuxV/R1pEPp8+q30Cr8y+L76CS+
Hm1t1ml6xv2fpbfztdEO38Q70D9RvFV9MM2IfUBfp7NonjmbxMtpG/4OLOPv
tLZS7GUs5W/mK4sz6Ln4XfF9YCSO2HMzaI6+sdZvps/SGfrr0xf5beoNxKPj
3eN7TMQFnMcJPZ09gyO0gnUraRU6GB3UX+NXxXvFSjyBVvp3yvfR8zltRlvI
dxG3pH2xK/ZgrKMr8IZab7qeLozrYJW4cnwPsbf5OfQS2scM/gv1xfEb3X9b
THPdDM+zBlLiG1FbGN8dcpGDbMzHPMxFFjKRgXPW1zD7hthfGGH+8Ni/aIrB
6IfR2KN/k5754m6u3YQ+isaYHucNUsO7zxH6KqIPiuJe+UEYGO8FbeN3ut9j
am+J/3YfbeJ7RGuMQvs4X9QHoALGxrdodvfYg67/NK1Om+NftWuYLbcVu2Mf
o3+clxgS+wgNY8/FfesdgwVoZ2YrenectfFtIQ0z4tz0m/uY/5v7K0Cv8iPl
O2AY7sLjKGN9rTgz0Avl8Ih819h/8bxwPxrFeUfzzVlBS3kGo+S28TP5vngQ
vTAt+jHH/dWJe8Tb/FTa1fyBcaainvV1MFWtLm1Fs+M94WRch74U+z7O8zhb
Y0/Gt4uH4j1Y09LMWTjJN+Hni5ugeZztcjmxH+O8jvME02Pfx2+js7A1/m6p
fySXLv469hQ/m15EozgXsVq9hrmD8C1/OJ6d+EvxAfFlzzmx7gd6jD/B7lCb
qacTTcVa+SV0OWrGNxz3Lncb/dm6op5pB3EPuY70ktyf+r6j/+CD2OP8m3He
xd82+iN/Oq6tP4u/yuexTd1Lttx7ct3l0uPvg/mb4xxAN7wgt4xu0b9H/JN4
KjLFZ8y8LD/ejN58bfm64rniSUgR76Uz43yg+/VOoBdiv6mdjfUp//9f8B/k
YPd3
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1:eJztvXk01W3bNy5JkQZTNAghU2UmxEEUSaYKlUqJaCAkZSbJUBkSDZQMSSgh
KRR7GzJP7W0e9jZPe5dESL2nd/2u57rXs9Z537/9rOv6Pe/z/m7/tPqscx3f
83sMn+M4zuG7hU87mdkyMzExNbMyMS1F/1KajJ+/ZyNCmr3247NiJNj+vcDN
5AAF9NzkfCLkiHCp+MWRq7IkmA47xZFsTgFGx7/g3phv4koE5e7ZmYLdJHjw
WWNihR0FpD7AlZYeImjkv7SlWJPg18OmeGffv19+bePBTz+iSmF0f25oUhQJ
4no9V51Oo0CEeo5j0vsySNAcyy/tJ0FxY/7eRzQK5NmeFO+8VwF3Wm9pl9uT
YexlqW33cer/cfPsCbdke55YARLxSqqHLpCh42fhiS5rKqwpkO2U/FQFupf6
3vMYtgDhnXvqZYE+KD5VduDNbD0sLbglbFfUChu+vxkrPNT/f+17fRW1Uyil
f4bR2z1mYdXtkP59+d3Lq/she9DghPa7LthYcNdtPbULouHHdZ1r/+f54X+X
Hpr6ic78AoOQkmN6w9ObAslbVve2nG8Hmx1SSR3JE1DPd/SwzLcBWBK07OhY
Vcu/9fZvvf1/qrd/6+ff+vm3fv6tn3/r59/6+Z+oH6b//fcF7P73H+3/+f8w
dDqkukv8JID3/qKIRGESxHaOrBYxoGDxhdnstxZGROjQl6+9spMEjrrrR62P
48dnd3rKuSQSweY8eDcbk+Dwy4QKTmcKlDVsvqO5oxRkXl3IeX6FBMTZNbU1
kXg59xoMfE/xlMGWV+em7+WR4G7WlPXLCgooCtim7IoohySzisn1QmTIrHn7
JF6ICjKcLA65SI5DjNqlSiTn+rf7TTpITlS3tZDK0kq4Uv+FR6eODCaRqTfs
c6jw4upIlMPXRiDvtJ1U+dAGJ88rp76h90PG1YIlna9bIdkuZOq5QCek2GqM
vfhGhXm/mUPb2ahQpmSiEre6F87t6UiSV+mBKrvkKJ2jY8ATeJfUeKgPLudz
xC7R+Qzzu9I3SG0kwhbWkSsgRQKXNNFrtqYUhnGH0Zrbnqx06J74IghnRyCD
HK2Svb33bx+Pw3H1JKN+hYtTRv0EF784P+kLd++/PE8ASYGZl5eQnLeujUtn
9zEe17j4xfkJLn7/p/hDfdRu/iI0vnjN3f32aPzpb5p9N//J+PjqZVVh0wTo
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
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{{}, {{}, 
       {RGBColor[1, 0, 0], PointSize[0.03], AbsoluteThickness[1.6], 
        PointBox[{{0., 0.}, {1., 0.5}, {8.6, 0.5}, {8., 0.2}}]}, {}}, {}}, 
     GraphicsComplexBox[CompressedData["
1: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
8DTge+S1kLe5pzaIfd7ya9XfoxuEnv2z8VQcv8/v6jB9Qn0s5fCJLl90XSy+
Z6KfsbirE/ZmuMtnXpsd/+pBpccHTcKnYwdrveDsDOh9ut73u+uiUdk/W09R
fM5bB349W/3DgjrRNy9/4PIjYFPVh0WtZm/AH1cK/ebmqX5dlAn6FWqNfwmT
f5mv8vt7JhsMehSaPNAf8f2PwsA/WGz6hDDlDf7IQpsvq4eV2XzC4n6s6WP+
F2HwZzHi4dv6gp7HL4hejvnlmDzjZ8L0Vx6J9/9jnvoTq4P+gskB/79kMORp
kuGP8y4xfw3rl0anCAMfbP0VhDF/LvoMi3Kt3k3Y92fXGr1ifTnrEOqfv+Hv
PguD/pzWiPqV9+nF/9n9SC/YnzrrTxB/5LQ+CdqD+LRNj/D9TUk0M55Qfaye
ZzXs3Q1q7+Y0GH3Cfijs/4L2e841e9VL+sW0X++p90Wexl1E+swGX+ay/6Q8
+m+xf7m4r64K+x7twbnZ69v+kOqvZejPmTYE9ePUmExgj+Ef3Vep+uicFPTZ
avWHrktZfAV9VRPEvzXCt9Eg7rfG/Bf4T83RU1ly7v2Xg4W8/VR+R9WY/8r8
CWHGg9IPMlzzReMdjHjGwbQnMX+d/xOFB6A/8IEL1F5urRP/+eaL9fsjw/yL
64cJ+5+YXyY/UR5ob+gP0x+h/+n3N6ZsnP4axwnze9jffZ/1R9438zl+/01D
UB9x9QroN1cvJcxx2CdXLyRMeQEeRXa/rE8KOs+Qns1m/7z3J+bPNgv/T5ni
YPIX9dOUGKFq8lcV7MFBag/SVUZvyjvtP/EjTPmifQc/rTT7j/UrDKa/6N/3
2iAerQ36Hestnhum8SFh7ufrg0brF6c+BF/3TNDfYj839eEZMbvs4/uzVXZf
fj/byv+4H9bfeD8y/+FmxBPnIR8y4VvyA3PgYMrjLFFwOda/iu/st/583gdh
8jf9Ey8eyn6P/eykF/fn/fj8P91g3if3Z/2E+FA+iA9hP/5usPl+//A+g335
VX+09y7zN7ne75/aZzDXU/8Tpn7y++em2/7e/WX3p/ww/xKel/rJ709156M9
4Lhvj/Ybf/v3uc7mE1/mmwCXmP7jfMn3TWqV+On6rD3keZh/le2m7owK4vVT
2sx/Z35Mxj+tgt7vXCzrXv9Y5X1bexSbq9Snys951EfLNF57C/ZzfSqifuD+
rAc9Gt9P6d7o54J+J/JBl7UAv0tWwV99aivWP96MfMs3W7D+q6Sdh/ll+Xv4
LvSrntRu32P+Vdj5LJePofyzfij0anH5k/j7nYUuHxK/L351hMuHiD1/x/U/
PZ0VmL/0LLD4P/7nys+gr48f3oF8zIuuvivjr+t4VbOs37tX63017UK/ngmt
J69F/+m0ozU+mLkG8ejBqq/zqs2/on/G8zOfKP5Nt48snyjvk37l+omRj9us
em+i5d8Yb3N/6gf/vUGFxqspy7fx+8AnY/2/0DcLLJ8t5ulb/Pntfre6ua7/
JP774d+5+nCc/1pwlOtfieOZV2tdfimedng2HmT+R/ypi1z+J76PV59z+ZzY
Hh20z+nv32XR/+XQAq//4pqhLh8C+typ+u93Qb52quU7GN/69nq+5u/e1/c1
rxp9IT8VUWxO8ke4+rwsf369yf8tWfs7/RxXn4/nXfzbfD8fn5VH6O83pf9j
We8Cq/+WZBm++xBX/4vlccpDLj6Or2Nqnot/Jbs8pMDr3/j5Ka4fKZangh4F
1r8h8e0ZOt7ZafqJ8Zwffz2l+Zp2zQc9bvET/X3GR8PUv4//9yfPuHoX8rHb
lD4vCP6936qGXnhticU3OO9si2dgPyvtfQjQKbH+c+QjZlq/uex/fIX468fk
5Ju/Ld3rF7r6I+Mh+gvkb/KnxDPpneZfUl7Iz8B3c8T6X5x/3vKR8w/j/x3z
mfMHJX64c6+9nxH8znf+Quyvjbp8q73/oD6Sc36nGePXVlu8SP6h/fPf/9Sr
/mzW+c5fwPzlqEeUDNB8w3KzZ5CPIuvnBn4roCfu3mX94vHt/2m95m8b24S+
29a7fCr5APvNhz95q/LXH+qjZTH5Fm4wfOP1f1u0xfwBvx7UGNSXGi2/w/p1
vO77aXz/wOttgu+ze1x9UfKJCZePjfXFpCNVHrakzX9m/U3wWdLL/Eu+rwM9
5kY9Y36cONT8S76fEzB3leZDp4Ju109UfnlB9cdjYj9ezLj6C+tD+P5C5e9C
q8dIPr9d+Wl8m44/6tcHCu9Teb0F+ffTChJiv5d3St71pdMVbu6Mzo/7zbZo
PfmxKrGf+5dUWD5X1MHzlcifPFaMeH7C29i/8J/IDw7fYP4f8LlJ8bnKj3cn
VAX5zULRd8du3Qj+SDyn8tWp/DLR/HvMnws6bu8Jff3EHPgfZyhcPMf8fdpX
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
R9pMvqgv/XzTWJMX2M92gylvlA/qK8KUHz8/OdnsVbHG70LOFwZafdD3114K
+nkLg/7S9kBfO/zoL/n9f+73E7k/3w+QH8gvhPnegvxAfKnfsO32KKynY72z
p5hXh3r/lRutP0L8yaEbMT+3Qe1RHeDfl0aXxwFuVx7os3w18lV/3Y3v3a3v
XWfuhv/wbofUo58p3iP+xebijOabv9R64lsinyP7HY39ztd+o9tL4ZfdOFv7
xz/U/vFZWj/UOshr1ahPbKi0/kTgu17xrdP8wjbNL7Rg/rMKP639+pP197de
TiFf8jV/D1X9mze0n/AKzS+ckGvvWURfd2y1/hPB4+52e08k8eCf+/vx+KU7
/d/jPGi39asL/wzfjf1OVPtd9J7xq9TnFpbgvt55X+s3SatPoz+jGfR6vBLx
cx+FD1SAf0asx/yT65BPPHGL9bugPvOJ1memaP1F6+VPlGl/iL6bL1mn9aB6
67eF/dL+0Dp9D/RGX6XfAvSBPJwH+o3SOmHrVpMH9MMutfyw2I/b1Q8bVYZ4
6ed7rB6L+Gmj9fPAfqw3/pe/0jswnka/5nG5O+X9zpjcNtDzlj2Qh5szki/+
Y9ZexOs/zPrzkt+tVHkoa5D6/qhPNiLf+lGD9rdon+BJ+vvn/fdiv76d+L3C
H2r999xOsTefvYnf/SwqqsH7mEO2Sdx4ap8WyP85e4DvWfqeu4P1k0p8r32P
9W+I3Xplt+VrEM+Umn8u6xfusPo26sltkdevf+8265cSfuzaAPx3ar2kS/M3
yxfJfYzeOkDldbnqp1et3iP0v0PtW1mx5Oujcfr78C+tjPLi+enN9j5A6p9D
V0eMR8CPSetHRn9FneW3JJ//i92WfxJ5vY717kqtt3daP7rog5J6i6fi4X8d
rv3FieeV37trPv8D6feZ1W2z9R/F+5b/271PFbdnt9Pv0F/6/vD8edHpWfdy
3tnHwv7dsMp+DxPy+Y7pc8DF6Pc/TesJJ5Xa71viPWA58D+py/+9v74DIE+d
JX49/Nk06j03IX64+BN9n/A+/OX5z7bg9ySSao9ObZP5E5a730OQ8nahxhNf
JIVOv+6H/S+ei3zE5WtcPlvQPVfzK/9Th/p53yZ7zxNjveOA0uv9Dvn3uj76
HuRWnGdervpHA9GHU7XC/V6D0LtM8dvYKv5Nr5Pd7/vE+aKDR+A9xciZ6K84
93/Vv7izA/S9ysV38h7iYP39tMHIy5Qfr/HMFxnRn9ExOv77jPDpzBPde3fE
x08r/45Ev8+z6v/N0N8buWAD9GHR08jfPaf16vPngP67tP56rYsXwd/z0E9+
iXvvLv28j2o/0UHoj5y3yvWjx39N03xCanBK6m1J5td+04n+iL8DvwMR5GrX
MPBH88ha8Iv+/sBL2fhK+kWKN1m/NPTnF1rfLgI/Fx8F/L5Avup/J20X/ryq
sFXr3yvs9/+899Kn4j3eAy+7fug4fs7vkW/9y/Hyk9kPll+vv++6BvS8pwT5
t8lHav6+BP7rId0xf/P74p+c+P0hgD8vV3nX/pbEm5IP2XdKP9z3CYu0nniU
1hPd/z8Q2F309xz7h5wE369JfukIxXdGDfILbb3Mf35S6pVDzT8WfX724fje
jQvl/v7rT66/Bf7YE8pP96A+dan7fYP4+Lt/5n5vz69Pj8b7olvc7+NIfugO
Vy8W/tD+8nT2PuW+N2k9uHs7+h3zcB8/uWtt4G9fb+9N8fu3GatPIi+i/XP9
NB//i7HQN4+ovkmj3jdpq6sXyfvJAlcfEvq+oL9bPQbxez7fR+3tjP4PN2OL
AQ==
      "], {{
        {GrayLevel[0.8], EdgeForm[None], 
         GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXn8lkP3x6/7Wm6RNR5FliIRRWkXIWlT2pFsLVqIiqQkKktJKvtaUbJE
ylJJ1sj+2Nffg8fusWfP/vu8v+dzv77+mNece64zM+eaa+Zsc2bu+oNH9zk1
TZJk8iZJkinvmSdJDaX9y0kyR/lspbUqb1VKkpZKlwt+XGm50tVKu6qsptJr
gvdU3kjpDcEHKFfVpIbSgYLbK10p+L8qPFjwQUr7leL5Fkr/57yO0lZKGyuJ
pGRLt8Hv7f2b57X8vKbSIWqng1JDpd5KvZS6KN2pF/tGz/+jtE7pXqXrlFbr
RRsob6a0nful3Q95H6WmSg1Uv5bSW4J3VNpaaRul3VwHWhaqnZuUZru9On52
l/r9Tvn7Slfqfa9QelJwQ9erq7S78x2UFuv56UrLVK+R+9tJaQ8/39F5LdOx
p5/vrNRXNPZR6laK9ipj85TSKqUFSo31bC+ldxl/08l77psE3bxTL8ZRqaNS
C9MKjQeIpltVty3f32XQ1co59LYxTXsptXXeWKm1n+/pPhu43+UaryVKnzA3
/B2g5SDnzZVuz6K8vVIH09TSNLZ0/x2d089+7rOJUifTBC2H+nkbt7ub362z
n1PvNvV1K99ScA/TcbDSYe4fGvu4Ldru7jLwepsOnvU0rdB4uNvgd1/Xo8++
Gs87NJYnKw00HvWWqv9uyo9QWib4LqWFgm/JggaeHekcuo5yDi2Hqc3b1d6J
Skf7HWh3gJ/z+xj3w3c+1jm0H+ec9xuodpaqjbFKi9XvfKVFKp+XBV2DlYaY
RmgZ6hxaTnROn8OcQ8tw57zrCOfQMtI5tJzkHFpOc1u0cYXoGK90htJo0XCq
0mLGuhS0nKo01nRQZ4zp4/fof9B7sts+Xul0tw1dU/x7nNIZpg+6xjuHrjOd
08ZQjc9Z6nui0v+0XvdQXl+pXiloOUtpkumi/7OdQ9dk59B7jnPe9VznFTqG
m46p/6BrmnPoOs85dC0XPQW0CN5O/LqF0ir9HqXyc5RPLsU79/Ec/Mw0Xqg0
w7RC48WmCVouchn0jlM709TGVKWZLgNvjmmClks8jtA7y23w+zHVuUdpnNIG
tfNvypLgzcgH+HlLyw3kzmYaz14C9ldqpdQyCxmDbLkiCVmyo97vK+VLlWa7
T+joYjkCDnIG2bNRErIIGYWcqMibzQVP/8e3QmbAL2uaJvjnlq5Ty7+RLcgN
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
0B+uKsWeUj+/X1+3h77EHGN9owcgv5HdDTW/H7LOP1iEDCpCv7+mFHtK4B0n
nKZ6h4fxrSjdWQr5/pvS6lLIbmQ2NKKrTFQbE+xn2VLph1LoAA8o3VcKWfyK
0vGGfy2Fr5B22qexf8laegVdsRS2zSFqbwd9oDfxf+C3Z70pHYptqvwt5m4a
8p5297OsP07pQ9ZCGm1jw6EPYldvJTr/1PNHeBdkop51UfoIXa0csqpNGrrR
IOHsobLHBL/KHFfeLA0bkr1WdDq+w9Vq8yqlbZVOURpVhM5HfpXxzhM8Df6b
R1u0ybt3T2NfcBjfSe/0juDmStOUpiqlSr3NH/A/90ijDryij/JeaZQzZ9Cl
uiSxxzjC36dFGvoiOOcpH+W5xbdGR0S29ktjv3OU5xzPmS9Hq+yoNPzJFyg/
Pw09s38adU5xPyPd7x1uk7otrauCM1LwiDT25Hg+2v1Sdl0p/KzHpLGveZrg
C50zF7dB91H+qOclZTD6lH09PavFnEijPvNthvLp1mvRT/Hz4uM9Qb+v9e9r
3Sd+3Voq30rpTP0elAYee5mt0tCbeffj0/BdgPNaKXzIwAO8LsB5nTEqhT9k
cBptAbdNQ++FtuGCT0zDDzZM8+pCdA7Bb5TC/0w5QR74FvB9nZTG2OFneFNp
eingMSq7vhS+27Fp/GYf8TqX4ct91XOWtfpWKfy6tPm20sxS+FJoA3/recI/
LY22KJ9Mn2n4Oc9UfobSeYLHp+GHAR7N90+jza3TGJfzleYInq00kzmdho+I
9/pA8H+Umii9Xwr/EeN1ptZEHZUtElw7jbHAV7gPa7IUPocHNU576/cHgndI
430o307wh6XwP5A/5THaMQ2/CO/5cSn8R8Dsmc/2/PmiFP4S/BU7pYEH/Ce6
sGmcCM2sS6WmafiN8D2+L/g5eBK8pRT73xVb6BLPtyvd1wlJ5HMMLzOMTfSO
0mWlsGV2SWMfFlumsfsFbpiG7QLeT6Wwf4D3SOM3Ome7NOwdYObyFe7rEtN2
hmm5slRddqVxhnpdjBI8JQ1+1S6JdQ1PgR/AN4BZ45X1w9phncJHWMusa2DW
KPyOdpBHEz0vmZPnZuEzXuB5er3n3jjP5/PRATQf6hXhz5qax37WiVoru6nu
D2nMtdqWXbcI/6ws9tLneW6Q35bEvja2YA2ljdVeDaXr07BnF/jdR5n/TEhi
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

            "]], PolygonBox[CompressedData["
1:eJwlkMtKglEUhbf/+Y/oQKLAJAdCOHTqsMBnaCbNJBzqrFfRkVOfQkIQVNSg
IIzAyCtoghSVioZ+hz1Y7LXWvp2zL3PFm4InInHgAy8o0rMidSMyA79wixcj
+YBeo7/Bha81EeI1cYV3Tt2WuAFXzLrHz5O/dbmAyBtxBn5AjdyBxR34GX0L
6qr07NDPYAgveZr7cD2e1gTQE/Q/esCMF/gBJJjvgyl8DLZGa9zb++iu0T8s
4ad4Y3jaKG/jlUW9Cj0rYgM9wH8CI/CJ7oJ3+J/VW8yN/mUBUkb/tLd6Q3e7
JrhjVhbvhLe9EsNB3eFmux3uloL3aPSmLXQInfT1hlH4l9W3ZohHk0NCtw==

            "]]}]}, {}, {}, {}, {}}, 
       {GrayLevel[0], LineBox[CompressedData["
1:eJwl1nmwT3UYx/FzuW5udte+XUu6llDZouyuPUWKEGUrKfqrpkw7RajQKNUo
DVNNM2QrjQbZ9z3rdREiW7hkT69n+uM9n+fzPM/3+z3ne77n/H7VBo3qOTIl
SZL6+ZKkb2qSFBHvot3yJ0nPtCQpIa5O56nfSWvyT9KF+gaKM8Xn1X5ACROl
G/dXAb10pfrz6l+pLUJvcS25LnSN8Vv1fRpr8tPoL3qqir8Qz1DfQ3uZp5dc
hnif/jLWGCZ+FsXRUq0X/Ul/f/Fn4gdRKWLzXZJvbo5zxp6kG2gFc3ytdgwd
4l7xpniM+iPG5dBCWCN3FB3lnuH70lJ6B4j301wcECe0gVqeuCjmx/Xx31ln
ZOyh3E25DuJs6zejKeatIX8d1bEVd0Uf6qo31NcIKfxyY6fTKnQ/bUyfo6Vp
TqwlftSYv+lBfjhtHdeMp3HNJb4s/xsa8+XVD6MCbqE7Tsf6agdd12D6VuwJ
lvID+KEYgtV8mus66N72iS/HMzM2RW9vOoe+oK9N3KO+VeoZNJsvTQ/x5Whd
WjieVZwf4y7ylWktfgfdxe+hVfU8LNc97oXvE+cPh6z/Nr8Xi+P5x94YcwQH
sEu+ZpxXmsefonP1vIN346xhLMbgR6zHZoxHlnFZrvE+epu/l7bk29G2tK+5
2or70X3qG1GHP8uvt9Y23M1v5zeJ26iPQ8M4r9GLurimNo8O0zvb/bxIyxrT
xBo7PLM6cVbl6tHT6o3iHVCvSFfSC1iFSvxuWl5vI2w2b73YR1pRvoB6E/53
cTncRn3+HC2CGuLq1qhNG9Db1mpizBqMxiD+Dfo61sZ7Z0w1nMEDxuSX6xPP
EOvEGTQfrUWHx/vsOtLN21RciObyxWl7vihdwt8vLqM/NfZJvFPcXrxXLZtO
QhqqyL+kPtn+tDP2QOynnoGusQ2tSRchDfPwsb7x8qPxkfhDTMJETMAHUcc4
vI/3MBaf6z8U94PK1rhlrZvIF/tLr+AiEn4ZGaynmvgM3SSfX7yRlqSH49zj
H3PWjnMWz4Eup7mRx2UU0LuHZrruV9S78guM2S13Rzy/eDZxz9hgbGacPdqA
ptIT8qvFRfWuir3DN5iJcnKd0AfX9eXhGq5iLdahoFp9vfXiG43EnDfiXVT7
E5dwCqX0HVPO0zPX9c2mefy/ajm4EecXafGdN/44lqJMvGfxrYjx6hn0OD2K
nXGu4qyY5x5a3B5kys/nS/MX4h3AGZTg19Mu5jpr/ZvoIdcqvr/xHLBCvI1u
QTG1rXSnMZ1oR2w3b2/aSq0btqmlxjtL/8B5LFO/Hr8R5hoV+8/3EF+Ru0qP
6OkstwT90B8PoZDeFrQ1RuBbDIxvB30NC9AOE3HJPF1p89gL82bxE+L7zq/k
X433L35LxLPEs+iIuB/XP5LP1p9OC8ba8Z2kT+CIfIvYc7mTxnwfv9/xXsid
jPNEZ8rN0PslXYjH47vHd6YrzL9F32R+itrP8X2Wn85PU9tNe5rjMbmS4rK0
mPmHiIfGnqOFXA86R38/8RRxM1QUTzXfWfmm8QytcyJ+o+WqqBXGr+Kn4pnG
/cR51ptOZ8gvxieYmvr/f5b/AEsXGPY=
         "],
         VertexColors->None]}},
      VertexColors->CompressedData["
1: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
0QOii9oFlp5qhz1Da2dvX09Etjclvsy/qdoDFXprkuw+t4NC5XWvq3VElp9r
stFCZ1dSD5Q8tfdNn9UJP2/UzG/YQEa2D+B+95rs1APymzM5t3p2gJCCgbz0
VfR9AdR4bRlZv1HUtRTixDavSKeP81qLeaLDGejxdT+aPKe9vBSu4/Z+DpQk
gJDpoo0CVeh7xyg5tJ4Uu8H1ZZDW+31XqSoBtpc1Urg7KBBb05Bdzk6DgW2L
HgbVtUDp01tayrNr4aTKe31ncxrs+7D9tgK+FSw0erQ13eqR97WTSEfT3Exy
4UBF1XReVSyc7z7Mv8Bk4tY16h4cKu8OsL8l9E6+G+RzGgcNCVTIP9Yf4DYH
y3J9HSr+RK3fldNubYn1w8P6HA2lOnqcove2/ICuFjpfRsU5GfPk2pyKKZC3
auOrumdEiE9bc+CjdAPLclDfi0Pp7bK77EFRk26QJFrN19duhlPzgp0k1uAm
bByNL/uu2LwyH5yWp8TmcuLgR1P57vfcZKD9GjryfVU+mJnPkVGbhgO/eXGK
UjPJyPd6I6prnUmf149ie8pHXIiQ3SObTStvQN4LRu0joewkq+1ZtfPibwvS
GzMJwC+d4hwqUQ9KwwLPrvWwvn+lM8gXJjETC7ptNq8cq2thp/6qpJHp6Prt
v/ZDrLAzZfCJXSB1Vtficx4V6ddiT8WdtpPLg23PW1N7MrAwI9FGIbVs6vn9
f3euNHaOrDPG7f6GHx7jRmPc5W/2S0mhRlsubM8H94+0lbyz6fF5qrE+aS7r
8+2pwNV5z+k8XHrDe0a8JG8zvH28+wgo7oWfqX82FQNz16fXz6bnFwbvX79c
Rs8vUOeJqP2Nf6re22RoPYUjmQonOB57Kw8T4bXZ4JnrgvVIzqp+UHEIyr+z
ev8CFd+yWjeOkv/4pWiI0SZ6/rhfeIOsCxYGAp1v0H6jnnzARZB5bj647xuT
ez65zORuRbxM/uT9FyZP1/MZdx9msveZUfJ1j70LbY6ugYgEj+cJdvVwQbJp
r2UiGU6vuO9pMVgP5iEXxXZENEB6soxvNX3+33eUDdsvXQtu+/ptFKLrYe/M
KqELvuj5PFH9R/nZiZKPWheo59b3YWVlF5HgUp58XJ9jE0wfmf3BcxkROW9Z
zdfWxx2JeViVC6Www/TiESyY63Nz3r6Ans9FCmKKj9UwYNUqn5/nhoWNwS9W
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
tFrh/wHEJQRh
       "]]},
    AspectRatio->1,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(glc\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \\(atp\\)]\\) (mmol/h/gDW)\"", 
        TraditionalForm], None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{},
    PlotRange->{{-1.72, 10.319999999999999`}, {-0.1, 0.6}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7574205061181183`*^9, {3.7574207034370337`*^9, 3.7574207244377213`*^9}, 
   3.757976050895666*^9, 3.757976178108951*^9, 3.757976239679167*^9, 
   3.759851761884848*^9, 3.7598518003781977`*^9, 3.759851889860668*^9, {
   3.759852067323543*^9, 3.7598520869550867`*^9}, 3.759852288310828*^9, {
   3.759852416707157*^9, 3.759852436325406*^9}, {3.759852487393978*^9, 
   3.75985251511595*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalized Distribution", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242654730669*^9, 3.756242659112596*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\<So, the normalized distribution can be defined\>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931700227323*^9}, {3.7530906696469316`*^9, 3.7530907311341143`*^9}, {
   3.7530910016108522`*^9, 3.753091020358412*^9}, {3.7536210031224947`*^9, 
   3.7536210137577267`*^9}, 3.753708349489089*^9, 3.753717464029531*^9, 
   3.755969981992999*^9, 3.7562358366788883`*^9, {3.756239554885208*^9, 
   3.756239564090454*^9}, {3.7562396593250237`*^9, 3.756239677455201*^9}},
 ExpressionUUID -> "1d19d643-9ca8-4848-b7f4-203e6fa12078"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalizedDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"distributionOfCells", "[", 
     RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp"}], "]"}], "/", 
    "totalIntegral"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.753620831020739*^9, 3.7536208658666763`*^9}, {
   3.753621133188015*^9, 3.753621202526545*^9}, {3.753621336367586*^9, 
   3.753621336829444*^9}, {3.753621402086947*^9, 3.753621424325923*^9}, {
   3.753621790462631*^9, 3.753621794027707*^9}, {3.753622558444889*^9, 
   3.75362256340277*^9}, {3.753699856455209*^9, 3.753699876390086*^9}, {
   3.753699952776167*^9, 3.753699952909305*^9}, 3.753705828164274*^9, 
   3.7537083494903*^9, 3.753717464030875*^9, {3.753718563246975*^9, 
   3.753718581050694*^9}, 3.7562396018126993`*^9, 3.756239758288518*^9, {
   3.756239816536984*^9, 3.75623981654012*^9}, {3.756492899603785*^9, 
   3.756492899609219*^9}},
 ExpressionUUID -> "4747c5eb-d22e-406b-9384-b569090812c8"],

Cell[BoxData["\"\< where totalIntegral is the value of the integral in the \
whole polytope, \>\""], "Text",
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931704616403*^9}, {3.752931744334757*^9, 3.752931744498678*^9}, {
   3.752931785062166*^9, 3.7529317876390047`*^9}, {3.752933386865663*^9, 
   3.752933409186058*^9}, {3.753088963635458*^9, 3.753088971091514*^9}, {
   3.75308901981783*^9, 3.753089024540571*^9}, {3.7530892537379723`*^9, 
   3.753089256436661*^9}, 3.75309051725252*^9, 3.753708349490642*^9, 
   3.753717464031353*^9, {3.756239816547715*^9, 3.756239826768875*^9}, 
   3.7564928996209297`*^9},
 ExpressionUUID -> "25f58484-5f27-4f65-af35-6126af2a8637"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"totalIntegral", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
        RowBox[{
         RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
       RowBox[{
        RowBox[{"distributionOfCells", "[", 
         RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp"}], "]"}], 
        RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.752923767012714*^9, {3.752924117380163*^9, 3.752924332049603*^9}, {
   3.7529244437844677`*^9, 3.752924460791657*^9}, {3.752924556943673*^9, 
   3.752924560984129*^9}, {3.752924634296945*^9, 3.752924661318709*^9}, {
   3.752924710247725*^9, 3.752924740336445*^9}, {3.7529249167182283`*^9, 
   3.7529250183826838`*^9}, 3.752925345121842*^9, {3.7529279157928667`*^9, 
   3.752927935206105*^9}, 3.752930902462373*^9, {3.752930971620841*^9, 
   3.752930987164504*^9}, {3.7529311826272497`*^9, 3.752931189795438*^9}, {
   3.752931282794731*^9, 3.752931362737994*^9}, 3.752931455178447*^9, {
   3.7529314870500603`*^9, 3.752931543333823*^9}, {3.7529316197121887`*^9, 
   3.752931704616403*^9}, {3.752931744334757*^9, 3.752931744498678*^9}, {
   3.752931785062166*^9, 3.7529317876390047`*^9}, {3.752933386865663*^9, 
   3.752933409186058*^9}, {3.753088963635458*^9, 3.753088971091514*^9}, {
   3.75308901981783*^9, 3.7530890786286917`*^9}, {3.753089149924197*^9, 
   3.753089217179022*^9}, 3.75308929572053*^9, 3.753089348855335*^9, {
   3.753089535785845*^9, 3.753089559323588*^9}, {3.7530895929824867`*^9, 
   3.7530896081499557`*^9}, {3.753090235204256*^9, 3.753090461994071*^9}, {
   3.7530905514291286`*^9, 3.753090568480646*^9}, {3.753091184772717*^9, 
   3.753091195350933*^9}, {3.753620428194148*^9, 3.753620429598857*^9}, {
   3.753620470136763*^9, 3.753620471065918*^9}, {3.753705839651829*^9, 
   3.7537058402730417`*^9}, 3.753708349491281*^9, 3.753717464032091*^9, {
   3.753718583786901*^9, 3.753718587204523*^9}, {3.7559738887735043`*^9, 
   3.755973896680331*^9}, {3.756236364942437*^9, 3.7562364377284613`*^9}, 
   3.756239601820733*^9, 3.756239816459689*^9, {3.756240553601739*^9, 
   3.756240557885098*^9}, 3.756492899504023*^9, {3.756512301576367*^9, 
   3.756512333623144*^9}, {3.75651238858698*^9, 3.756512389362368*^9}, 
   3.756513294126996*^9},
 ExpressionUUID -> "4b8cbb0e-58a9-4e8f-a4e8-82546973bbfb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showNormalizedDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7566675771348133`*^9, 3.7566675803340273`*^9}, {
  3.757420753705453*^9, 3.7574207555070953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Normalized Probability Density Function\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.7579762494742804`*^9, 3.759851822822809*^9, 3.759852544524325*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.7579762494742804`*^9, 3.759851822822809*^9, 3.7598525445342617`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`", ",", "0.9999999999999896`"}], 
    "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {0.9999999999999999, 1., 0.9999999999999896}],
  Editable->False]], "Print",
 CellChangeTimes->{3.757420757007012*^9, 3.757976060493698*^9, 
  3.7579762494742804`*^9, 3.759851822822809*^9, 3.759852553631445*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwdz31MzHEcB/CrXK2rux5cXadf3YMoD9WqrSHr+zk1R9e0JYs1Nef8cWHJ
GT1RHooe9Nyi43oYyV1DDdcdpckpRFauJJcmM7RyFdGch/v447P3Xn+8t/dH
IE2L32dLo9EirIe5dWiUnVN6NpKZmfj9KNNI0rmqW8eVNWRMue8nOoL9t/+Y
8irRdCl+oRsqgseOKO+Q2CXlNsesjn8pliqUBlJZ1sdEC3NrJjzODJOQBXEA
2kJlfH6nmyDqYboIfVGxdCfx/EhkGeJd6LkKF5n54xQhqbUKtI+gO8BPbSbT
xhUlaF9TwMzPunnSXfGwGa2r2TLjfmKBDLMmu9GSWmFKXvAi0dM3jaLvWVpV
nt4W8jT25vz/PZrZbTTjH9LITHLOsNpNs3CptpsG2rIiP3Ree39mT5gt0KR9
kejU8b8sbqkdON2ITkRHbSx2Ok2nQ1zMQDpa7nX4qstRexi8ZipGM7h3fxie
O4Br7uor6DpJfFv5Jkcoa87vQjc3SZbnqxhgEPNG0I1rLlvOc5xBtL53Fv0p
NEahK2TC4tScU6bVmuSEJtYkC6Reu/3QQclJ1P21ruBVY4xER/Pu9eSPuUJO
cUki+mR9n26iwA3YUb1p6DvrTk0awB1sJK5FaH9Z6mcy4w7V/bVN6PKWP8Jo
9VI4qQrsRPNbQTMqZUNziHgEPS1qc1ni4gHyyPqv6Hbz82sdTzygVElnZFl9
O4RL2WZ4QtxhtRBtCnF/91bIAWAMbUD/jtEaRW85cGHOcQc6aaGoJaLQCwoS
cg+ib+kZNx9Ec+G9vd05dJSbruL1PBcGQg0N//srPXpO1S+DLzwnHfrGDp8A
7S5vyNydMoS+7Jkgz3OgoJo9N4U+bQ4fH+qhYBVVZZ+N/xX2Nnbk+MD0By0f
/eZ2gSh0lS+E+3uvR1OLs+zwD75A05dsR18aKH70opIHMY83HkA3tsv3WHz5
0Fl16AzaXLg3azibDx1t7Sp0svqITfYgHwK3hmnRFxzM9pXjfGgqUenRg7L9
zte/8IHz0rELvZkn5YzYCsAuceIROi/HRM2wBJBVJ+lD60d3CuneApg13X2G
/hb+yp/yF4BcIBxAB1XHBYaFCeC97Pwg+h/ULqCK
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVzn081AccwPEL90jHeUwd7oe6a6Lw6tKrtu/Xw1oyK3oYc1O4dtETpbRO
uhIhicbqXOcxeTg2R/JQqSZJqZTnPM6pUaOLJm0nqz8+r/e/HyJ4v+9OLRKJ
5P2pz3q29RhHp5z+qsJxs3z4uAj2BG+yaZXthBF253hXsghqXPwoubJDwL8n
DWmXimDApi8qURYHQZ5Fj4crRRBhnlV+TJYBgTfrWdtGRbDGeK4lSlYActFo
s9R3F+SkLe+NlFXBvukUUcWyUPBt/Sb4oKwROH+HkIxmwsD6eMaQyalOOEbI
BVUb94OGfWRssHYIsqQFiwPmIkB60MgPTF8C1SmjgpUXCZNp+kL1y9cQxTIY
s5mIAgviNs+2RA3hqubyxWIxWPbzJmYyp0C4xG2cN34cajPWTxjGTMPWTRar
S2JOgtcF6+2S5R/A4NfWxvhVcXBdU5plukgDe8X6YcnZCWCtePsdqeMjHBLM
PDjrlQwsxfSlC7dJ+DjFoEXCTwVJRcvPDc5auHxXVVH7w/MQNjDHNE/RRs1C
JV/+Swa4rz2jG0smo2634Y/nmFIIXXCgQP8wBe+4e9kP6siBYX7tfeMjKobY
r9AOz8+BTC9fZaobHSOvpOds9M6HK3leNnFZDJxcZTZ/zO4K5NrJNWfN9HAp
/0F4WUMxjDptOFibOB/tmeTic71loAjcksdUMfGv6Hl3BIQSHAID2DeWGeC7
CKOZsuFK8LC63hDXa4BP+lZWufVegxPZ92uH4lnI225byXaugyqXk6pGNMR9
I560mqB64ArDxmDCEBlTb0b4EXcgteijtUeJEcbt1dTXuN0FTikqeoKN0baf
JRIcaYJxV6W+jr4JCrha4fmvH0CF+lFhTbMJ9ucxVvatfQJXHc3ZWkdMcc5y
M3v27VPodzQc7LM2w3Xeih1d59phdkN1h2ufGTaJusV5HV0QMJ1UtCZxAa77
953SNqAXyusYv9/yMEf9lnR5TMMguLNq07qnzLHwskzg7zYMs0tMGk5mL0T3
fvfLO96MwG9bLXjV/ovQ8SeFd8j6UZCbbgmVUNn4XFq5+ZDqNcSq+QNtDWxM
KpgwSnVWQ2piU25NtAWKua1xjY2T8PxqvKvTUkvctsmfn5X4D7A/vDXmj1ii
HqeSs2duBi49OXP38XkrvK67qyesTgO5FaFBGksOivPvJu45TEJ1YsjRTjEH
//S9lbzTVBsDSyLniZ9xMBxu6d4cIyPZ1HZ4to2DdloUrvt7MpaeaPtD0sHB
i54fMp/qUPA/P6dT8d0c9HCLzaVyKHiRqqacH+Cggw+vrnsbBZ8Jd+sVv+Lg
DzxBqdE9Cq6zCjbr0iKQ0VvTzlJQcTyJNeOvQ2BwvR2U1VIxffp2dx+ZQD1W
eJnPfSqqHlllDtMIvJCtVFS9oKIkup89wSSwcHvtw1ccGtb1+FmTFxF4c84j
iSmlYdDXNO0ENoEkqk7H2iIa0pTVKoYlgeKR1TGR1TT8PsG0wIAgUFngoE3q
pOE7fjuXzSUw2U7naIIRHWV5sbRsHoGhU7wALRs6ujGdx4gvCBT2hTXHOdEx
7UVaCdeeQI/WfmGxDx1dfFzPlDgQONquknsG0XHohnq3/QoCmybLxVPhdDzN
y/m23JHArQ9ddAoldHRI32jv7Pzpp/TAl8JUOv4P31AibA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vatp\"", TraditionalForm], 
       FormBox["\"normalized probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 30}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756667883828382*^9, {3.757420739073811*^9, 3.757420757964435*^9}, 
   3.7579760612486763`*^9, 3.757976250270666*^9, 3.7598518268488073`*^9, 
   3.7598525537396393`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability associated to vatp", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242672877865*^9, 3.7562427268374357`*^9}},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\< So, the probability of vatp in the population of cells can \
be calculated: \[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704187679028*^9}, {3.753708338402223*^9, 3.753708364586782*^9}, 
   3.753717464032563*^9, {3.756236168084703*^9, 3.756236170165374*^9}},
 ExpressionUUID -> "bb71dc2a-7ae0-49fb-8d72-05f715f3575a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vatpDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vatp_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
     RowBox[{
      RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
    RowBox[{
     RowBox[{"normalizedDistribution", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", "totalIntegral"}], 
      "]"}], 
     RowBox[{"\[DifferentialD]", "vg"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7537000762383842`*^9, 3.753700101923232*^9}, {
   3.75370014673904*^9, 3.753700152083136*^9}, {3.753700202550816*^9, 
   3.7537002582990026`*^9}, {3.753700303669454*^9, 3.753700306850484*^9}, {
   3.753705436823915*^9, 3.753705449435493*^9}, {3.753705849436471*^9, 
   3.7537058542017183`*^9}, {3.753707949097674*^9, 3.753707955855411*^9}, {
   3.753707987614936*^9, 3.753707987935389*^9}, 3.753708349492456*^9, 
   3.75371746403428*^9, {3.753718589754383*^9, 3.753718593132552*^9}, 
   3.756239758296026*^9, {3.756239816471737*^9, 3.756239816475245*^9}, 
   3.756239929914504*^9, {3.756492899520569*^9, 3.756492899526129*^9}},
 ExpressionUUID -> "bbdb54fa-23dc-41ba-a439-ecdeaa869ead"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showVatpDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{3.756488019834641*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Propbability Density of Vatp\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.757976068423715*^9, 3.7598525622533407`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\[Xi] value: \"\>", "\[InvisibleSpace]", "2"}],
  SequenceForm["\[Xi] value: ", 2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.757976068423715*^9, 3.7598525622638807`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0.9999999999999999`", ",", "1.`", ",", "0.9999999999999896`"}], 
    "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {0.9999999999999999, 1., 0.9999999999999896}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7566651256450567`*^9, 3.7566662102599373`*^9, 
  3.757419397618658*^9, 3.757419675580217*^9, 3.757421674472945*^9, 
  3.757976068423715*^9, 3.7598525684021587`*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAARfmQYyTGjz6EkqmR1NtjPgDkMOiD
JW0/K6QFc3A3Qj/eHOhbRCV9P06azrtIN1I/TbnDlSQljT+SO97gNDdiP4WH
sbIUJZ0/mFi89Co3cj+hbijBDCWtP+P/VwEmN4I/L+JjyAglvT8aBf+MIzeS
P/abAcwGJc0/4eqEXSI3oj+kFhEd0F7eP4HZIjxA+7I/HqTRRo2P5j9gOeYK
bjO8PyH23rR5rOY/TxjhkZVXvD8kSOwiZsnmP7643Ri9e7w/KuwG/z4D5z8c
PtwmDMS8PzY0PLfwduc/2VruQqpUvT9NxKYnVF7oP2bcZnvmdb4/fOR7CBst
6j/Zf9R2L1zAP382iXYHSuo/VQduOkNuwD+CiJbk82bqP5FvCP5WgMA/iCyx
wMyg6j9J4j+FfqTAP5R05nh+FOs/ulC5k83swD+sBFHp4fvrP6dR1rBrfcE/
2yQmyqjK7T+Z47jrp57CPxr40cwI6u0/vVU67EOywj9Yy33PaAnuP1jQvOzf
xcI/1nHV1ChI7j/03sTtF+3CP9C+hN+oxe4/uWHh74c7wz8OkjDiCOXuP5IX
a/AjT8M/TWXc5GgE7z/k1fXwv2LDP8oLNOooQ+8/6WsO8veJwz8I39/siGLv
P59DnPKTncM/R7KL7+iB7z/KIyvzL7HDP8RY4/SowO8/hf1L9GfYwz8CLI/3
CODvPxX33fQD7MM/0vtzrbLh7z/4FX4GDu3DPxNTGoY=
        "]], 
       LineBox[CompressedData["
1:eJxljXk4lAkcgBGepERNKqPvE+t4yhnPU1vp98utQ9JQClMoFOmwSDVsGFdG
jiI7jprSdm8l+mYS4yvHmlyDXelZspIdS+PKudn27/3jfd7n/etd6x/ucVRJ
QUHB4xv/GUPOcgKXyqG8MYQ5+5WGbo/6WAYph9Pdi/pH/6GBs5X88bW5HLD3
/i+yORoIox8uRWyTg8Fvu873ztLgM62X2OYrB6NcnmbrNA2zvZHchDA5uPhb
dNVP0ZAvkSTZXJTDRbL5tniShs6i6NQcvhyMT2lteTJBg5dTcwarSw4Rx7OP
XhmhYcLCKFN5UA5baqwtk+U05Ky+kFU6IwdtRttM7GcapH8bX2XojIA6l3El
fIgG9+zY/LYDIzBcnSN0+4uGHT3mt1kdI5BbnLV0yQcatsWkC1kto3B6MJ5K
aaah5iOfmuoeBXvRkGF2Ew1uex+84A+PwhRnfxa/kQa2SUNZn/oYKPauO/FY
QkNcx8JnEU5jkKvdotteR4N4Q8L9HNEYvPueGacnpsFhMIbfdnscngWXOJU/
+fb3CeawYr5AaVCetC+LhvqjyztqTs+AtUxWpu1OAxo47Cv1+gqiJAEnToOG
cw+PF7nPKeB8MfeFR0s1qPsy2XHjSqgqiRLN8qpB5DrXbtGgjAG29y2X7K2G
IM3ibn6eKk75RaR6MapBIltvbZ++EMPf6j6MbBXDHqUB25DDizDni43dfI4Y
0swuZ9UdXIycWZViPw8xvN4wdu7jTg0sUfTrndAUA2+z42LxEk20cWflTkir
4NrHBAVTNS38/Y6UIcmsArPHPs0dY1oYr6imos6qghuXTByJ0WVYVlNcoadV
Bctpz/jXg8sx2FTw/H1hJTD0mQX32hjI8mxsd/muEkZS2w6ZtazAODs/rn/R
K/BdZvTl80ttbAr4pLvb4BXUqnZ6a91aiXrDihfv3K0ADZU4/6bCVUimGIQ9
NqyAvrWVTm+TV2NByHX75HsvIddltCmIq4O5XvV3NQxfgst7rv6RWCYWbA/r
VL4pgiTeM/f8IF10LKv+3GAsAsGONoNTAWvQKvjMVRQIwc0wvTXRjcAFpgv0
ucZCCOWF3SI9CEwqZE8WGwohbXJ3JOVJYPa0SCIyEEJdvYbOkA+BdiERUSOk
EOxPXjnCOkGgikWfxGeVEDaVZ8v1kwkkWJVR1mpC0HfN16gSE5iqHPi2R0YB
Po3p8X5D4KrkipuzAxSwmYeejtURaD6uHa39iQL+ENPLuJnAscR6/V1/UrAy
q6CA9weBHzLMosu7KFjcVWzqO0vgbtsRfZ6EgsnQOztmbEgM/HosessjCraV
MDN6N5Ho8ml+gdkDChK6M6S/biUxtTQvg7hHgaZHtM9PDiSazNWXKJZQYLLR
9eRWFolSWN9eW0DBAcXBTM5ZEjvzBqxY6RQUbmZ3HIsi8UZtbIVjGgV9Z6U6
e86TWPtO23VjCgWn+kUCMp5Eq0cOh3USKUhpuPy8KovEcLUiXs8FCoRXzTuV
npKYn+k2GBpKgULTzTWDz0l0Vu2L9DtOgdPClf5SikRP9jkl92AKWmPmZQIx
idxXgtXWgRTI2M1zDi0keltNOk8fosDyusN2s3YSp+vSpDJvCiJbXySu6CRx
0kGP/X4/BUqONzT6e0jUkrlEVu6jgLnujF6SnMSHA3m3EndS4B/QHxg+TqKt
wNQyypWCn/kH7+6fItHMrkoU7EzBcHvjEMyRyHmzz/mg4//7X8aeejI=
        "]], 
       LineBox[{{8.003969054161752, 0.09803156345823102}, {8.00778477147145, 
        0.09740397751594924}, {8.015416206090844, 0.09614880562549565}, {
        8.019231923400541, 0.09552121967732383}, {8.023047640710239, 
        0.09489363372718868}, {8.030679075329633, 0.09363846182102828}, {
        8.045941944568423, 0.09112811798514732}, {8.04950206868494, 
        0.0905425704344207}, {8.053062192801459, 0.08995702288198494}, {
        8.060182441034495, 0.08878592777198603}, {8.07442293750057, 
        0.08644373753147835}, {8.102903930432717, 0.08175935696842498}, {
        8.159865916297013, 0.07239059551416475}, {8.273789888025604, 
        0.05365307129303165}, {8.520790069751571, 0.01302797279744232}, {
        8.599999995082818, 0.}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwB4QMe/CFib1JlAgAAAD0AAAACAAAARfmQYyTGjz44dPgjuir2PQDkMOiD
JW0/HW85d5pk1D7eHOhbRCV9P2K44VSac+Q+TbnDlSQljT8ujQt3/pH0PoWH
sbIUJZ0/NVgwgnDPBD+hbijBDCWtP/b8lMiOTBU/L+JjyAglvT8OfRzgtk8m
P9zc4O4wDr4/uIDILVMTJz+K110VWfe+P4rCIDkG2Cc/c+YrsdRkwD80tQlU
tWQpP8/bJf4kN8I/+kppa1mLLD+HxhmYxdvFP0lMl8llhzE/9psBzAYlzT8Y
Us3QlXs4PzseujFpo80/QfFJ7Nb5OD+AoHKXyyHOPyrgi87TeDk/C6XjYpAe
zz938oFbBHk6PxDX4vwMjNA/aSaN91iCPD8m4MSTloXSP2IFwSPLXEA/UPKI
wal41j+/BMTfYeBEP3IzZfTat9Y/NhVr3h0sRT+VdEEnDPfWP7WdLHlGeEU/
2vb5jG511z8ZwVB73xFGP2X7algzctg/Q7JzmT5KRz96BE3vvGvaP0aX3jEi
0Ek/pBYRHdBe3j+LaVfGIjRPP2pf00bRmd4/E6OdxnCITz8xqJVw0tTeP+T0
gBIs3U8/vjkaxNRK3z8EYmow9kNQP2yukbVsG+A/VMtXXVDxUD+F0ZpccQfh
P6ydaXugVlI/uBetqnrf4j8WyD85Xk1VPxs8jj/7/OI/rfM2i89+VT9+YG/U
exrjPyX3i0J/sFU/Rakx/nxV4z91d1bpmhRWP9I6tlF/y+M/Z5OnXcrfVj/r
Xb/4g7fkPz1JDOhEglg/HqTRRo2P5j+baHtXjvlbPyH23rR5rOY/lir0Uy4y
XD8kSOwiZsnmPzyflK8Sa1w/KuwG/z4D5z9CR/Ocqd1cPzY0PLfwduc/ssdA
CxjGXT9NxKYnVF7oPxSIfes1pF8/fOR7CBst6j/ww26+vMthP382iXYHSuo/
JN3cKZnsYT+CiJbk82bqP6SU7GicDWI/iCyxwMyg6j+mrsb/F1BiP5R05nh+
FOs/JVNg6efWYj+sBFHp4fvrPwCgXu8N7GM/2yQmyqjK7T9LporBlDVmPxr4
0cwI6u0/LhM089VeZj9Yy33PaAnuP/iNKv1KiGY/1nHV1ChI7j96WZR80dtm
P9C+hN+oxe4/K2MNaFaFZz8OkjDiCOXuP4ykQpk8sGc/TWXc5GgE7z+G1dBt
WNtnP8oLNOooQ+8/PavU6jEyaD8I39/siGLvP8/AzAjwXWg/R7KL7+iB7z9q
GiO15IloP8RY4/SowO8/Nw6ApnLiaD8CLI/3CODvP/7B52IMD2k/0vtzrbLh
7z+kf7MXaxFpP4sH23o=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAPaRbOwgCIEBHVqJTW73iP+DAlV38
AyBATyH2V4Gt4j8m+gmi5AcgQAFqdXddjeI/yRZExNgJIEDII7kvE33iP2wz
fubMCyBAlR0JFqNs4j+ybPIqtQ8gQJF6naRQS+I/Pt/as4UXIECrRQlE3Qbi
Px4szFVYGSBAehoYHoz24T/+eL33KhsgQEJOWK0Y5uE/vhKgO9AeIEDOoixD
ysThPz9GZcMaJiBAJw7TqIqA4T9Are/SrzQgQD8xVbBa8eA/IPrgdII2IEAH
5pnK0N7gPwBH0hZVOCBAQ+315CHM4D/B4LRa+jsgQPzOfWZUpuA/QhR64kRD
IEDYRWuq9VjgP0N7BPLZUSBAcUA1EQJu3z8kyPWTrFMgQBYFFHcjRN8/BBXn
NX9VIEB91scW9RnfP8SuyXkkWSBAukr3hKfE3j9E4o4Bb2AgQDKD548+Ft4/
RkkZEQRvIED/4qK036ncP0gXLjAujCBA5B2+9CuQ2T88TGkLKI4gQGv/xMoj
V9k/MIGk5iGQIEDr6P7jrh3ZPxjrGp0VlCBADCHhtXyp2D/nvgcK/ZsgQFi9
sY7nu9c/hmbh48urIEBBL/rRfcvVP8S1lJdpyyBAlWtC7KmR0T+46s9yY80g
QC0iKyLySdE/rB8LTl3PIEBw3fAauwHRP5SJgQRR0yBA73qg2cxv0D9jXW5x
ONsgQAyjuQq8i84/AgVISwfrIEB8nvZEUbLJP0FU+/6kCiFALhr5KRlfvj9y
ue1ZfQwhQNhhZyM1E70/ox7gtFUOIUAm3CuOS8W7PwXpxGoGEiFARTHSdl4j
uT/JfY7WZxkhQC3/DEvbxrM/UachriooIUBcEF/VPVKhP7LH+n/gMiFAAAAA
AAAAAAAo4SLZ
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[{{2.36734693877551*^-7, 5.123069712846138*^-36}, {
        0.0035579277332797865`, 7.926289354743028*^-32}, {
        0.007115618731865695, 1.6318863619998032`*^-31}, {
        0.014231000729037513`, 3.458769103956713*^-31}, {0.02846176472338115, 
        7.769010847962276*^-31}, {0.056923292712068425`, 
        1.959879925219592*^-30}, {0.11384634868944297`, 
        6.23633808813284*^-30}, {0.22769246064419207`, 
        3.1571948382594126`*^-29}, {0.47453692282247517`, 
        4.929025294868901*^-28}, {0.7050234206373067, 
        4.800414215219501*^-27}, {0.9309886882994322, 
        4.0048436470927883`*^-26}, {0.9963010204081633, 
        7.301716404635846*^-26}}], 
       LineBox[CompressedData["
1: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
Vkt1YwHBD8zUVtbzrY99ml7Wjf0PiRWRBg==
        "]], 
       LineBox[CompressedData["
1:eJwtUQs0lGkYHszMP2lciomRzPdHklyrlZX6XiWEJl1ILlvJkNrcthIplySV
bIt0sSrpsta1aEsXtKi1KBG5mxlC7teaxmX333P2O+c773nO8z7P+Z7nI70C
dghkaTSaK3X/m7rSeXe6CQR5OvkNHPsGvKGzpeCsGoLk40UvtMXNWMug2tmV
iyBnNo+XGNqC5068/Kq/GAFHQWRpoNqKixfeXlerheC1ztRJzZ1tGNsIyjR0
EdjmRYxHfevAKMlFMLQcgdJskJI4qxPThLZE6QoEk1muu8dMhLg0VN9BYIig
N2aoN3JQiCFnpC5vDYKlsQ2aD8PEGEmFR6PNEHgKnuuZd4kxzbZukbM5go8q
P6ZXb+3Cr4SFbtJ1CG6t4ZVbrujGG1XDxNabENTU+9cskH7Cm07Sx5u3I+iI
2bZ+tXw/1vlrKil7J4K7y5OVll7tx3RO73cRzgguNF/kX9EdwOW5laE6exC0
KPCitLcOYmtxgkzAPgTZCdFHLxUNYx3jyAwrLwR9sY9ctrmPYHp40GZVb8rP
48Hain9GcAVn1/kiXwRp9bslAb+NYpst3AX0AAR0N/c4Un4c66bIFzQGIuCn
sB3ZPuOY2TW9KzMYQc8PiRv2lo3j1+Ed1/jHEZSy11+H6Alsm5+Brp9CcP8d
M39KeQrbqRmZGMVTfW+++LtRkARbOvrN10tA8EKPc29gUIJNou72kJcprJ+6
yeDQN6w+oJHGSUZgUfxYg+snxb3FhPxsKgJvZdVHv4TM4FgfUVdVFgLXnnpB
gIAGYamaJRU5CO40mSeFZtPAv3b3jZI8BOJ7Fh/KJmjgYvHWqaAAAc3+fnx7
tAwsU3z+8sZzBGynBgd+uiyUP06+6leFIDBE0cWvmg5P+98FH6hBUBgu5HEV
GZDNm8/3fIfAZCzS8AKfAcnno+jb66l+/GPT1aoYEFf8otO+AYGHZF6MmMmE
8Imvz6w/IohrXR1UBUw44OkfZN6K4OC5B1KLXCa4JGY6rmpHYN67TdFTxAT7
N93LDToRlL+xE9UvIGDDDE9OV0T9V6WNmw8mYJWpewevi+LPdx5u8iNA1yel
iPsJAeswb6L/MgEaqe+TVXoRgNmfye6FBCjWsgMVPiNQH6Nd764nQJZh50AM
UPmbeiosRwj48v0ZXZkhim/WMldjsqDfv1hmehiBspe+hbY6CzoyvrVNjlL7
r8a47GUsqGta83R4HMHoq7SZEwYseK0QmNQ3SeVLysxnG7Hg2cYsf/EXKo/n
4tOCFSzIDenZ0iah+rR5P6mpxYI72eSyRimVh1b79M18FqSIPGi1MwiumUY4
To0RcGHRtdbKOaqfPSVNxrUEnHao/6OMRoKdRvn49D0CgiMVE1/KktA3+Ove
pmACfB5vOfKEToIwzrlhvRkBbv0xdg+ZJLgeTCm6OcIEPq9UO4tF6Uez231u
MsFq1/TcXXkSaG2itdNWTAguGtpzik3pAzNMZEUMyNASFjorkhC4j3HQ8BgD
PpypUzJSJsHpXIz60CwdGJ/LDzEXkrAvrWV/VhgdzPhPKjpUKP2SKHZ1vxz4
FmSiJxwSkMOMffZWOag8ldDoyyXBZM7p42yfDEjFkaawmITSEh9bJpKBlXY/
xasvISFyOl5mxoYGHjmC3lEtCv9tcsXo2Ry+tNB1YyWi3psudVAum8HFIfZp
6UtJuK0fKD94X4pH2iwloTqUX8/PfXMHJHj7AzJXX4/Sj8m67veawNFs1Xly
+hQvHh6sujWKC4KY3q0rKT+5CA9rzwHc3SgpLjCkcLWv8UnuJ8yxHODGG1N6
FduMs51t2Ca9/ai3KcU7RR17e6QG71DdObBqNYX/P/8C5XheQw==
        
        "]]}, {}}, {{}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vatp\"", TraditionalForm], 
       FormBox["\"probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 15}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.756665126631431*^9, 3.7566662112535954`*^9, 
  3.757419398565991*^9, 3.7574196766272993`*^9, 3.75742167549401*^9, 
  3.757976069029368*^9, 3.7598525685345583`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Probability associated to vg", "Subsection",
 CellChangeTimes->{{3.752931237392241*^9, 3.752931264530175*^9}, {
   3.753708349483583*^9, 3.753708349484818*^9}, 3.753717464027287*^9, 
   3.756242109344891*^9, {3.756242167389306*^9, 3.756242170365108*^9}, 
   3.7562426049479437`*^9, {3.756242672877865*^9, 3.7562427268374357`*^9}, {
   3.756242772698579*^9, 3.756242773614485*^9}, 3.757420338300962*^9},
 ExpressionUUID -> "51fe4f9f-f8b9-48dd-af5f-23fc0a66ef0e"],

Cell[BoxData["\"\< Also, the probability of vg is calculated as: \
\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vgDistribution", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_", ",", "vg_", ",", "totalIntegral_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"vatpMinLocal", "[", "vg", "]"}], 
     RowBox[{"vatpMaxLocal", "[", "vg", "]"}]], 
    RowBox[{
     RowBox[{"normalizedDistribution", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", "totalIntegral"}], 
      "]"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7537000762383842`*^9, 3.753700101923232*^9}, {
   3.75370014673904*^9, 3.753700152083136*^9}, {3.753700202550816*^9, 
   3.7537002582990026`*^9}, {3.753700303669454*^9, 3.753700306850484*^9}, {
   3.753704222258316*^9, 3.753704234599781*^9}, {3.753704272359116*^9, 
   3.753704302791348*^9}, {3.753704470013398*^9, 3.7537044821168213`*^9}, {
   3.7537054664840117`*^9, 3.753705470386675*^9}, {3.753705535011888*^9, 
   3.75370555406708*^9}, {3.7537058637329063`*^9, 3.7537058650975103`*^9}, {
   3.753707959594192*^9, 3.753707983479549*^9}, 3.7537083494962177`*^9, 
   3.7537174640362883`*^9, {3.753718036717523*^9, 3.753718038848815*^9}, {
   3.753718595548087*^9, 3.753718598803939*^9}, 3.756239758303351*^9, {
   3.756239816480382*^9, 3.756239816483485*^9}, 3.756239963355699*^9, {
   3.756492899538415*^9, 3.7564928995437183`*^9}},
 ExpressionUUID -> "a74310a4-d5fe-4fec-89a5-db1dc94a2b5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showVgDistribution", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.7564881190284758`*^9, 3.7564881294990788`*^9}, {
  3.7566451386200323`*^9, 3.7566451441848*^9}, {3.756664066229868*^9, 
  3.7566640692453613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Propbability Density of Vg\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{
  3.756665108253912*^9, 3.75666619793218*^9, 3.757419404191606*^9, 
   3.75741968002102*^9, 3.757419920744955*^9, 3.757420347295923*^9, 
   3.757420865713663*^9, {3.757421679535239*^9, 3.757421709070394*^9}, 
   3.75797607324713*^9, 3.75985258947243*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Total Integral Test -> \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "1.0000000000000002`", ",", "1.000000000000001`", ",", 
     "1.0000000000000002`"}], "}"}]}],
  SequenceForm[
  "Total Integral Test -> ", {1.0000000000000002`, 1.000000000000001, 
   1.0000000000000002`}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.756665108253912*^9, 3.75666619793218*^9, 3.757419404191606*^9, 
   3.75741968002102*^9, 3.757419920744955*^9, 3.757420347295923*^9, 
   3.757420865713663*^9, {3.757421679535239*^9, 3.757421709070394*^9}, 
   3.75797607324713*^9, 3.759852599396833*^9}]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwd0X9MzHEYB/Dr8zE/LzYjvv1htXVYRiey0Po8I+VMxFHXaNk5uzsiP25F
fuRHk3MrpWwhKl1aY5cUUlG5dJdfXS1cLVzUXOSk3ZrS4vN4tmfPXnueP97b
46tM3LqHiESiFbxxbtjjbGvoXxcqwvI5E/rVFK38JPgxrkKtJp55TXubWSks
R/tINIlsycpZJTeEMLSTaFLZKtuye5eFbeimX+pLrOG6OShDUKFD+9UF7NwZ
w9GLgg5N+tTlTKX7KeiFNO7T7s/qejY5V1Y0+CuXu2E3ibOxR7bAiIh5BdyO
gyWb7UxxrrvLbDByS28GeDpYYsWRxXnuMu57bHZELxvKemf18CjH+2xLsJNZ
G5vrW0Puc8MtkjrAtMdknrEDVdzBeqNikDVOCfx7d/8jbsVcU+QQu13cNO4t
qeG2TxpLcDPwenJLbqrDPJFSzTBbbOmubvav5164Zm/sb9YBcleZq4Fbk+fU
jbKEqfva30qfceetjUwYYy/tMU+mZ5q5q7cMZ4wzebiip7e3iVuV3r5VBCsK
DTGFfs3cr2bc2OgBjvGcDk2qhTvqhX4HAfGAzZCchu6WnYwnENzpufa8Hq1q
ObibQFZlekVxDvq0NWYfAdAcz/xYijY2S44TKGpTrt9mQ4vNjdcIKI1L65iv
ldtdO9JJIDP7wJFN89Fpq398IFBz6o5/3CL03FpHD4GZsZKrKUHokBpLPwGz
p5D0QIY+UX1lhIBfski66DBa/GCpQKFP1lrsZUZHmbQKCn6GBZeyrWjjw4qd
FFSvUlPEb9C/n47sovB5k3QL6UQXtuq1FD7Ks8d/uP7vB8tSKNjj5LHPvVvw
v8u+5VOYU3AnDHzQk0MCiyhEO6i0VoJWhaWUUOhQVk2skKLF26eaKLSpZ1fl
h6N1Sf71FF4cej9ddxgd9nhvD4UplQGjrmR0fuP9Pgrr3el92pPosZbRfgoX
ghy23rNoRfsaFwVLUnBd/AV0VdfFIQoTq7NKuzLQE760D1MIH3Fe3p7zP893
7z8UOl8n+u7KRdv9v3P/AyXsZHU=
        "]], 
       LineBox[CompressedData["
1:eJwd0G8o43EcB/CvnbpEmh2WizAjrLty93OsIz+ZFCdsrWTsZE33QMwDCvfg
3LWLuotF/hTqGh5cV3YaKf8WK2FzZht3buwID5wi+VHrHN/3Hnz69Hry7vN5
x9c0yLU8QoiYDrZKuxzmHFnNIYQNIySQtbzzRWaY4Td+z+tVVtEaPOD3dFdM
rI+Dr/w2DXpbHPFr1OUCONXQ2H5rh22P4LGOB50prevUmREwp6k4rZ21UV8I
4WDZR/l34Qa16zH8ln8cclD5g7o7Bg5ZkJCd4k1qWRyc3Vxyu+yDxQnw0Ogn
Y8KQg9qTCKuVjD2oaAt5yfCUW9uzcA2bJbDUZuKd9Dnx31M4Lr+W65G5qEvT
4HQm3WA+gQMZ2Hv5edWod1ObXsBnz8v0Uc+2cZ8UTvr75DTACbNZsFXctKVr
36FmkMF2udwaufgn+sqFzxUWA88Kj8rgSWVEnrTxF/IKYKP9w/ChYBd5hfDN
SmWbYAlmiuE/hkWOX/+bOrwUvna8jHof6qG2ymFdr8jSMgfPKGGhXcQ/Uu9R
68phhfvbv+j/cLQKvnz9pc7zdZ+aqOHF6gl96Csv+qqGJWxV9sNxOLMG7o8N
5u7u4BkNfA9wqblx
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVlmc4FYwDxa8rSlJJyY2Msl5lJErIuWXm1ZARhSTKKAoRCqFSRnZC9gjX
npmXy3W9VGRlrwplZERR+vf/cJ7z5ZxPv+c5zxGycDhvRSQQCMt/9X/Xtpps
p06pqxAI1AAmPi6ViVxDi2GSMAhp7lKnwudVuNm7gotIciC4yn9ei2eC1LGd
aS9JahCM7j78upQTim2H88NI+vimrFvS8lkI1FiafBDJEm1BdlVLWrLwfRBw
9ynJGR/f+zff2KWKGr5rpYYVziCsdM1lVKriRxl5ad+lO6AMaafWWajhxux3
h8o4F/gTKLKRRerQv2R+fVrADTwh/4QPXNaCqLy84RlRTxwsSUmeHT8NS+c5
0hOSHz4L1L8mt+vjMHOYe+EtP8juCOwpVDIAMUyuv7/JD8obOUJr0g2QkOcW
J+XyEN6r7ofSPQ3R94VZoPP9I9DtYkbfyBvh7BUeYYHAJzC00S0h11+C4pkT
UiXrweB6b6XLlHMFmwbHg4cMnqHWdO/tvOkr6LF7NLcx5xlMmZ8vlR+0QEWD
lVGOZAjMTc+JjORYwGgsi0QYCIGx9VXtoOKrCNsrH5emEAbeO+L9XR1W2BRx
KunbfAR4xGTMRkxtsaYwupa0JxLsOY1751NtMTt411BPNRJrgrPJ5tO26BB7
xV4aEYlI+03TpvfsEF/J6uJxNAptQySB4cQbkBunabPef47PH5jO2f2yh7ms
yhLvphicu+0/lkJwhF5P15k3MjFIuqNkEyXhCI17NzM9jWMQaLiRQtV3xAF6
nNloVgzon2z9qzMdsWy8xkg/HYvjrmnJ5oZOCHxQ/vJQeBxMJve1BP3lWNYm
q6nJn4A8m5W6lHxXBE9Nax3USMDba8Rw8VFXXCNmaHPaJ8Dz7FbLac674Jbj
PdNfnYDu9A1ass53UdnyIKtMKhE+CgurtUpu4JW2Lfj3bSJsuI96H+hxR993
xVonjmRkkvRocSc8oUHkIV8TSsa6sodemrsnCrd+pxrJJ2PnHibqSpEnnorl
1R83TcZq4+0MDzEvKBrvp2/MSUahZh4HC5s3XlSxv4nVScEj+7KTLaveMPId
6KMFpELCbcn8+S8fbB8RPXg9KRUsG/wcFwR90ax8+/7mslQoVIx6eKv7QnGZ
RVB3LBXbXHxCjjzzBa+NtNWQQhoq48RCdoj4YeiMz9yPT2nYw9aS3nzxISz3
iG+QImdAlqampfntMfhcHQ3aDTKgrpiYFsrrj66OqnRnuwywGouE82j6QyNI
91RlVAZUzHTsB+P9IUbwCNaaycAY+6Sdju4TfPn0hudqzCtkM3GT2eufwqHA
STJ6KRMyPozTvl1BmFUe7WjelIXdv6RColmCcYNxxn2NLwv1/Inu0/LBsB7+
p8lMPQuWkmEBus+DYc4xYi4SlQXBXvkQkukznLPRiSg8mo3bK4Lsd9xDICMk
stbqTkGlPMeL7wfCkEsJS1oPpkDjfoXUca0wHFQgaMmkUJD1ZSYk0zIM4mf7
I8JbKGC9Juw2/zIMgvdDpS7y5YA9+TtJdUc4OHt/X5mozoH7rxonHmIEFkK6
GUxMeRB1ZHjM/YlE1Y0CfOTOA/3JO5Vf+6PwWCuwlH4wD3YZci1KWlHgI5xM
DTDKw/axIhP90CioO+R47crPQ79JPHlR5DlaRU/GRkjnwzPpiba4cTQEWUjn
Xw3lY31tevrRVAxYnB4FvZjKB19CzkXPnbH4MrLIeLqUD/PNrChELEqq3uLm
5gKMPT9T0xYVC21nP0nZIwVYc1pemteMg/P43KaqoAKk9YRVc5a+BKOOXvtO
uRD3JMhC+ywSkd7662OQZiEoLgYb1DwS8bBHdrPO+UJ8I1167h+RiJMz8fqM
64XwmWQJdG9KRBWP6xQ1rBDWFaPfWaWTkO8gxlU4WYiBZeee6Q3JiN7rfy0i
ogixBi6X9d6kwEW8JuB8QhH6jNcLD35NgcHhpfztWUWwOZ4tI82Wih2nzNcC
a4vA8e9oYL56KgKdFUIefinC0O62zdnUVHi3TL52IRdjlrP+UGFNGmzcTnEY
TxfjUPTjzMKBDGTxcpqaLRfjYsOKV93vDExXf6BcJZRAlTHWscr/CvZEax37
nSXgv8z7dubKKzgHPArwVS7BuRZWzv6pV/B6SWPLDSyB2PamUWZiFiLrjrMy
S5bi191t6qIGFHRfZTHcdLQUQ6dbCxc9KOBhfZPGcaIUMbG2PxeSKYjRNlHn
MShF4/0f2/3nKUjscPeTvF+KXJ4tblyhOcj+VEY0elMKh82RVZO9uahjk/1D
uVmG3fWnYuX/y4e4vkzZ07tlcGbdxjI5lo+QeCkHa9+yvzvU11G19pfz4QPD
+1+UofFr/+W3kgVYNxGujWkoA/FtskdUeAEU87m9/HnLoTwfMv/JqhDFhmvr
V5vLwWcbWDYlWgy+pJ+lJzrLYX3SL0BbrRi+X1fsBYbLEUXaqd55pRjnvZeG
+pbKoS3jo3P1ZTG+Zc7U6Aq+RsP7+OU73CWQ/D3sCdfXYP4xvj1peynSUxrW
94hUwHJfulqFaDluPdQfhXQF7O4ZihpplkPp+kea5bEKhAcHWglal6NNYsOT
3NMVWPvX54NMVjl+FqhynXSpgLona+oFmdfQodaL2TRV4PHhjEuzahVYHKCe
K7OphP9uY+aBkCrU1Jw7POBUifBjIs/ly6rgnziyi8mzEuxisivUwSrwWRL6
tcMqQT/zkt/+QDU0vsJqqKISB29ulP6nuRoxP2vcWLZUIUlLINRkay3I3NXJ
erlVEA98J/x2hIoNkbsc1MurMOG0XDyxTAWDy17paH0VXp37ZLmXow5nOQU6
93RXQbRMpWjwWB3MtjxgGftdhY6u7t8lEXXwIKpb3zpdja8kD59PZ+tROtsq
GTRdjQUe355/B2lwvymy6rlcjc+ifjKyKzSoTN+n3yLUgOf2o/vHOBvQOCV1
WX9nDea/qcdmqzeg82NICK9yDTjnrR7vy2/AQp/+YmZADbZd4B/zDmiEZNNA
OV2iFgnm/wgcM20C96zdTIh8LSgRjqH/eDaBsGtN6BK5FunRxPuaCU3otCAF
zBnUYmeLWOWWsSbcWzcw5XlQixHZ0QaaDQOt8u+YbHtqITAuVsnn0wz59+Zp
rCep0GGzMzv/oQVZVq9q7TSpOCB3UdvxTwv4f871tulQkdRqcJQh2opNgl5b
Yy/8zSvUqex2acXAzZeu0jepSJETP6m9+w382PpOGUVToWQ5aaNp+RadZL3Z
zFkqju/ff/96ZBtWE8ZfFi5SEd//OHdndhuE/jidrvxBxYXRfMYgtQ321RGU
VmIdaNsFNBum27BRsdt2jrsOPQkqVp/V26F42HhCDnW4WDf3OOF3OxJFLo/U
PqsDf/PSzQXfDtD95p4x/nJqzHf/YvWyAzPjXmh/UQf5wR8Sq6UdUExOjB9L
qUP7bGHiwy8d6OAfM2Epr8OF6oFNknqdYOWx6tUeqcNVo+p34xJduLHZ7n2X
TD22iNA4JL93I72au1T7SD3YXkewhe/qwfCt+he1SvVQedqvLHqkB+d7SFcy
Neqxpmar0eXaA4VUxtw9k3pEnjg7avK7BxtURDmE/euR4Jul9C9nL+Juj2o6
DteD1XaI7mXWj27hoAMTH+uxY3Pve46H/dj2QWGbyZd66LIVUtqz++GjEtKt
/r0eQYsxy2s/+2HNDisSOw2rxqGy49EDkEuL86EeoeHpAkOYPDqIlg8XqrcG
0+D3MbpK7uwIfPomdtmG09D2JLDptdUIFAZc7RujaVifTcs2vTeC1OHnAvdS
aOBpd3tFzBrBvc89D6bKaaiUyBGis45CcumCRsM4DadXwpWN6aN4ts3ondux
Bpx1DpqfMRuHBuekWJdKA46kMx6muo3j14673jJqDTDjEinwihiHNXf0oYkz
DVC2nYtM/W8c5L0fwvUtG/CIkLQ/V+Ej5iWMjKSfNcDa1DpihvcT9DSMRj9+
bAB9SaMjijCBCq5D78anGhC6nlO5j38C+0bZqsdmG5AgpWreqTSBBY/K6JEf
f/vcM/GZrhMIKeA/N7ClESeC72oIzU+gle9TTYdcI0hJF3JvfZ2E2uLtuHq/
RmyZVMv6sf4FFKr207onjVg/560eL/QVXMH771KDG5Gm9kfgltpXjIl36dVE
N8LbiO3Oi6df4W2mwF5BacQRh6WhTaRpVDevuxV0NkJTeGNSkMoMjiQGXEgU
puOo8cJUV84c8uu83Ngl6FC3+Tw42TuHA+NOsS7SdJxV9LrFx/wNgqImwzqK
dOiXUIoY0t/ATjl4/edZOlj1+yejnn7DSNkbl/MedPxK3qYpozGPgHfboja8
p2NfnoVOZPcCWOeZyx166FDZL6ZK/7YA7x0/evsG6CDq+/jwsi/CxWBkb8EE
HQqXtFIPkxdh3p+fZvqbjvOKjhsEKYs4MqFbUirehKKywRTugCWMrId3Wns1
YUDLf+j7tWVsmW4LcPVrgtG6sxfRbxkKvRyqj540wXtEOlcuaRkhRY8LUsKb
kDJ813XzwDLI1h7BQxlNUOQk8DzQW0FSu4WWftvffIa9Ef3UD1ikHqqCEAMU
mz0pfAarCA61dzojyoDJ+JOV466rqPDMljA9wEBtFYtdwItV7DAWeeEuz4BS
+tPw7KFV0DhILiWnGDjb131so90ahF0JMgccGRDRWtK+HPgLn069S+GmMZDm
pPTl+OI6hAPEnoUyGNiu5kIp4v8Dy1Yv9y1vGZic0Dt/TfsPxs7I6BJ7GdAm
JMX7Jv/BkF7o+swsA5mcpV0dEgTyB1M948Y9zUhe2X9pfpxA3p2QrUYWbEZW
5LmBjDUC2XCEWaZSpBnnVe2jvLiYyJ0WxawFMs2gFU84hKsykduv7yqO02j+
+0+4h3XTmMj/3e7Z6uzYDHH2azQ9ByKZrUh6dda1GRNeZfJyT4hkraXHn2zu
N4NrZW1SIYVI9pcfafv4d7enl35ts6gmkptcFKou+zdDeH/LYF4PkcxaHpLR
F9SM/OKah/sWiGSNn5NhBuHN+NDsqlSxhZnc+8ZByDyiGa3qJVMtnMzk/wEv
i3pD
        "]], 
       LineBox[CompressedData["
1:eJwVzns0lHkYwHG8MsyMeeWsRh1LJDYj0mpdlp6HSsqlDJViJZda22VZ0SHO
WfbM7Gols0XuRC7lMm6VWjIHyTubMhgmyS+1tafYrNZkV9K2f3zP59+vecS3
wmgtDQ0Nz4/9b0h09/KhEgbcaV9hri2FVMdsUG8FAze5/kb31lPoubQDPa4w
EPnJQ/4aewpl3y+scGploKV7OErhQGGHKKTHQs5Allhiau9E4WJvi7T4AQOd
25f6xM4UuulyC42VDLyOOf7zhAuFt860x/GeMLAo3h+c5Ubh9XOfmi2oGfja
Is9wxoPCxnySpDCXg2yTNfuaL4XH1pmMbbSWg1dU7DTLn8LPbga7XrCVQ6rB
P88P7KKwVKVY2Oskh0JPxlRTSGEWv+f0uK8cLrWVVvvvo/B4Tk3qH6fkUFua
zn99iEIbSVza+345mLcFnt58isLKn6iMdcm/QV/8qvq15RSqIw+8OvzrPTDe
MVpu/zeFnK1iYRP/PpBEea3YVxtTDJ5zJ0MfQHYOlbn/kjZybws0Rv0G4M47
mjOm1kb3xF3vuxcGwOmvZ836gcuw6HJmxZoiBSSLgkxTa5dh2B7Hfj2fQbBJ
uRgxx9XBa8ro87ffDoJzmU2m/wkddLnXqPUidwiSvDrcS+U6uHrbYfX5rcOQ
1LA7ImYDCzc5bpK0vhiG4bgbUboSFpI3Z5kKkRJqxALN7bMsnP48QLRy4wjo
5Jxxiw/RRaup9a80h0bgO99gV4FMF3ssEwZj00YhRJDh7GCvh+eGlZFCSxX4
ROdGlOTp4UygTKLVo4I0tcPTKk02Nu8x2uIS9xA6q0/uTUlgY0X/D8VPDcdg
mFl9JOYZG+fvhp427BqDhrurOjJDOfhE0qk2OPEIulyS288qOfhW8eXKdN44
dEW1hO/25mLsBQtZUvs4MIpdOSO9XOT3Wxj8HvYYfrGbujy3WR8DlXWLJkuP
oXs+UVl0XR/fHLx0bPzqBCSHORvnu/KwM1wq4vkSeJdX/s3gDR7eenDMZ8Kf
wKHpo2t1bvHw+mab5Q0BBHKvlui6tvOwzqSyyG8fgZwlH+9yGQ8LVAUtmREE
Buz49ScZHibsFk+ykwhYt/7LM3/EQwF+5c6qIrDz4E7vvCUeWklXUaM1BEKX
Jo0UGjRamKr6qmoJ3FmDXDZFo/GiMMiriUBVc0h8CotGnTbvo6J2Ald6Dwki
DWictHfMp4YIvLzsss3ZgsbxktmwISWBHyfzyuItaVTpSy0rVARC0v+0lFrR
eH9qXaPnBIE6aXqNlYDG9mqzu2kvCXgsNhTyHWlsW/E4M2CaAKeYA0Ff0Ngi
KhCazxDwXpvAkTjTeDXSaEI29/GnKdmM405j5eBgRfY8AXa+yRFvoLHMIzsm
fIFAht3oqMiDxqJGP/sN7wkERtXHdW+h8aIZR/3hAwGpbbmjpheN/wGE6t+E

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mKd3WO7GNLIZcw+sSTCpWXl60mMP5mHp2bVgS4I3XcwntRL2YoU7xStvOfz/
/prYSLMAJuruE2DsQYIXU+6/PzkKYVbSUnZUHxJUFxN9JHv2Y//1tp7SekiC
A7vPOlWai2DbsIPc0uEkoPbNfrZ4KYZhCx3ziZEkKJ/RdHMqEsd8sh92c78g
wX5SgBA1WQL7vrMnZSWVBM/fb2s6mCGFSdcHPrqbRYJBu0d/3ldJY1fdFW6M
5pPgGe1Iz+yIDNbe+/hwczkJpAomOn7ckMN2Rijx6FSTIEVqr1AC4RCmiw0u
vK8nwbKicV2NsjxWkX20Oq1xC89ZfaXrgiI2b/nlFX8bCVT1NIZimZSxQ5zP
AsO7t+Y1aV41n1DGXrmPnvYYJkGEwPy1sZ6j2CfpSPnJr1v5XNPaIzOuivH2
afBaf9/KY4O06vbvGBaMxXw69YsEfK6pAs9vq2N1C9o1NeskcNZpHTlSqYH9
yp5MVWIiA1G11vqRoBZ2mxNuCnGSYRyieu/uQ1hm/XeDqF1keBJi9taoEsMG
3eMVWAXIMJLg33JUXQc73ze7NCNOBmYjtzgS/0ksPCKp1/YgGfamCx5XFNDF
iNip2k/yW7WrNA+HrB52LOdVMEGNDL+d8/ad9dHHXKwMbh3HkWGM5e4uz6rT
WB7nsuGbE2S4olgr/ZzTENvvcZYvzogMhleSXJN+nMXMZVaWOUzJcKGbXabW
7xwW2ZfZ99CSDCoxDxMPil/AmGA93cGODIz71Q/vXTLBtBZzHg85kGGZEUPy
MTHF7uWYOJg4k0H9MVeohaUZ9o2zQFHbd0vPiEg4IdoCE2sw3136kAwBX1nD
N8gXMSsPpt/Sj8lQrirWeneHFdbcZ4nniSLD87oVsb7my1jwwORepxdkcCJq
dlXoWmMaQz4u1MQtPcLJPUfar2LZwwliD7LIcO0qY3fdSxvs8qisb28+Gc72
6TZeC7DFdo1Xth8tJkPBQvMbwj077MG33qDpKjLsCFWdiQ+zx45OOQzo1ZMh
8CNfZ1TeTWxqeuVoBpkMbN1WO8733sLMZ/d9vdhKBquM7/1Zjo7Yzrk8XFkX
GSiNwTL7W50wwrz6S+5+Mojfzw0R1L+LHVm21KeMk4HrW+v1bV6u2Ndfk2li
02QQi3bukkhww5JXfFb8fpJB44aAdN8jd4xtIyFfZW3Lr4GWyxq+97C6P7LM
kZtk0FV2oJg89cQ8NisvTbFSQKmc/adtgRf2hblvZzoPBdIMoxKrhXyxONbb
N9b5KfBnYJaNcec+dmb7aq2FEAXCLEhXrNv9sAoOQWcuaQrYjU1hx3oebr0v
+VSHQxTY53Zi7o3PI0ySS0OUrEiBqU71srDEQCya16rtviYFhgVPDA15B2P6
fFOyPRgF1v2NLIbuP8b+7PYNVNajgLr7DyJXRAh2WyBRZfI8BcZ1tqfIDoZi
ooJyz06aU6DwVqQPUTgc6xaqGku9RIFMqoTdjPNTTOdA3wtzewpY62UFDZ15
jv0WvT1T4kgB8dOfKZW9kViR+KoepysFPiqNVpr4RWOC0oK/ifcpkD0modkc
/B/WKpN//sAjCny3OSd7xzcWC5HVyPMNocAPL6V7gf4vsIXDVlZK0RToad/5
iuPtSyxfYar0WRwFuIVlMvd8jseuKfru+JZEAf3sy8GNBxKxJpXEmlfZFFA2
cb082p2MBarK8a8WUGDpn/ZH7NwrTO141R2zEgo0C3IGaQ+kYpkafSI7a7b8
qz3VZJaSgVlp3fa62UABB1WbJb2Q1xgPbvUjgUKBLu3pF2v3MzE/EHzk00aB
m2cXFR5HZWPKJ/J7O7sp4FMoqjhUnIN9O6mhrDhAgUSu9k7m4VzMTN9q9OtX
Clgh+azjHgVYDb9K2/g0Bd4P6M/517/BJEd34Md+UkCIO4H3g3ARtuhfmziy
SoHjc3TLQK4S7LJhXOjwXwqc08hlrBiXYkQBZ88vLFSIABNftoPvsJh3osZD
XFQIkt2xw2ihDFsNWEGDfFTI4hNczZkqx64btcsPCFDhiURYa+rMe0xxMoi9
T5wKlx7kJ7IcqMTi31/+9UmGCmXDEyWdZ6qwv0Gq4z2HqTCQUPCJPbwaaxGZ
qO86RoU65ZSiNtU67Nh3fFGnJhW4n257x5+Nx1Iq45M7sC2+VY5gcdkGzMnU
wLvNgAreNVmCtceIWKeYhH3rOSo8Ml765rCXhGnOrpl8NKWC3uqjoGfMZIwj
vPBIszUVhC/tMovepGBuFiHCTbZUUAxpE32/i4b1Sl7d0XhrS/+r0qJuZfrW
/8kzQXOjAqtZJGEmtRHjiZjspHpRQfVa66jzTBPmZUUgUPyoQP+r8GvzbAum
t+T+ihRChfMLzkG9J9qwIsKZZ8SnVIhMo6T/u9uO8UdJ+RKiqPDnhoHFA90O
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

        "]], 
       LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAW2XDEdOeyT9Aii79RpO/PwO98VTG
o8k/ZecIsTmnvz9C/klAQanJPzZDdMBdvb8/wID6Fje0yT+pfD5g1Om/P72F
W8Qiysk/sqr+ab4hwD/8xrOvnc/JP3H7cBgHLcA/PAgMmxjVyT+P8XerVzjA
P7qKvHEO4Mk/LhtdlRBPwD+2jx0f+vXJP+RXDhTifMA/sJnfedEhyj98fy2m
CNrAP2wpHNoyJ8o/MvLmOJvlwD8ouVg6lCzKP0+1HL418cA/n9jR+lY3yj9W
fNW1ggjBP44XxHvcTMo/Gqw49Hw3wT9tlah953fKP5RyGof3lsE/KpFxgf3N
yj+9zUiiLFzCP6WIA4kpess/pkOwqeAAxD/1Y1rqZrvMP0azrsUYecc/C0SG
UrEXzj/d9TW3/urLP3wQ5QzhXM8/lbE9MJJp0D8MvisA103QP6kZ2AxaPNM/
PXZP/cP60D+2d2snu9nWP5ykjKMjnNE/lCwrTYbV2j9eVTTNCUvSP5heZ5p9
8N8/tdVlk7720j/0+WcXnPLiPznMsALmltM/LHnWmU855j8gRWb1k0TUP4f+
9/CDa+o/NTQ1kbTm1D+WkC4PkwzvP9/yjcmjhdU/N+zXD88v8j/sM1GFGTLW
P53Wz6MomPU/Just6gHT1j+j9cOV4Vj5P8QkddJwgdc/bcV6etgn/j+P1NVj
UiTYP7BlVbSjuwFA71PAkQLE2D9OBi48GsoEQLJVFUM5cdk/OwR5IQq0CECj
zYOd4hLaPwbrRE6mBA1A98dcexLC2j820CaNQ0YRQOCRv/UQbts/FcmHbWuA
FED20TsZgg7cP27b1XyrDRhAcJQiwHm83D/CXxaaZ5ocQBfNIhDkXt0/mHTi
mO3PIEBT1az8HP7dPyutslZssyNA8l+hbNyq3j99sMPmHWYnQL9gr4UOTN8/
0lqaQCN5K0C6z2xL3k7fP7VzImvbjCtAtj4qEa5R3z8X9RS9oaArQKwcpZxN
V98/XJnj/1jIK0Ca2JqzjGLfP3aZaR9zGCxAdVCG4Qp53z8LJmDQXrssQN5n
b6FgpN8/AAAAAAAALkCjmYuU
        "]]}, {}}, {{}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"vg\"", TraditionalForm], 
       FormBox["\"probability density\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {All, {0, 15}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.756665108951453*^9, 3.7566662046131277`*^9, 3.757419410145452*^9, 
   3.757419682589402*^9, 3.7574199233292017`*^9, 3.7574203498897467`*^9, 
   3.757420868340716*^9, {3.75742168588958*^9, 3.757421711622335*^9}, 
   3.7579760757677517`*^9, 3.759852599512308*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Results"], "Chapter",
 CellChangeTimes->{{3.749201745231317*^9, 3.749201779268693*^9}, {
   3.752464233061038*^9, 3.7524642349232683`*^9}, {3.7524645209606123`*^9, 
   3.75246452096133*^9}, {3.752501601242539*^9, 3.752501637354268*^9}, {
   3.75250674801861*^9, 3.75250674982616*^9}, {3.752862919441516*^9, 
   3.752862946649535*^9}, 3.752927935206502*^9, {3.752928197778576*^9, 
   3.752928205218182*^9}, {3.753091405697989*^9, 3.753091407751841*^9}, {
   3.753139734883931*^9, 3.75313973708954*^9}, 3.753621530956925*^9, 
   3.7537083495023518`*^9, 3.753717464046376*^9, {3.756243053268134*^9, 
   3.756243054488398*^9}},
 ExpressionUUID -> "b92f7980-0c04-4448-9103-c759cf394f7b"],

Cell[BoxData["\"\<In this toy model, the total consumption of glucose of the \
population of cells can be estimated\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756563285157518*^9, 
   3.7565632887624207`*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expectedVg", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
     RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
        RowBox[{
         RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
       RowBox[{
        RowBox[{"normalizedDistribution", "[", 
         RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", " ", 
          RowBox[{"totalIntegral", "[", 
           RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], "vg", 
        RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
     RowBox[{"\[DifferentialD]", "vatp"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756490974375958*^9, 3.7564910094289513`*^9}, {
   3.756491049211607*^9, 3.75649105565872*^9}, {3.7564910951780977`*^9, 
   3.756491162442902*^9}, {3.756491247201353*^9, 3.756491250030674*^9}, {
   3.75649152020603*^9, 3.75649152090969*^9}, {3.756492846982465*^9, 
   3.7564928538055773`*^9}, {3.75649293629764*^9, 3.756492954502758*^9}, {
   3.756492984920672*^9, 3.7564930689893427`*^9}, {3.75649328730233*^9, 
   3.756493325073654*^9}, 3.756493387824346*^9, 3.7565664077926397`*^9}],

Cell[BoxData["\"\<Next, the value of the glucose concentration are obtained \
from...\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 3.7565633461031723`*^9}},
 
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"cg", " ", "-", " ", 
      RowBox[{
       RowBox[{"expectedVg", "[", 
        RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "\[Xi]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756493176292547*^9, 3.7564932248201933`*^9}, 
   3.7564933878310432`*^9, 3.756494519128881*^9, {3.756643422511797*^9, 
   3.7566434367535467`*^9}, {3.756645409763424*^9, 3.7566454211979017`*^9}}],

Cell[BoxData["\"\<The expected waste uptake are given by...\>\""], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.756565976804381*^9, 3.756565999130979*^9}, {
   3.756566066447177*^9, 3.756566093660502*^9}, {3.756566307388206*^9, 
   3.756566318550322*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[CellGroupData[{

Cell[BoxData["showSubstrateConcentration"], "Input",
 CellChangeTimes->{{3.757157381464622*^9, 3.757157390337722*^9}}],

Cell[BoxData[
 StyleBox["\<\"Substrate Concentration\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.7571574670686283`*^9, 3.7574197635779*^9, 
  3.7598529748727493`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw10g1Q03UYB/Cxjbe9l+PP64UMRWD7EyCQ4Ghf4DQzQSE6dRW30BUXlG8o
hiyCA+pSCEgxlDRxpTIBUREYGgIBW7IUJwxDDoyXylJBZArRFv8Lnrvnfve5
5+653z3P45W8I0FJp9Fo0vmk3sX48uaLZquVxOPwWUt0wLhM7GDY1j1vNqM6
88HXkzJno2r8G8ti3SwL2WJryvqHxMrCh8+irs/IUlpiir6aJkFf6j/L1szJ
jgW6Kv/4i8RmeXDNbpFVdsGovHxikMQezWrZxUoaSm459ur1i/1t4L1xzDOn
lgTxVn1zXSodsRn9DwcKSWx4JbthJICB6Z3tRye3kVCdMF4l7jNA316w724g
ifhDQWJmPhPy/TYjVVMSnGk2ET972GK0Vxim0kjguS42nKiyRYH6O90HmyUL
/7fDCk7+VI5ZjMzs2dbUKjtUh1TyRz4Xo6AkNeKApz0sa/r3VrLEkFxi2oUV
2YORYp9tUvmjZGTPgehn9jjZxs8rH/ZDXc2OwwFvO6BZ1TNoDfKDriMyI13r
AGmrZMxrly8mLvX8q3JyhGO9zRTx7QrMSEqzzqTNOydQYb7sszA/R4hiy/NN
DcthcJt4cFjAgjTK42qPehmK8xiNQ++yEJFf/s5cpje815f1yc+ywIyabPk4
XARPi+HGqgkWcisYMgwtxfE+9swPoWyszH5PKTC9BLm4ZN0v+9l4X133e7PW
Ham6xh+NTWwUmGPU57Jc0NPY+7T/ORu3dL0bAukuMHObcuZCOYgTKUbL8pzR
McV/U76Lg19PftRjYTov7JeDZPGn7cN5BK51RTzyHeGgwnRB4WNH4GxUe0en
KxeP0gYKYw86oY/7RcpMHBcO2qf6cmcncHcHrzbmzjtXWSmvFSLufNEaZT0X
H46FH0nYIgQZGZDYMs6Fjrj3arybEC/8LSQmCB5K4y1JXjQhYhLnwmzX8jCc
bPjeal0Ctf70PnY6DxeN3RrKadHF13ineFC4vFZH+cpE8ctuBh4SE9Zfoby3
eZN01XMengz9pqX8/33y8aTCvYVyrfv5httv8BHoYmmjbKXFWxXpfBxqLe2k
/Pq5mqrlFXwQgvt6yhqpKMW3nQ+f04+7KXOWtGXs/JMPj6SfblKesmi35toL
EPLZ9tuUN6X535h2FWBZ0507lLceqz7lJBGgLMLVRDl2bWfHaKQASV2hdyl/
4tc1o9woQPF1coDywWDlveMKAWhBzEHK/wGGvK5G
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kg1QkwUYx8cGG9ved++gnPEtyNfG3nng+YXA/nxkiIEIWEJ1qbAkoKP4
CAEFE7My9ADFDkHuUAJkiBChIJLS2JjYKsEAry4liAsEGYHAaLHoDv53zz33
u+fuueee/9/5cGqUgslgMPxW6v++JkFB5JzJRGN6x9JykGxMvim+LEC1wnzW
9ZyJ8zNyMb80JHZ5bT4vV9gEuzUt0dh8dmoh8J5BHi69amqdpcHcIFniK43y
0D++/fvAXzTejPNpTHMxye8+znL4bJBGunKn/JsrDNg3P6uU3VvbbwYNW3jR
v4qGaH9rR3MyEx7Zo85Xsmm8vi3/1oiMhdqaxENhoTSOV/bfEQ2zcIOuSHcl
aOwr9PYy/9QctQ15WY7dUtR2DIp67S1g6KIK3VOlcAoN3yGqtwBJ7P1ZQkhX
72djj9gv3uaSF3Lyl7qS69lwaBuIf7reC6eLk31znTh49objzAenJJC2mLO3
nuPAsdpa0vS7GMUj6blBCysc0EKXuonR3Jh6QfaWJfarTLb8A57Qqv2zMm5b
QtK3IGRkekDf8vDf4+u44HDLZYdz3WGQlhyrTeEihj1e4pTktvo/LnISh992
hyt0tvqJC0IeRnQFygSjC4pOsdqevMPDi0c/XdZedsbGsIsDcXU82Nqro7Bx
A5yWdQ+263nILND0pa93QPkA31CzhY8T2miz1xpsEOdVHPrjUT4kId6pA0wR
krVt3/W382F9pkwT522Nh22/zA0t8lEy/mtK4BkrzJPtnxi3ENBkDyndeoVQ
z1LRcR8RED5O4/zzJ7XqL4Gm945FzZACdPb4PvccIRByNCm6zIpAXaBKrbEh
oT97pCZpkYsB8vNEQwSJosLcAI2OAzLNZ2f/yRVOq5m4X22BiIZzrypaSRjD
Gk+Iq1ig/WUxd8dIaB1OT1tRTFhNvizSiwQw7x0tmW8xQ3CMcavFLgFCGEeG
VV1MVN+/+jE/QwCi8k7evI6FlKCiTkGVAJGD1wiPR+a4qS/aZKsTIMF7bHdF
nwUyOyL9ti8KMKe22GboYa/mk4KlovuQXwsHN+wabvXtofC0sCil/bwlTIx9
poMZFBLqXmFR73Ox+1pjvVsFhTrfd+3sNvOg9HNJ9FRRkNp/MfV8hgfipe+z
Phyn0O37Vanqaz5ml2/HnuQIMSfKn5yOIBCZInnwwkaIyeCbQ0+mCMReul61
TiqEkcF2JgtIhO/SqEf9hXDtzFMaBAJki3sMir1CaJVKhleJAF/6KH4rPyjE
D+3GEXeSwn+ue5Bo
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kgtME3YQxisUKpQ+lkGHSAKICJQWIwiV5/8DHHZYkGccbBJmwiSDrLw2
GI/xEDcWNgQHakCnCMpTkDHkqeCgCgKu0IEEYYCwxhk3y3SVktKuy+CSL5fL
73L5cnc2J8Xh8XoUCsVbp//ydpQvHlzTavl46bGh8XeWE/tYuVmHrqbr38x6
/v0a+ai5b/rZ5jZXkriqFxmBKj5cv/vzjd+gihzW3ApIUfChZ83doDeryf4m
5DOf8nE8xqU1dY+WIEWWPjTOR1qzF/nxGgUX99UkuLVtz9+B6MvL14yK+eBE
dfa1J+qhtmH8k9+j+BAJ8rpWnPVxfncV7dN3+Mj9QdbPWdZHxGjBoHCMh7Bv
DzhRz1ChLuqbt0jmob7vMeehpQFu2eTVfkPlwUoY7MFpMkBZKvVDz6+dtvwb
4m7Q6eApJRdZeRv3EpsMEZPrOqAM4+Kr8kTPbCsaihZE66ILjuB1UA3dS2mI
9aUhS+KA8pW0bP83NBimVS3YPrFHe6u4wvmDnagJ8TV/ObMPIxKfjPTenRDV
cQUFXXZQdExu5poZwfHIhYK87L1Q8c7l1CcZ4X3jft+zNrZb+zOCelDaGdVg
gwkLxfMKtjEO+jKcM5nWKCvS7148YQy/pvAFwXVL2Aadn4lpMMZwe0/uuNwc
VpqJsUMKY7h4DIyt/2aK6hm66oYbHVL5VBSthI0Yp3Lho0w6hu+NRJ6R0pA4
0n1X1kNHsf1pYZJYTSa7p1/PrtORaa4Sth3XECWjp0DtZoLBoVj9A2NaInnF
iohJMcFr6uhctYiydV8TdEuLz/YEUXDngedfDiu6/uhxV94lLWnwG5Lc38VA
cuWC4bGKTTLDKE5QhTDg8HfgarZ4gzBSXbxkhQywJUVmGw5KEtJS+m58JwPP
rH9adpcoCN/HOXJAruMnJyMk7avkrRemHAWHify9JU6x4kckIFLtbhDIBM59
HCA/9QupG639nJ7ORFzjXGnwlJQk+ZfdYdYwcdXLyHRtc5LcVpTtt5jQ8cpS
KVcgI5/1hXofWmeCktO7cuTLX8n//8kCpW4+qVI2Tdp2t3RNHWUBtYdL4gSP
iZYSpo1L1/Fw/1hl4yx5r7G1ye4SC/kCO4M6pznS7L0nwWGIBWu6z5Xb/U+I
yds/ZyT/wcKSZvZo9okF8krTG11IY2PpSiCXMBdJaBJ37J9dbFy1lLfUn1oi
0VU3a8x4bLCvP8zJCV0mwYH3Jas+bFCsPSuG/Z6SLxwfqOKPsRFqYF54w2uF
lLjEz1fHsaHYMScT+q6SfwGxLKi3
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-0.15060577328486247`, 0}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 14.99999970416663}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"sg\"", TraditionalForm]}, 
     AxesOrigin -> {-0.15060577328486247`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 14.99999970416663}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157467405468*^9, 3.757419764476811*^9, 
  3.759852975046752*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"expectedVw", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
      RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
         RowBox[{
          RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
        RowBox[{
         RowBox[{"normalizedDistribution", "[", 
          RowBox[{"\[Xi]", ",", "\[Beta]", ",", "vatp", ",", " ", 
           RowBox[{"totalIntegral", "[", 
            RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vatp", " ", "-", 
             RowBox[{"38", " ", 
              RowBox[{"expectedVg", "[", 
               RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}]}], ")"}], "/", 
           "18"}], ")"}], 
         RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "vatp"}]}]}], "//", "N"}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.756565976804381*^9, 3.756565999130979*^9}, {
   3.756566066447177*^9, 3.756566093660502*^9}, {3.756566307388206*^9, 
   3.756566343720001*^9}, {3.7565663882302523`*^9, 3.756566419121586*^9}, {
   3.7565664784917793`*^9, 3.7565665004011374`*^9}, {3.7565665372731333`*^9, 
   3.75656653818743*^9}, {3.756566585135054*^9, 3.756566585232998*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData["\"\<The same way, we can calculated the waste concentration in \
the medium...\[OpenCurlyDoubleQuote]\>"], "Text",
 CellChangeTimes->{{3.753700020842256*^9, 3.753700065419327*^9}, {
   3.753704059664023*^9, 3.7537040744480658`*^9}, {3.753704153407105*^9, 
   3.753704219262878*^9}, 3.753705604266296*^9, {3.753708349493094*^9, 
   3.753708349494307*^9}, 3.753717464034911*^9, {3.756236177748333*^9, 
   3.7562361797784777`*^9}, 3.7562362683952837`*^9, 3.7562427462063227`*^9, {
   3.756490346227128*^9, 3.756490354658803*^9}, {3.756490742955274*^9, 
   3.756490761946286*^9}, {3.75649096256432*^9, 3.756490967388866*^9}, {
   3.7564927238004704`*^9, 3.756492822449082*^9}, {3.756493116172858*^9, 
   3.7564931738301497`*^9}, {3.7565633441593227`*^9, 
   3.7565633461031723`*^9}, {3.75656589903022*^9, 3.756565922220356*^9}},
 ExpressionUUID -> "61c1e587-211a-4f19-9624-f67376484cfd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", 
    RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"expectedVw", "[", 
        RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}], "*", "\[Xi]"}]}], "]"}]}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7565659240090923`*^9, 3.7565659485284443`*^9}, {
  3.756566618090026*^9, 3.756566636426803*^9}, {3.756643092661798*^9, 
  3.7566430992247667`*^9}, {3.756644688879991*^9, 3.7566446958257713`*^9}, {
  3.7566458757147217`*^9, 3.756645887099815*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showWasteConcentration"], "Input",
 CellChangeTimes->{{3.756645640182994*^9, 3.756645643181884*^9}, {
  3.756645840541394*^9, 3.7566458900979137`*^9}, {3.756645981211153*^9, 
  3.7566459869153557`*^9}, {3.7566460399686193`*^9, 3.7566460400862293`*^9}, {
  3.757157411980389*^9, 3.757157417985807*^9}}],

Cell[BoxData[
 StyleBox["\<\"Waste Concentration\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757421087688238*^9, 3.759854225285982*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw10gtM02cQAPACpbWP/7/l0UKBDGlFGGJROpjl9R0sdViowMCgVYyZ60Js
rQidbjJieKg1KoNODQLBIAhIEXmIvESdDqkCOu2GokPDuiAD0aoDbMfa8Q/u
ksuXXy65fLk7vy/3fKFwJJFIUYtJvP9Hi8kw7ddVHvNabLXFCSeQpbmSocyI
RQyniwemfnyD6nWznt2fqNFSfQ7lYE+/bpdqkejEzHzsDQv653RSrZpXiRyX
B1kZ+gXUfUxh0NL1KF0e2pzNtyP+D5ais/xOlKOPRG3nSJD0wt2SF33zQ38H
uKKN26DhDCLupo7eVqUjBIhFbn0iI0r89GCnSegEKR3m/Gl4gvKqjFe5407g
iktOXVaNo5Tja1eRD5Fh72S6KVg3gep7H3Hv+jiDwpumzap9iXzjZWJuozMk
qDxbtE/ffPg/Be43pNb+8moWHTho/UnZSAHPbXzW6CkrOlyqjMj1pcLbKvOz
XU/sKLidTAkvpoK7hJMfYHKEUlNObtw8FWTeVaL6tRRobd5zUrh1GRQ+i7eV
jdHA0B+9X9OzDIIqEjaPT2Ngbn/wbx6HBkahelvbGhewBOu+r1fRIORM2WBh
tRsszY8GY64Q9kjKhWEv89RJNh3Y5+y/fhTCg5Iip67nGXRwkGVPDCX7gEB6
ekTeQAcTT3Q+tc0XfG3Dg+vMdNAcUde56v2gYoRhqQtjgODMIab8rADkq0rj
733LAK6kiS/u9AeloeuasZsB83jZ8tHnAfCg67e/H79nwN2pYfzn9ACYw7rz
F8KYUELZTA0fWgn971ip8r1MyB3KLcuKWQlL+2VCxeGYRG6LP/QNRLwKNDHh
fvG+NZ8L/KEh9lb/bR4GHg45dEP5ChjBtJmWjRjox9KEYq8VgGWHRhoLMHhc
mDnwVZ0ANjYVSxQdiybfC2yVCGB1tDDt+gQGEe49PkMkAbi8dOeauTgUnG/b
2m7iw2dpC+HO63F4ESn548Sia+/U7GNocKi7Rp0krIor6cOrcRBsl84QvmIu
CfEaxmF1k9dbwt/0Jkete4+D7mjRHOGl+2RBzU6dlfAl76bOhwksSMyU2Qjb
SSn2HRoWFLX2ORQvesOF5kb/ShZc3jVFJqyP4mcG3mKB8fUolTDT7eb+rL9Y
sHuylE74na1nSwGVDUe3e2CEk1VBg7M8NoQ8VLMIbym/WM0JZoNGWulCWLb+
dv+f0WyY2VnjRvi7jwcsiiQ27M44wiF8LFTxe8UONtzhJ3gQ/g/xmp8y
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UnlMkwcc7SiU4+sJtlBK5NqYUsSA4T6+B4xrEwUsMdQ4XLGZUMTJ5ZQh
ymA2bjNcOoeMoTMWgVIsp1wyCaAQcMBgbmFF1skGUakBhDJGtwX3kpf3x0te
fvm95yg5ES81olAogf/yP/0fk0b6lCSfr4IX/dY3Q93nyLTUzXf8dgWTBFV5
ZqHsJXlop9TrZXAqueW/IpPjfilOERSRe758vhrSqydl+PqKOPUqaeTguk7U
bZDhoo6GtbMK8qDYsyHDyUCKBmM7XGybycy6AFJ9g4JWXmlIlfre6/w3oKTy
G7PlgyQvoaXzjswIHEnsjXDVD+Ren/w2rTsVTpJlYujRFJlXNdHFm6XiUXeX
x1Ckhoz7wkNoXGSM44+9bW5WaklF50+8ITsT5HdKLZ21f5L2UTF+vFoT0FxG
uMlmi6/vp+F5xYdX1cwl8kz++veyWhqyjf/wvcxfJT8rkfnn2ptCrrm8lKj8
i3RrMqZ5XzKFeeW4AikUlGgzc0NXTWHKdl7oj6LiTsOJcvdDZlCNi4zzTtPw
oD/oVFaHGQpkFP9bBnPomsb+zuOaY+WDntHzMwzo3Uo/UaSZo7fKilrD5GDr
f+YYvT9fUvO+FUZsdQvlbAv8+kTZ8tssF8WF1PaZwxZQBboV51TYwPndK1Pi
GgsY+B5hhRcFsN8cGfbVWeBCl1wnbN6Oa1OE/pYXAWqzYXqA7gixsCRq9GMC
No2NT45qnCB70N4zcZdA9wUTzWbbmxhrn1x+vEZAnvZ2i1bkjFeMu+c3vOhI
kDzdc/GFI/qXWAfEJ+mY1FvHOBY6YKtfOpZVE8Euwu3oHvR/sUNLR+nPwuiS
SAFqQvr6B/gM3C6znDkoscEUQ35Mv48Bk/0+PglFXDAyPAMmChgQ+O6eVfdZ
Yl/9pXBpCwPpAk79Yhgbu4LcRffmGGBost1dW+ngPNvG0/GYSDqQ1zMxRiBM
tOFtEsEEPT69t9qPiZsPv8shspj4UTknqIphIy20uJt5nQn13u5zITkctOqK
d9uOMPFNcpfTWLklsjtjA33XmFhtShJPKaywtU8W4jn+30Y3bINKUN82/h4L
Z33FWXIFFwZKnOFIFgtl54jqyDIeom831L5VycIw7fizT09aoy7Q6diOPhYk
82JOZqgN6Fb3T300z8JhztOxbBofS5sdiQWmbAg7fKaJHj5i01yHV/hs6NQZ
1Q9TbJFYobzOdWMj4KiXdayFADERA/2/B7FRlV4fE1EtwOmdg3rpfjb4ayu5
Ijc7fO4pnb52hI369Tapg8oO/wDFopiG
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF0n0s1HEYAPDLOedefmJx46jLeRlHkrzG9X3SmxKiOqMyy9QN7bwclbpu
tVNtye5U/uiFUkNeDpmXIy9p562pELVqyjR0Iz+ROnFXTfl9t2ffffZsz549
z2N7TBQRb0AikQL+xN///5uyrhzoDy7YOu23oAt0G0PqqQj7ccEOxCBXZGqu
z6BBQdh4cVUKWs7Po6DeMMFMWjbafG3qx7Y2LeKZuXv1i+8hg/W8BUbZIkrD
Y3iR5ZUoMtpDmcrVo8L8TyMOVk0orcwfPS4kwcTEkt2Ro+p/9VfBeI3wsq3q
JWIdqm2qTjSAkpNJBd2SIbTPR1o/6kaGNTt/1bm3DSNJ/sAT1ggZhjPZJi+F
n1F49iYXwyxDUPRk4HMiDSpuesPqsaGAe2gLxb8DR5ygED9WKQWuLNE9CzRz
//o3AuXpPOrdKi3KlC48TSw1App6UFZqp0eXFIlbznKosDC77m1+sQG41hga
eedQ4fis7e7jHCNQjKadDfxBhfNxSsWYjgbVStENt8PGoOnQqd4Fm0CXmn9K
3GgMm185juiyzACv6VuSWNAgRJUgyOKag9Y191xxEg1sYif4MToWLM+PBlpK
s+UJGzb0snHNDVM6+ExShBLpWpDLyA0fj9LBmpcsQDfXg93evKHoEjoUtXp6
2su5wNH1PvfF6XAi8iP2odoebg8xtEVeDGDm6h4M/nKEaBdF0IvTDAgwta2X
ipwhsauhZUDFAGmJvSxuzAX6Ggbn3v5kQIJ/ZCFv2gnmMdWFRS8m0Lou0Xwn
HUA9u/pAdAoT5Kl1mGSCC8v7ZQJfZGlZ8Z4DzZ1bvjqNMiGqnSOjG7OhZNsz
dYcVBrKodL0w1hyGsCtCbSgGcZ18X/fXGGCpHv4DFzHok7z37t5HhtDynJ3x
tRiI8QNwPuIb2sB3O9g6hsH/uzSbNGfhLJMVbz+46E3ZRfhh94MMhphwUqC8
2eQ+4TpcvpHdSzi9aX+A70/Cy/e5esWV1uX1/cGE9aRwfayY8J5HylKHO4TL
ArhCp2eEmWvaTyV/ITyra4y6SDVd8f4k3vPvVoSjblXct3AlHLKrQ/2ZT/iM
c6c2PozwVY/4D7djCf8Gf29f6w==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {-0.15060577328486247`, 0}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 13.949977998232724`}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"sl\"", TraditionalForm]}, 
     AxesOrigin -> {-0.15060577328486247`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{-0.08529884504629377, 4.0943445622221}, {
       0, 13.949977998232724`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157613663657*^9, 3.7574209199367943`*^9, 
  3.7574210885877657`*^9, 3.759854226386471*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expectedZ", "[", 
    RowBox[{"\[Xi]_", ",", " ", "\[Beta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "vatpMinGlobal", 
      RowBox[{"vatpMaxGlobal", "[", "\[Xi]", "]"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"vgMinLocal", "[", "vatp", "]"}], 
         RowBox[{
          RowBox[{"vgMaxLocal", "[", "\[Xi]", "]"}], "[", "vatp", "]"}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vatp", " ", "-", " ", "mE"}], ")"}], "*", "y"}], ")"}], 
         RowBox[{"\[DifferentialD]", "vg"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "vatp"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"expectedZ", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], " ", "-", " ", 
     RowBox[{"\[Delta]lac", " ", "*", " ", 
      RowBox[{"w", "[", 
       RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}]}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "/", "\[Phi]"}]}], ";"}], 
  " "}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756646231674797*^9, 3.7566462766912527`*^9}, {
  3.756646351129581*^9, 3.756646455662877*^9}, {3.756646493272894*^9, 
  3.7566465827361526`*^9}, {3.756649372856316*^9, 3.7566493741910057`*^9}, {
  3.756666482797419*^9, 3.7566665213320913`*^9}, {3.756667352701457*^9, 
  3.7566673928960943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showDilutionRate"], "Input",
 CellChangeTimes->{{3.7566782887993717`*^9, 3.756678291722348*^9}}],

Cell[BoxData[
 StyleBox["\<\"Dilution Rate\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757157762914867*^9, 3.757421317349083*^9, 
  3.759855592349468*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQMhyUla5+cttn9v+eufk94z+ykXLs/bDeRzM6+t
ejX5o33di2mi7nD5b/ZTdlknSc5dbG/c+/a744Gf9hFhQRG3Zi22Z1LQ+sW9
+o+93+ms04bTF9uHRxmtK1L6b/9dQ7T/+MTF9sWrre03LWJwuFH3sMy5C2Y+
o0Phnfgw34bF9mKhW3dvzGZycA9UYOwtXmzvY16//bEes8PtN5u8ViUvtq+d
d3mP2ENmh437lrP5Biy2D+wx1GZpZXHwutbHIWu52H757utip2RYHbSdfygf
kl1sL+/haym2itXhikiJzpO/i6DuZ3M4FTXpq9bNRfZV9b8OZq9ic+hTeRxk
t36RfdvEbKtqeXaHxY3fxI/VL7LX2czCZtbH7tDbGCOR5bXIfuLj4mqn7+wO
Z42Xql/iW2S/cV3+FL1oDofnyxMkl51ZaH/iqG15yS4Oh5i3cgd7mxfaf9h8
8W+tKKfDBuGCTwbGC+1/6kyqWZ7D6ZCq9aTB/PYCaPhxOvxz4HbwrF5gf1bq
w6spAlwO/9JKmfmEF9hPaGHecT+Wy+F8eKpttMt8e2WvadeiVnA5VNgtOzU/
YJ69/L+zpy0+cDkwLDwbauk11372Ne6fy0y5HbLm/W4tN5hjH6U90eNcBbfD
3tAAplVMs+2zT+zYd3knt4OAkIYY76KZ9hd3XP1y4we3A/OmH5G9bVPsv/Hu
bPxjyuPg8/gT/0etCfZHP/MHRxXyOEzJEHDrvdMBjV8eh3qbXRlrs5vs9x63
eqfxmMehy5F9Xem6SvsVjoePHpPkdTCQ9259+CLf/hpvR8ZPP14HhW9zoguX
xdrLMa7uWt/I6wBLdwBTHRqO
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBWIQDQO3lz3QOj9vsf17y1//nPSe2Xc/99HfB+RzM6+t
ejX5o/22w+5vI+Dy3+wdvq8/HjR3sb1x79vvjgd+2vPYpSjGz15sz6Sg9Yt7
9R/7f8HOsYYzFtuHRxmtK1L6b//ri/a9msmL7YtXW9tvWsTg8OTOH7avPTDz
GR0WHJ9i5duy2F4sdOvujdlMDkKFl25bVC629zGv3/5Yj9lBduoU3+zsxfa1
8y7vEXvI7LDs/c5P06MW2wf2GGqztLI4TLBR1CtyW2y/fPd1sVMyrA77zVcm
rdVbbC/v4WsptorVQXyuwec/QjD3sznUakxzEvm8yL6q/tfB7FVsDpem7ti8
7Nwi+7aJ2VbV8uwOfxeUrUxfusheZzMLm1kfu8MD1vVtXOWL7Cc+Lq52+s7u
EN/gsM7JeZH9xnX5U/SiORziznA2H+ZcZH/iqG15yS4Oh0NLX6Y7nFpo/2Hz
xb+1opwOuSf27c9pWWj/U2dSzfIcTgeXD+lvf5svhIYfp4P2zcPBC58ssD8r
9eHVFAEuBzb7jaECXQvsJ7Qw77gfy+Ww/S5f2B/1BfbKXtOuRa3gcvB4VJZv
WDPfXv7f2dMWH7gcErK0dxvOmGc/+xr3z2Wm3A61p3+EJCyeax+lPdHjXAW3
Q1btHCaVuXPss0/s2Hd5J7fDpQ6GBRyZs+0v7rj65cYPbgfzv30THp+YZv+N
d2fjH1MeB5nVvh8aXkyyP/qZPziqkMeBRTGJ0SSgHxq/PA6f3kbeuXe7037v
cat3Go95HIza96tFerbar3A8fPSYJK/DpUcat7hLGu2v8XZk/PTjdZjzdnGq
f2mNPW+RkfXlJl6HVV94N3/6Vmbvt6bPNXUrr8N3n0+206SL7HVt9UL2P+N1
+FHHEehyPMte8I2I2AcxPoe8LbO3aDyMs3cO+WPG6sbnYCASvGhitpF9UNHx
Sff8+Rxg6RgArYpG1w==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw9Ug0wmwcYTv0kSL4kRqOlW4z2FKE3U6rY+za9tKqjutpp9LTaceXkrvOz
KmKKMS1NYy1t42eSb0Mpq5r5m7bT0/oZGzas5awioa6ZbKYkC2Z3uufuveee
e+6ee+9537fPnPsg2ohCofitz3/8GouxHc4/lZMw76Nf5burAQJtBC3rmm5c
lzp37U8Y687p2vW//wqiTppEDZSS8O4VzdK+hzr4PFvyG09GgpG9i55ea4CZ
u9xJZREJYeEe9QkOa+B0qtGt4CoJibW+cE9BQQ1V8On93Nf5m3Dc/udLVmkk
cD5sam+IM0LZjhDz7SIS3vfOaFa6G2PflYdNeUIS0suHv+c8N0aroW0BT/kk
HC14x9UkxwRt4iJTGpxIqGof5fRuM0XxYK5RFY0EbkCQD6fGFNXp+aXHphQb
+1NRPxtLCWlWQGqG/oe4GiqeyH9zxjNXAbmFcXvTuDS8OyE3LwlWAK/RhOol
oWHJ8b/s7dgKKFQmpvGXaNiZZKEO6pVDQ/256+4nzLC3RmX5o1gO3V3+yUlt
ZhiWmBHh7iQHbePgSvpmcyQODmcSPRWg430hrhKZo7R83NvoTMVGf+u+yi0+
UPkl9Ntq566zLdA5+Z+Ut+bLQfqZcctkhAW2TW8xNKjLwDGweCS82gIZ3PRY
r55S4K729+3RWuBZG67nRFEJlIzQdZW76Wj9YLF/9LAMwl0LAwYu0PEkbbk6
bO4mxHW33B9upeNp+UxhZcQNGGz59e+xZToWzEZ9bSu/Bq+I1kzDbgbi3Nk3
ttyWQtcC61h4PAN7n0lC4ssLNu7LQK1mKkMwmwcdT/b+sVPJQDVovINXcqB6
36Oux1sJnOf9wn7alA0jRF6MLpjAohydo/NCJhAJHr7DWQRWmyoyb5RdhOA7
EkF0E4EBB4sTKYIMcPN3D32gJnB0QWMGV9PB8qU1R8thomYwPzvoo2TYH2rw
Mj3AxCFVmZ2ElwBf9ZDn6UlMFOpu/R4kEIGIL+1gyplYGTMxVboaDd9ppbts
+5kovrfax7c9DZ+0h/jtWWaiw3PV+R5J+MZ/slBjKPh2XhoK39jdaR46zEI7
Z/JUdesRWKMcXYtMYmETNf4iPzQADt2ur9lRykJV3aEB8yw+1Po5xOx8xMLj
+8Uu+jFfYFh1Jn/8goVKfapPZYUnLKy2CbNobFS5jtRbT7tBiMilb3ErG9M8
MovbFreDUFYn38xjo2wTVfjshR0EHXjcNe3Pxpcul4SXl9iQ4vxEF32EjS4X
KCvTagrke0SPl0SyMcox0bJzcuK9fwGXlrJe
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {2.311726722939087, 0}, PlotRange -> 
     NCache[{{
         Log[10], 4.0943445622221}, {0, 0.03832099340827507}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.03832099340827507}}], 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, 
     AxesOrigin -> {2.311726722939087, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> NCache[{{
         Log[10], 4.0943445622221}, {0, 0.03832099340827507}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.03832099340827507}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757157763058894*^9, 3.757421318297165*^9, 
  3.759855592537436*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"\[Xi]_", ",", "\[Beta]_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Xi]", ",", "\[Beta]"}], "]"}], "*", 
     RowBox[{"\[Xi]", "/", "\[Phi]"}]}]}], ";"}], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.756681254309004*^9, 3.756681275087467*^9}}],

Cell[CellGroupData[{

Cell[BoxData["showCellDensity"], "Input",
 CellChangeTimes->{{3.757158133262442*^9, 3.757158134362485*^9}, {
  3.75715921609923*^9, 3.7571592226567163`*^9}}],

Cell[BoxData[
 StyleBox["\<\"Cell Density\"\>",
  StripOnInput->False,
  FontSize->25]], "Print",
 CellChangeTimes->{3.757159441442484*^9, 3.7574215053499107`*^9, 
  3.759856199500166*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQPrjA6InZmUYvfe8tc/J71n9g0fGJS37OWy52Ze
W/Vq8kf7LfXHdxQ5mttD5L/Zd0jGTlizKcjeuPftd8cDP+0v31nnXDEv1Z5J
QesX9+o/9pdymeW1TpXYh0cZrStS+m/PsOn+ofojjfbFq63tNy1icPBukX1R
+rMbaj6jw9uYiwlWu6bYi4Vu3b0xm8nh5tqrDx4HzLX3Ma/f/liP2SHiZeMO
wV+L7WvnXd4j9pDZ4fwK11W/MlfZB/YYarO0sjioldfvZmPfaL9893WxUzKs
DsGPDs4+V7PVXt7D11JsFatDmPzG8Kp5u6DuZ3O41njNzsTygH1V/a+D2avY
HOS0T2aV1B22b5uYbVUtz+5wWGPxxO/yx+11NrOwmfWxO0w6WOKfIHvafuLj
4mqn7+wOOiyRgudKzttvXJc/RS+aw+Gu52zncMFL9ieO2paX7OJw2CKoZXFs
whX7D5sv/q0V5XQQDkh4+Nbkuv1PnUk1y3M4Haa0HJ/28MdNaPhxOhT9/lRV
eO2O/VmpD6+mCHA5OGUUTuc5dt9+QgvzjvuxXA6cOiKXA+If2it7TbsWtYLL
wXcvj8v+W4/s5f+dPW3xgcuh+OEJE3H/J/azr3H/XGbK7TBZ/6Gn9tan9lHa
Ez3OVXA7vDj88OsJluf22Sd27Lu8k9vBZf5y6QSJF/YXd1z9cuMHt4P/0ce+
zuZP7b/x7mz8Y8rjwNch2dod9Mj+6Gf+4KhCHod5XJcnFJy7B41fHodpV/+K
TH1yw37vcat3Go95HBa0M/+78uCS/QrHw0ePSfI6OLJ/K7xZetL+Gm9Hxk8/
XodF259VxM3faW8mEtM2o5HXAZbuACAaJ9w=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1Un0s1AEYPsfh7n6/I+qSiGhL4Yx25CzvS4r0ISJ1ZiKqdRWhyMekUTZf
nc9kMqIzn6mZj5BCpxNCjmpNupEsXOsQiWrp2Z49fzzbs3fv82wNCPYIolIo
FPM//Kv/4XPHaeOrjED7WdulFUfOBFzybimqb2EAU7kqairzGxQ6+4zecrCB
f/48EAf7nGWPPGBX6vSCQ9sizJVq1jIKg4BquHOJWbEMxzsue9l2h4M336o6
1GgVhB6KHuJFPIRV2MGjYgoW2STqu/9KXstXQvqV86Ko1ixge9U9qRVQcYbu
rxZysgAO2cTVyzjKyI+zG2NRSyD23mAze0wZ8/UsnFiR5eCeYmmqkqiCYjFF
XapVC6Inw2yJHg3nxLMGg+l1YOBy2JZdTsNKozxDorlp7X5VVLm6TRzv1gZR
cUvPBOWqqNhxYLNtYTvcFAp40QZqqCW5S6e6icHssYqqdZoaTutscU3y6wah
LCzacUENJ7pKTba/7oPa6uAsjo869kUkJ51yG4Cuzj0R4U3qeN+95KxE9gbk
j/t/xW6gY8gpcEgqHoZFs4wY0QU62s+AUf+td2v/o6O7ubFje9oH6NGVT2Vp
MrDfTJtWeuIj3E5Qbhj1ZWCmjX60kmIMjF1zpPwyBvo2fRJpZsvAYKWne7ec
gZNVOv5l1uOQL2UuPuAy8RqvJLB7YAL4pkKX3kgmBjfXxOQFTIKgq6F1sJGJ
nLlrCo2OL9DfMKQY+cHEvnRpNpH6GebJxvhlLoGNNKe5uxfHofO7xjH+ZQIl
L69zE87I1volUMTvkE5FjkGLmDdjIiPQT4+hn3xwFMoc2jtfbCLxKKQnrL59
D1Iy6dziERIlBdGna3JHgAy1shu8QaJFRv26n6FDcKQybV9QHYlVZkJpiP0A
mO/heD6dIPEhtzcnkeiBdV/Xs+VsFvIKtPN8Kc9hr+eyNW0/Cy1JnpUuMxcE
FimyE24s/L/j35KzPg4=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1UnlM0wcYLVCu3sr4JaBJmU5l5VJcQc7vAwUElXscXczMtIsBEjboxlHE
tZvMjUEoMjAyFhFRBpRDzlKYHBZYORauuo1FKAWGhI12lqOMY1vGXvLy/njJ
y5fvvdffS47kG5NIJO9/+K/+j0GuFTFceM131WNr1995Eaz+0kvquyhANZFm
Lt/Rwcq7LkSsnzv856/DwaCMg/wnkXA67/cNv24DVPmu6NrL+GBsx9mi1mzD
fTm/d2BQALE817qUI3tQmN27k94rgtQaL3jygIRTngmWSfrc/XwjVDlVCmqb
i4B4u0XemGiMb51QzrYHlMFF95ttGmcTlESS8spXK+DGtxOdhNoEV8s0/sWx
1RDx1SkH8i0y2k/Uf3l3owEey58TysOm2HJcn7V2tQXY5y95ENWmKFkSKp+n
dezfb4bNUwXnWIe7IfPmVk9itRmOclmLFVF9kCNJ9BSyzbHy3lNr0Vw/ODaR
zdzyzTGkq5Cm7VeCRJMq9N8wxxP0YVHqzig01iUXOb9jgSWKkgPB3WMwqPBJ
E3RYYM8uOTP0jUnQNo3t3LC2xKs+OcGyShUYHAuzHidZ4ubx7Ca278/7/7PE
7buH4ssWpmHEVrtcxKLgxJ+3AhsKX0DBZybtM5cpuKSQnaKUzcLRkGIVr4qC
xZyva0J/UwN7d2TojJaC9Oi15M/tNFCqohoecam4wZ4bNcA88Bwk50fTqchu
SLCXeS1A4mD79xMyKrpYB6UPrS/AWPuU/qdNKhry1G42IfOwTpeJtrk0pApT
vxCr50DxihnF+5CGXmI9x0Gu3u+Xhp/w9cLIyVnoGvD8w15DQ3RazmNwZqHK
r0/Rb0NH/0lRD1UwAyr67euGUDqOB5JPr5jOAD3F1WtCTMeYF7xqheUMhNbm
B/Bb6Pg+MSw+KZoBJx/n6KeLdORmxYUlW8zCgZXXCC3BwJNzwUHSc9NwNnrb
zTSQgUUeQS8DOlXw8IeKj6kCBiqbo8ixunFI8i/oYpQzUKN0dC3J+RFatQUu
tiMMnG7lEWHOSvhIHu59ZpOBRhfl7hqpYn+fTKzLj7Plq3ug/lBt2/gFJq7q
KAppTBfskSL2rgiYGEFIzX9ZbIPg7+qqj33DRGnApx1HLzRBjfeR6/Z9TNQ9
6+xLeVYHNKvetA9eMjFhSXu2z64KXu12xIvNWRij6mjUZT2A8CTO0JoNC7MD
bYbE10oh/p603NqRhUmj6fcv4x24FNivmPdhoZKzKxNIb0PGmwMGfhgLp0q4
ua0LGZDryv+19AoLj4XbGfUQcfA35Dq7dg==
         "]]}}}, {}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, AxesOrigin -> {2.311726722939087, 0}, PlotRange -> 
     NCache[{{
         Log[10], 4.0943445622221}, {0, 0.8051833891801488}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.8051833891801488}}], 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Xi]\"", TraditionalForm], 
       FormBox["\"X\"", TraditionalForm]}, 
     AxesOrigin -> {2.311726722939087, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Part[#, 2]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, PlotRange -> NCache[{{
         Log[10], 4.0943445622221}, {0, 0.8051833891801488}}, {{
        2.302585092994046, 4.0943445622221}, {0, 0.8051833891801488}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 
        Scaled[0.02]}, {0, 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]: 0.0001\"", "\"\[Beta]: 199.\"", "\"\[Beta]: 1990.\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.757421505456357*^9, 3.759856199668252*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 703},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 567, 8, 44, "Subsection"],
Cell[1150, 32, 1915, 30, 80, "Input",
 InitializationCell->True],
Cell[3068, 64, 39408, 852, 2035, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[42513, 921, 406, 6, 85, "Title"],
Cell[CellGroupData[{
Cell[42944, 931, 634, 9, 59, "Chapter"],
Cell[CellGroupData[{
Cell[43603, 944, 834, 16, 57, "Subchapter"],
Cell[44440, 962, 2339, 54, 119, "Text"],
Cell[CellGroupData[{
Cell[46804, 1020, 404, 6, 44, "Subsection"],
Cell[47211, 1028, 2639, 57, 199, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49899, 1091, 785, 16, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[50709, 1111, 432, 6, 44, "Subsection"],
Cell[51144, 1119, 3389, 74, 317, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54570, 1198, 413, 6, 44, "Subsection"],
Cell[54986, 1206, 2412, 49, 281, "Text"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57459, 1262, 602, 9, 59, "Chapter"],
Cell[CellGroupData[{
Cell[58086, 1275, 870, 20, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[58981, 1299, 257, 4, 44, "Subsection"],
Cell[59241, 1305, 526, 8, 65, "Text"],
Cell[59770, 1315, 610, 9, 65, "Text"],
Cell[60383, 1326, 1067, 15, 28, "Text"],
Cell[61453, 1343, 315, 5, 28, "Text"],
Cell[61771, 1350, 633, 17, 28, "Input",
 InitializationCell->True],
Cell[62407, 1369, 309, 5, 28, "Text"],
Cell[62719, 1376, 487, 13, 28, "Input",
 InitializationCell->True],
Cell[63209, 1391, 1163, 18, 28, "Text"],
Cell[64375, 1411, 6195, 93, 28, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[70607, 1509, 363, 5, 44, "Subsection"],
Cell[70973, 1516, 739, 11, 28, "Text"],
Cell[71715, 1529, 10170, 192, 284, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81910, 1725, 207, 3, 28, "Input"],
Cell[82120, 1730, 783, 19, 32, "Print"],
Cell[82906, 1751, 69102, 1148, 254, 19543, 335, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152069, 2906, 858, 17, 57, "Subchapter"],
Cell[CellGroupData[{
Cell[152952, 2927, 387, 5, 44, "Subsection"],
Cell[153342, 2934, 1802, 26, 104, "Text"],
Cell[155147, 2962, 1270, 25, 28, "Input",
 InitializationCell->True],
Cell[156420, 2989, 1267, 18, 28, "Text"],
Cell[CellGroupData[{
Cell[157712, 3011, 699, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[158436, 3025, 816, 14, 33, "Print"],
Cell[159255, 3041, 871, 15, 21, "Print"],
Cell[160129, 3058, 969, 17, 21, "Print"]
}, Open  ]],
Cell[161113, 3078, 146649, 2458, 195, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307811, 5542, 388, 5, 44, "Subsection"],
Cell[308202, 5549, 1199, 16, 28, "Text"],
Cell[309404, 5567, 1103, 21, 28, "Input",
 InitializationCell->True],
Cell[310510, 5590, 1318, 19, 28, "Text"],
Cell[311831, 5611, 2708, 48, 50, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[314564, 5663, 200, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[314789, 5670, 259, 5, 33, "Print"],
Cell[315051, 5677, 299, 6, 21, "Print"],
Cell[315353, 5685, 465, 10, 22, "Print"]
}, Open  ]],
Cell[315833, 5698, 34008, 624, 220, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[349890, 6328, 397, 5, 44, "Subsection"],
Cell[350290, 6335, 476, 6, 28, "Text"],
Cell[350769, 6343, 1310, 26, 49, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[352104, 6373, 115, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[352244, 6379, 299, 6, 33, "Print"],
Cell[352546, 6387, 348, 7, 21, "Print"],
Cell[352897, 6396, 516, 11, 22, "Print"]
}, Open  ]],
Cell[353428, 6410, 40330, 733, 237, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[393807, 7149, 467, 6, 44, "Subsection"],
Cell[394277, 7157, 524, 7, 28, "Text"],
Cell[394804, 7166, 1480, 28, 49, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[396309, 7198, 241, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[396575, 7206, 386, 8, 33, "Print"],
Cell[396964, 7216, 648, 15, 22, "Print"]
}, Open  ]],
Cell[397627, 7234, 34323, 636, 242, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[432023, 7878, 696, 10, 59, "Chapter"],
Cell[432722, 7890, 821, 11, 28, "Text"],
Cell[433546, 7903, 1376, 29, 50, "Input",
 InitializationCell->True],
Cell[434925, 7934, 843, 12, 28, "Text"],
Cell[435771, 7948, 592, 15, 28, "Input",
 InitializationCell->True],
Cell[436366, 7965, 944, 13, 28, "Text"],
Cell[CellGroupData[{
Cell[437335, 7982, 118, 1, 28, "Input"],
Cell[437456, 7985, 199, 5, 33, "Print"],
Cell[437658, 7992, 19457, 392, 255, "Output"]
}, Open  ]],
Cell[457130, 8387, 2258, 47, 69, "Input",
 InitializationCell->True],
Cell[459391, 8436, 897, 12, 28, "Text"],
Cell[460291, 8450, 637, 16, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[460953, 8470, 315, 4, 28, "Input"],
Cell[461271, 8476, 168, 4, 33, "Print"],
Cell[461442, 8482, 19336, 389, 255, "Output"]
}, Open  ]],
Cell[480793, 8874, 1834, 50, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[482652, 8928, 110, 1, 28, "Input"],
Cell[482765, 8931, 187, 5, 33, "Print"],
Cell[482955, 8938, 18841, 379, 254, "Output"]
}, Open  ]],
Cell[501811, 9320, 394, 11, 28, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[502230, 9335, 157, 2, 28, "Input"],
Cell[502390, 9339, 188, 5, 33, "Print"],
Cell[502581, 9346, 18824, 378, 257, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

